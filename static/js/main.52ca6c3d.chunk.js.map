{"version":3,"sources":["services/redux/employee/actions.js","services/api/urls.js","services/redux/department/actions.js","App.js","reportWebVitals.js","services/redux/auth/actionTypes.js","services/redux/auth/reducers.js","services/redux/department/actionTypes.js","services/redux/department/reducers.js","services/redux/supplier/actionTypes.js","services/redux/supplier/reducers.js","services/redux/request/actionTypes.js","services/redux/request/reducers.js","services/redux/employee/actionTypes.js","services/redux/employee/reducers.js","services/redux/quotation/actionTypes.js","services/redux/quotation/reducers.js","services/redux/request-category/actionTypes.js","services/redux/request-category/reducers.js","services/redux/float/actionTypes.js","services/redux/float/reducers.js","services/redux/petty-cash/actionTypes.js","services/redux/petty-cash/reducers.js","services/redux/root-reducer.js","services/sagas/auth/index.js","services/api/department/index.js","services/sagas/department/index.js","services/api/supplier/index.js","services/sagas/supplier/index.js","services/sagas/employee/index.js","services/sagas/request/index.js","services/api/quotation/index.js","services/sagas/quotation/index.js","services/api/request-category/index.js","services/sagas/request-category/index.js","services/api/float/index.js","services/sagas/float/index.js","services/api/petty-cash/index.js","services/sagas/petty-cash/index.js","services/sagas/index.js","store.js","index.js","services/app-storage/index.js","services/redux/supplier/actions.js","services/app-storage/key-values.js","util/routes.js","services/redux/request/actions.js","services/redux/float/actions.js","services/redux/petty-cash/actions.js","util/request-types.js","presentation/AuthenticatedRoute/index.js","services/redux/quotation/actions.js","util/common-helper.js","util/browser-history.js","services/redux/request-category/actions.js","services/redux/auth/actions.js","services/api/employee/index.js","services/api/auth/index.js","util/notification.js","services/api/apiRequest.js","services/api/item-request/index.js","util/quotation-types.js"],"names":["createActions","fetchEmployees","fetchEmployeesSuccess","fetchEmployeesFailure","getEmployee","getEmployeeSuccess","getEmployeeFailure","createEmployee","createEmployeeSuccess","createEmployeeFailure","updateEmployee","updateEmployeeSuccess","updateEmployeeFailure","deleteEmployee","deleteEmployeeSuccess","deleteEmployeeFailure","resetEmployee","Types","Creators","BASE_URL","process","AUTH_BASE_URL","DEPARTMENTS_ENDPOINT","SUPPLIERS_ENDPOINT","EMPLOYEE_ENDPOINT","fetchDepartments","fetchDepartmentsSuccess","fetchDepartmentsFailure","getDepartment","getDepartmentSuccess","getDepartmentFailure","createDepartment","createDepartmentSuccess","createDepartmentFailure","updateDepartment","updateDepartmentSuccess","updateDepartmentFailure","deleteDepartment","deleteDepartmentSuccess","deleteDepartmentFailure","resetDepartment","Login","React","lazy","Home","Department","Supplier","Employee","MyRequest","Request","NotAuthorized","Procurement","Dashboard","Store","Settings","Account","Report","Audit","QuotationView","connect","store","authUser","auth","user","props","Suspense","fallback","path","component","AuthenticatedRoute","DASHBOARD_ROUTE","PROCUREMENT_ROUTE","REQUEST_ROUTE","MY_REQUESTS_ROUTE","DEPARTMENTS_ROUTE","SUPPLIERS_ROUTE","EMPLOYEE_ROUTE","exact","HOME_ROUTE","LOGIN_ROUTE","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTypes","LOCAL_STORE_USER","getLocalStateObject","AUTH_USER_KEY","LOCAL_STORE_TOKEN","getLocalState","AUTH_TOKEN_KEY","console","log","INITIAL_STATE","id","undefined","firstName","lastName","fullName","email","phoneNo","department","name","description","enabled","role","token","loading","HANDLERS","LOGIN","state","error","LOGIN_SUCCESS","action","responseData","employee","LOGIN_FAILURE","LOGOUT","RESET_AUTH","createReducer","errors","departments","submitting","submitSuccess","FETCH_DEPARTMENTS","FETCH_DEPARTMENTS_SUCCESS","FETCH_DEPARTMENTS_FAILURE","CREATE_DEPARTMENT","CREATE_DEPARTMENT_SUCCESS","concat","CREATE_DEPARTMENT_FAILURE","submitSucces","UPDATE_DEPARTMENT","UPDATE_DEPARTMENT_SUCCESS","map","item","UPDATE_DEPARTMENT_FAILURE","DELETE_DEPARTMENT","DELETE_DEPARTMENT_SUCCESS","departmentId","filter","DELETE_DEPARTMENT_FAILURE","RESET_DEPARTMENT","suppliers","supplier","loaidng","FETCH_SUPPLIERS","FETCH_SUPPLIERS_SUCCESS","FETCH_SUPPLIERS_FAILURE","CREATE_SUPPLIER","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAILURE","UPDATE_SUPPLIER","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAILURE","DELETE_SUPPLIER","DELETE_SUPPLIER_SUCCESS","supplierId","DELETE_SUPPLIER_FAILURE","GET_SUPPLIER","GET_SUPPLIER_SUCCESS","GET_SUPPLIER_FAILURE","RESET_SUPPLIERS","requests","FETCH_REQUESTS","FETCH_REQUESTS_SUCCESS","FETCH_REQUESTS_FAILURE","CREATE_REQUEST","CREATE_REQUEST_SUCCESS","CREATE_REQUEST_FAILURE","UPDATE_REQUEST","UPDATE_REQUEST_SUCCESS","UPDATE_REQUEST_FAILURE","DELETE_REQUEST","DELETE_REQUEST_SUCCESS","DELETE_REQUEST_FAILURE","RESET_REQUEST","employees","FETCH_EMPLOYEES","FETCH_EMPLOYEES_SUCCESS","FETCH_EMPLOYEES_FAILURE","CREATE_EMPLOYEE","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAILURE","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAILURE","DELETE_EMPLOYEE","DELETE_EMPLOYEE_SUCCESS","employeeId","DELETE_EMPLOYEE_FAILURE","RESET_EMPLOYEE","quotations","FETCH_QUOTATIONS","FETCH_QUOTATIONS_SUCCESS","FETCH_QUOTATIONS_FAILURE","UPDATE_QUOTATION","UPDATE_QUOTATION_SUCCESS","quotationId","UPDATE_QUOTATION_FAILURE","CREATE_QUOTATION","CREATE_QUOTATION_SUCCESS","CREATE_QUOTATION_FAILURE","RESET_QUOTATION","requestCategories","FETCH_REQUEST_CATEGORIES","FETCH_REQUEST_CATEGORIES_SUCCESS","FETCH_REQUEST_CATEGORIES_FAILURE","CREATE_REQUEST_CATEGORY","CREATE_REQUEST_CATEGORY_SUCCESS","CREATE_REQUEST_CATEGORY_FAILURE","RESET_REQUEST_CATEGORY","float_requests","my_float_requests","float_request","FETCH_FLOAT_REQUESTS","FETCH_FLOAT_REQUESTS_SUCCESS","FETCH_FLOAT_REQUESTS_FAILURE","FETCH_MY_FLOAT_REQUESTS","FETCH_MY_FLOAT_REQUESTS_SUCCESS","FETCH_MY_FLOAT_REQUESTS_FAILURE","CREATE_FLOAT_REQUEST","CREATE_FLOAT_REQUEST_SUCCESS","CREATE_FLOAT_REQUEST_FAILURE","UPDATE_FLOAT_REQUEST","UPDATE_FLOAT_REQUEST_SUCCESS","UPDATE_FLOAT_REQUEST_FAILURE","DELETE_FLOAT_REQUEST","DELETE_FLOAT_REQUEST_SUCCESS","DELETE_FLOAT_REQUEST_FAILURE","RESET_FLOAT_REQUEST","petty_cash_requests","petty_cash_request","my_petty_cash_requests","FETCH_PETTY_CASH_REQUESTS","FETCH_PETTY_CASH_REQUESTS_SUCCESS","FETCH_PETTY_CASH_REQUESTS_FAILURE","FETCH_MY_PETTY_CASH_REQUESTS","FETCH_MY_PETTY_CASH_REQUESTS_SUCCESS","FETCH_MY_PETTY_CASH_REQUESTS_FAILURE","CREATE_PETTY_CASH_REQUEST","CREATE_PETTY_CASH_REQUEST_SUCCESS","CREATE_PETTY_CASH_REQUEST_FAILURE","UPDATE_PETTY_CASH_REQUEST","UPDATE_PETTY_CASH_REQUEST_SUCCESS","UPDATE_PETTY_CASH_REQUEST_FAILURE","DELETE_PETTY_CASH_REQUEST","DELETE_PETTY_CASH_REQUEST_SUCCESS","DELETE_PETTY_CASH_REQUEST_FAILURE","RESET_PETTY_CASH_REQUEST","PettyCash_requests","combineReducers","authReducer","departmentReducer","supplierReducer","request","requestReducer","employeeReducer","quotation","QuotationReducer","requestCategory","requestCategoryReducer","petty_cash","pettyCashReducer","float","FloatReducer","login","logout","watchLogin","watchLogout","payload","password","call","signIn","response","status","data","storeLocalState","put","loginSuccess","history","push","openNotification","message","loginFailue","loginFailure","clearLocalState","takeLeading","getDepartments","query","apiRequest","method","url","saveDepartment","deptId","watchFetchDepartments","watchCreateDepartment","watchUpdateDepartment","watchDeleteDepartment","updateDepartmentApi","deleteDepartmentApi","takeLatest","getSuppliers","queryStr","serializeQueryParams","saveSupplier","updateSupplier","deleteSupplier","fetchSuppliers","createSupplier","watchFetchSuppliers","watchCreateSupplier","watchUpdateSupplier","watchDeleteSupplier","fetchSuppliersSuccess","fetchSuppliersFailure","createSupplierSuccess","createSupplierFailure","updateSupplierApi","updateSupplierSuccess","updateSupplierFailure","deleteSupplierApi","deleteSupplierSuccess","deleteSupplierFailure","watchFetchEmployees","watchCreateEmployee","watchUpdateEmployee","watchDeleteEmployee","watchGetEmployee","fetchEmployeesApi","getEmployeeApi","EmployeeId","saveEmployeeApi","updateEmployeeApi","deleteEmployeeApi","GET_EMPLOYEE","fetchRequests","createRequest","updateRequest","watchFetchRequests","watchCreateRequest","watchUpdateRequest","fetchRequestsApi","includes","fetchRequestsSuccess","fetchRequestsFailure","errorText","createRequestApi","createRequestSuccess","createRequestFailure","errorTxt","updateRequestApi","updateRequestSuccess","updateRequestFailure","getQuotations","service","getAllQuotations","requestType","ALL_QUOTATIONS","QUOTATIONS_WITHOUT_DOCUMENT","QUOTATIONS_WITHOUT_DOCUMENT_TEST","updateQuotation","documentId","createQuotation","file","userId","fd","FormData","append","fetchQuotations","watchFetchQuotations","watchUpdateQuotation","watchCreateQuotation","getAllQuotationsApi","fetchQuotationsSuccess","fetchQuotationsFailure","updateQuotationApi","updateQuotationSuccess","updateQuotationFailure","createQuotationApi","createQuotationSuccess","success","getRequestCategories","saveRequestCategory","fetchRequestCategories","createRequestCategory","resetRequestCategory","watchFetchRequestCategories","watchCreateRequestCategory","watchResetRequestCategory","getRequestCategoriesApi","fetchRequestCategoriesSuccess","fetchRequestCategoriesFailure","createRequestCategoryApi","createRequestCategorySuccess","createRequestCategoryFailure","resetRequest","saveFloatRequest","fetchMyFloatRequests","fetchAllFloatRequests","createFloatRequest","watchFetchFloatRequests","watchFetchMyFloatRequests","watchCreateFloatRequest","fetchAllFloatRequestsApi","fetchAllFloatRequestsSuccess","fetchAllFloatRequestsFailure","fetchMyFloatRequestsApi","RESPONSE_SUCCESS_CODE","fetchMyFloatRequestsSuccess","fetchMyFloatRequestsFailure","saveFloatRequestApi","createFloatRequestSuccess","createFloatRequestFailure","savePettyCashRequest","fetchAllPettyCashRequests","fetchPettyCashRequests","createPettyCashRequest","watchFetchMyPettyCashRequests","watchCreatePettyCashRequest","fetchAllPettyCashRequestsApi","fetchPettyCashRequestsSuccess","fetchPettyCashRequestsFailure","savePettyCashRequestApi","createPettyCashRequestSuccess","createPettyCashRequestFailure","rootSaga","all","createLogger","sagaMiddleware","createSagaMiddleware","middlewares","Boolean","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","basename","document","getElementById","field","localStorage","setItem","JSON","stringify","err","getItem","parse","removeItem","getSupplier","getSupplierSuccess","getSupplierFailure","resetSuppliers","UNAUTHORIZED_ROUTE","getRequest","getRequestSuccess","getRequestFailure","deleteRequest","deleteRequestSuccess","deleteRequestFailure","fetchFloatRequests","fetchFloatRequestsSuccess","fetchFloatRequestsFailure","getFloatRequest","getFloatRequestSuccess","getFloatRequestFailure","updateFloatRequest","updateFloatRequestSuccess","updateFloatRequestFailure","deleteFloatRequest","deleteFloatRequestSuccess","deleteFloatRequestFailure","resetFloatRequest","fetchMyPettyCashRequests","getPettyCashRequest","getPettyCashRequestSuccess","getPettyCashRequestFailure","updatePettyCashRequest","updatePettyCashRequestSuccess","updatePettyCashRequestFailure","deletePettyCashRequest","deletePettyCashRequestSuccess","deletePettyCashRequestFailure","resetPettyCashRequest","FETCH_REQUEST_TYPES","MY_REQUESTS","HOD_PENDING_REQUEST","ENDORSED_REQUESTS","PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS","REQUESTS_BY_SUPPLIER","DOCUMENTED_REQUESTS_BY_SUPPLIER","UPDATE_REQUEST_TYPES","ENDORSE","CANCEL","ASSIGN_SUPPLIERS","UPDATE_UNIT_PRICE","APPROVE","accessToken","Component","roles","rest","indexOf","createQuotationFailure","resetQuotation","prettifyDateTime","date","dateFormatter","generateHexColorString","Math","floor","random","toString","obj","Object","keys","reduce","a","k","encodeURIComponent","join","createHashHistory","resetAuth","getUsers","getUser","saveUser","updateUser","deleteUser","selfChangePassword","signOut","userHasAnyRole","type","notification","apiConfig","timeout","baseURL","axios","create","interceptors","use","config","headers","Promise","reject","statusText","resolve","authenticationService","saveRequest","getUserItemRequests","getEndorsedRequestItems","updateType","authUserId","endorseBulkItemRequest","cancelBulkRequest","addSuppliersToRequest","getAllItemRequests"],"mappings":"iJAAA,gFAEO,EAA4BA,wBACjC,CACEC,eAAgB,CAAC,SACjBC,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBC,YAAa,CAAC,cACdC,mBAAoB,CAAC,gBACrBC,mBAAoB,CAAC,SAErBC,eAAgB,CAAC,WACjBC,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBC,eAAgB,CAAC,aAAc,WAC/BC,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBC,eAAgB,CAAC,cACjBC,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBC,cAAe,OAtBJC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,0KAAO,IAAMC,EAAWC,oCAEXC,EAAgBD,qCAMhBE,EAAuB,gBAGvBC,EAAqB,cASrBC,EAAoB,e,gCCpBjC,gFAEO,EAA4BxB,wBACjC,CACEyB,iBAAkB,CAAC,SACnBC,wBAAyB,CAAC,gBAC1BC,wBAAyB,CAAC,SAE1BC,cAAe,CAAC,gBAChBC,qBAAsB,CAAC,gBACvBC,qBAAsB,CAAC,SAEvBC,iBAAkB,CAAC,WACnBC,wBAAyB,CAAC,gBAC1BC,wBAAyB,CAAC,SAE1BC,iBAAkB,CAAC,eAAgB,WACnCC,wBAAyB,CAAC,gBAC1BC,wBAAyB,CAAC,SAE1BC,iBAAkB,CAAC,gBACnBC,wBAAyB,CAAC,gBAC1BC,wBAAyB,CAAC,SAE1BC,gBAAiB,OAtBNvB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gKCOhBuB,EAAQC,IAAMC,MAAK,kBAAK,8EACxBC,EAAOF,IAAMC,MAAK,kBAAK,6EACvBE,EAAaH,IAAMC,MAAK,kBAAK,4EAC7BG,EAAWJ,IAAMC,MAAK,kBAAM,6EAC5BI,EAAWL,IAAMC,MAAK,kBAAM,6EAC5BK,EAAYN,IAAMC,MAAK,kBAAK,6EAC5BM,EAAUP,IAAMC,MAAK,kBAAK,6EAC1BO,EAAgBR,IAAMC,MAAK,kBAAK,yDAChCQ,EAAcT,IAAMC,MAAK,kBAAM,4EAC/BS,EAAYV,IAAMC,MAAK,kBAAM,6EAC7BU,EAAQX,IAAMC,MAAK,kBAAM,6EACzBW,EAAWZ,IAAMC,MAAK,kBAAK,6EAC3BY,EAAUb,IAAMC,MAAK,kBAAM,6EAC3Ba,EAASd,IAAMC,MAAK,kBAAK,6EACzBc,EAAQf,IAAMC,MAAK,kBAAM,6EACzBe,EAAgBhB,IAAMC,MAAK,kBAAM,6EA8BvC,I,EAIegB,eAJS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,KAAKC,QAGiB,KAAzBJ,EAhCf,SAAaK,GACX,OACE,mCACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,IAAD,IAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,aAAOC,KAAK,eAAeC,UAAWb,GAAaS,IACnD,cAAC,IAAD,aAAOG,KAAK,aAAaC,UAAWf,GAAWW,IAC/C,cAACK,EAAA,EAAD,CAAoBF,KAAI,UAAKG,KAAmBF,UAAWhB,IAC3D,cAAC,IAAD,aAAOe,KAAMI,IAAmBH,UAAWjB,GAAiBa,IAC5D,cAAC,IAAD,aAAOG,KAAMK,IAAeJ,UAAWnB,GAAae,IACpD,cAACK,EAAA,EAAD,CAAoBF,KAAMM,IAAmBL,UAAWpB,IACxD,cAACqB,EAAA,EAAD,CAAoBF,KAAMO,IAAmBN,UAAWvB,IACxD,cAACwB,EAAA,EAAD,CAAoBF,KAAMQ,IAAiBP,UAAWtB,IACtD,cAACuB,EAAA,EAAD,CAAoBF,KAAMS,IAAiBR,UAAWrB,IACtD,cAACsB,EAAA,EAAD,CAAoBQ,OAAK,EAACV,KAAMW,IAAaV,UAAWxB,IACxD,cAACyB,EAAA,EAAD,aAAoBF,KAAK,gBAAgBC,UAAWd,GAAcU,IAClE,cAACK,EAAA,EAAD,aAAoBF,KAAK,eAAeC,UAAWZ,GAAYQ,IAC/D,cAACK,EAAA,EAAD,aAAoBF,KAAK,kBAAkBC,UAAWV,GAAmBM,IACzE,cAAC,IAAD,aAAOG,KAAK,aAAaC,UAAWX,GAAWO,IAC/C,cAAC,IAAD,CAAOG,KAAMY,IAAaX,UAAW3B,IACrC,cAAC,IAAD,CAAO0B,KAAK,kBAAkBC,UAAWlB,IACzC,cAACmB,EAAA,EAAD,CAAoBF,KAAK,IAAzB,SAA8B,cAAC,IAAD,CAAUa,GAAIF,kBCnCvCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kECLCQ,wBAAY,gFAWzB,ICPIC,EAAmBC,YAAoBC,KACvCC,EAAoBC,YAAcC,KAExCC,QAAQC,IAAI,YAAaJ,EAAmB,YAAaE,KAEzDC,QAAQC,IAAI,YAAaP,GAEzB,I,gBAYMQ,EAAgB,CACpBpC,KAAM4B,GAba,CACnBS,QAAIC,EACJC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,WAAY,CAACP,QAAIC,EAAWO,KAAM,GAAIC,YAAa,IACnDC,SAAS,EACTC,KAAM,IAKNC,MAAOlB,GAAwC,KAC/CmB,SAAS,GAuDEC,GAAQ,mBAClBjG,EAAMkG,OAnDY,WAAoC,IAAnCC,EAAkC,uDAA1BjB,EAC5B,OAAO,2BACFiB,GADL,IAEEC,MAAO,KACPJ,SAAS,EACTD,MAAO,UA6CU,cAElB/F,EAAMqG,eA3CmB,WAAoC,IAAnCF,EAAkC,uDAA1BjB,EAAeoB,EAAW,uCAC7D,EAA4BA,EAAOC,aAA3BC,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,MAElB,OADAf,QAAQC,IAAI,OAAQuB,GACb,2BACFL,GADL,IAEEH,SAAS,EACTlD,KAAK,2BAAM0D,GAAP,IAAiBV,KAAMU,EAASV,KAAK,KACzCC,MAAOA,OAkCU,cAGlB/F,EAAMyG,eAjCmB,WAAoC,IAAnCN,EAAkC,uDAA1BjB,EAAeoB,EAAW,uCAC7D,OAAO,2BACFH,GADL,IAEErD,KAAM,GACNsD,MAAOE,EAAOF,MACdL,MAAO,KACPC,SAAS,OAwBQ,cAKlBhG,EAAM0G,QAzBa,WAAoC,IAAnCP,EAAkC,uDAA1BjB,EAC7B,OAAO,2BACFiB,GADL,IAEErD,KAAM,GACNiD,MAAO,KACPC,SAAS,OAeQ,cAQlBhG,EAAM2G,YAlBgB,WAAoC,IAAnCR,EAAkC,uDAA1BjB,EAChC,OAAO,2BACFiB,GADL,IAEErD,KAAM,GACNiD,MAAO,KACPC,SAAS,OAKQ,GAWNY,2BAAc1B,EAAee,GC5F7BxB,yBAAY,uaAyBzB,ICxBWS,GAAgB,CAC3B2B,OAAQ,KACRC,YAAa,GACbd,SAAS,EACTe,YAAY,EACZrB,WAAY,GACZsB,eAAe,GAqGJf,IAAQ,mBAClBjG,GAAMiH,mBAlGuB,WAAoC,IAAnCd,EAAkC,uDAA1BjB,GACvC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,EAAOC,eAAe,OAgG/D,cAElBhH,GAAMkH,2BA/F8B,WAAoC,IAAnCf,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxE,OAAO,2BAAKH,GAAZ,IAAmBW,YAAaR,EAAOC,aAAcP,SAAS,OA4F3C,cAGlBhG,GAAMmH,2BA5F8B,WAAoC,IAAnChB,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,WAwF9B,cAKlBpG,GAAMoH,mBA5EuB,WAAoC,IAAnCjB,EAAkC,uDAA1BjB,GACvC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OAsE/D,cAMlBhH,GAAMqH,2BAzE8B,WAAoC,IAAnClB,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAExE,OADAtB,QAAQC,IAAI,UAAWqB,GAChB,2BAAKH,GAAZ,IAAmBW,YAAaX,EAAMW,YAAYQ,OAAO,CAAChB,EAAOC,eAAgBQ,YAAY,EAAOC,eAAe,OAiEhG,cAOlBhH,GAAMuH,2BArE8B,WAAoC,IAAnCpB,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOoB,cAAc,OA6DtD,cASlBxH,GAAMyH,mBAlEuB,WAAoC,IAAnCtB,EAAkC,uDAA1BjB,GACvC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OAwD/D,cAUlBhH,GAAM0H,2BA/D8B,WAAoC,IAAnCvB,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxEtB,QAAQC,IAAI,2BAA4BqB,GACxC,IAAQC,EAAiBD,EAAjBC,aACR,OAAO,2BACFJ,GADL,IAEEW,YAAaX,EAAMW,YAAYa,KAAI,SAAAC,GACjC,OAAGA,EAAKzC,KAAOoB,EAAapB,GACnBoB,EAEAqB,KAGXb,YAAY,EACZC,eAAe,OAwCE,cAWlBhH,GAAM6H,2BA/C8B,WAAoC,IAAnC1B,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAmCvD,cAalBhH,GAAM8H,mBA3CuB,WAAoC,IAAnC3B,EAAkC,uDAA1BjB,GACvC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA6B/D,cAclBhH,GAAM+H,2BAxC8B,WAAoC,IAAnC5B,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAChE0B,EAAiB1B,EAAjB0B,aACR,OAAO,2BACF7B,GADL,IAEEW,YAAaX,EAAMW,YAAYmB,QAAO,SAAAL,GAAI,OAAGA,EAAKzC,KAAO6C,KACzDjB,YAAY,EACZC,eAAe,OAoBE,cAelBhH,GAAMkI,2BA/B8B,WAAoC,IAAnC/B,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACxE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAevD,cAiBlBhH,GAAMmI,kBA5BsB,WAAoC,IAAnChC,EAAkC,uDAA1BjB,GACtC,OAAO,2BACFiB,GADL,IAEEW,YAAa,GACbV,MAAO,KACPJ,SAAS,EACTe,YAAY,EACZS,cAAc,OAIG,GAoBNZ,2BAAc1B,GAAee,IChI7BxB,yBAAY,wYAyBzB,ICxBWS,GAAgB,CAC3B2B,OAAQ,KACRuB,UAAW,GACXC,SAAU,GACVC,SAAS,EACTvB,YAAY,EACZC,eAAe,GAoGJf,IAAQ,mBAClBjG,GAAMuI,iBAhGqB,WAAoC,IAAnCpC,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,UA8FvB,cAElB7G,GAAMwI,yBA7F4B,WAAoC,IAAnCrC,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBiC,UAAW9B,EAAOC,aAAcP,SAAS,OA0FzC,cAGlBhG,GAAMyI,yBA1F4B,WAAoC,IAAnCtC,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOgC,UAAW,QAsFhD,cAKlBpI,GAAM0I,iBAzEqB,WAAoC,IAAnCvC,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMX,MAAO,KAAMY,eAAe,OAmE9C,cAMlBhH,GAAM2I,yBAtE4B,WAAoC,IAAnCxC,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAEtE,OADAtB,QAAQC,IAAI,uBAAwBqB,GAC7B,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OA8DvD,cAOlBhH,GAAM4I,yBAlE4B,WAAoC,IAAnCzC,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OA0DvD,cASlBhH,GAAM6I,iBA9DqB,WAAoC,IAAnC1C,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMX,MAAO,KAAMY,eAAe,OAoD9C,cAUlBhH,GAAM8I,yBA3D4B,WAAoC,IAAnC3C,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtEtB,QAAQC,IAAI,wBAAyBqB,GACrC,IAAQC,EAAiBD,EAAjBC,aACR,OAAO,2BACFJ,GADL,IAEEa,eAAe,EACfoB,UAAWjC,EAAMiC,UAAUT,KAAI,SAAAU,GAC7B,OAAGA,EAASlD,KAAOoB,EAAapB,GACvBoB,EAEA8B,KAGXtB,YAAY,EAAOX,MAAOE,EAAOF,WAoChB,cAWlBpG,GAAM+I,yBA3C4B,WAAoC,IAAnC5C,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OA+BvD,cAalBhH,GAAMgJ,iBAxCqB,WAAoC,IAAnC7C,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMX,MAAO,KAAMY,eAAe,OA0B9C,cAclBhH,GAAMiJ,yBArC4B,WAAoC,IAAnC9C,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAEtE,OADAtB,QAAQC,IAAI,eAAakB,EAAMiC,UAAUH,QAAO,SAAAL,GAAI,OAAIA,EAAKzC,KAAOmB,EAAO4C,eACpE,2BACF/C,GADL,IAEEiC,UAAWjC,EAAMiC,UAAUH,QAAO,SAAAL,GAAI,OAAIA,EAAKzC,KAAOmB,EAAO4C,cAC7DnC,YAAY,EACZC,eAAe,OAiBE,cAelBhH,GAAMmJ,yBA5B4B,WAAoC,IAAnChD,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAYvD,cAiBlBhH,GAAMoJ,cAnGkB,WAAoC,IAAnCjD,EAAkC,uDAA1BjB,GAClC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,UAiFvB,cAkBlB7G,GAAMqJ,sBAhGyB,WAAoC,IAAnClD,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACnE,OAAO,2BAAKH,GAAZ,IAAmBkC,SAAU/B,EAAOC,aAAcP,SAAS,OA6ExC,cAmBlBhG,GAAMsJ,sBA7FyB,WAAoC,IAAnCnD,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACnE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,WAyE9B,cAqBlBpG,GAAMuJ,iBA9BqB,WAAoC,IAAnCpD,EAAkC,uDAA1BjB,GACrC,OAAO,2BACFiB,GADL,IAEEiC,UAAW,GACXhC,MAAO,KACPJ,SAAS,OAIQ,GAwBNY,2BAAc1B,GAAee,ICnI7BxB,yBAAY,uXAyBzB,ICxBWS,GAAgB,CAC3B2B,OAAQ,KACR2C,SAAU,GACVxD,SAAS,EACTe,YAAY,EACZC,eAAe,EACftB,WAAY,IAyFDO,IAAQ,mBAClBjG,GAAMyJ,gBAtFoB,WAAoC,IAAnCtD,EAAkC,uDAA1BjB,GACpC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OAoFzC,cAElB/G,GAAM0J,wBAnF2B,WAAoC,IAAnCvD,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBqD,SAAUlD,EAAOC,aAAcP,SAAS,OAgFxC,cAGlBhG,GAAM2J,wBAhF2B,WAAoC,IAAnCxD,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOoD,SAAU,QA4E/C,cAKlBxJ,GAAM4J,gBAhEoB,WAAoC,IAAnCzD,EAAkC,uDAA1BjB,GACpC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA0D/D,cAMlBhH,GAAM6J,wBA7D2B,WAAoC,IAAnC1D,EAAkC,uDAA1BjB,GAC3C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAsDlC,cAOlBhH,GAAM8J,wBA1D2B,WAAoC,IAAnC3D,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAkDjC,cASlBpG,GAAM+J,gBAvDoB,WAAoC,IAAnC5D,EAAkC,uDAA1BjB,GACpC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA6C/D,cAUlBhH,GAAMgK,wBApD2B,WAAoC,IAAnC7D,EAAkC,uDAA1BjB,GAC3C,OAAO,2BACFiB,GADL,IAEEY,YAAY,EACZC,eAAe,OAsCE,cAWlBhH,GAAMiK,wBA7C2B,WAAoC,IAAnC9D,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAiCvD,cAalBhH,GAAMkK,gBAzCoB,WAAoC,IAAnC/D,EAAkC,uDAA1BjB,GACpC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,OA2BzC,cAclBhG,GAAMmK,wBAtC2B,WAAoC,IAAnChE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC7D0B,EAAiB1B,EAAjB0B,aACR,OAAO,2BACF7B,GADL,IAEEqD,SAAUrD,EAAMqD,SAASvB,QAAO,SAAAL,GAAI,OAAGA,EAAKzC,KAAO6C,KACnDjB,YAAY,OAmBK,cAelB/G,GAAMoK,wBA9B2B,WAAoC,IAAnCjE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAcjC,cAiBlBpG,GAAMqK,eA3BmB,WAAoC,IAAnClE,EAAkC,uDAA1BjB,GACnC,OAAO,2BACFiB,GADL,IAEEqD,SAAU,GACVpD,MAAO,KACPJ,SAAS,EACTe,YAAY,OAIK,GAoBNH,2BAAc1B,GAAee,ICpH7BxB,yBAAY,uYAyBzB,ICxBWS,GAAgB,CAC3B2B,OAAQ,KACRyD,UAAW,GACXtE,SAAS,EACTe,YAAY,EACZP,SAAU,GACVQ,eAAe,GAqGJf,IAAQ,mBAClBjG,GAAMuK,iBAlGqB,WAAoC,IAAnCpE,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OAgGzC,cAElB/G,GAAMwK,yBA/F4B,WAAoC,IAAnCrE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBmE,UAAWhE,EAAOC,aAAcP,SAAS,OA4FzC,cAGlBhG,GAAMyK,yBA5F4B,WAAoC,IAAnCtE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,WAwF9B,cAKlBpG,GAAM0K,iBA5EqB,WAAoC,IAAnCvE,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OAsE/D,cAMlBhH,GAAM2K,yBAzE4B,WAAoC,IAAnCxE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAEtE,OADAtB,QAAQC,IAAI,cAAeqB,EAAOC,cAC3B,2BAAKJ,GAAZ,IAAmBmE,UAAWnE,EAAMmE,UAAUhD,OAAOhB,EAAOC,cAAeQ,YAAY,EAAOC,eAAe,OAiE1F,cAOlBhH,GAAM4K,yBArE4B,WAAoC,IAAnCzE,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OA6DvD,cASlBhH,GAAM6K,iBAlEqB,WAAoC,IAAnC1E,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OAwD/D,cAUlBhH,GAAM8K,yBA/D4B,WAAoC,IAAnC3E,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9DC,EAAiBD,EAAjBC,aACR,OAAO,2BACFJ,GADL,IAEEmE,UAAWnE,EAAMmE,UAAU3C,KAAI,SAAAC,GAC7B,OAAGA,EAAKzC,KAAOoB,EAAapB,GACnBoB,EAEAqB,KAGXb,YAAY,EACZC,eAAe,OAyCE,cAWlBhH,GAAM+K,yBAhD4B,WAAoC,IAAnC5E,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAoCvD,cAalBhH,GAAMgL,iBA5CqB,WAAoC,IAAnC7E,EAAkC,uDAA1BjB,GACrC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,OA8BzC,cAclBhG,GAAMiL,yBAzC4B,WAAoC,IAAnC9E,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtEtB,QAAQC,IAAI,gBAAiBqB,GAC7B,IAAQ4E,EAAe5E,EAAOC,aAAtB2E,WACR,OAAO,2BACF/E,GADL,IAEEmE,UAAWnE,EAAMmE,UAAUrC,QAAO,SAAAL,GAAI,OAAGA,EAAKzC,KAAO+F,KACrDnE,YAAY,EACZf,SAAS,OAoBQ,cAelBhG,GAAMmL,yBA/B4B,WAAoC,IAAnChF,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOJ,SAAS,OAejD,cAiBlBhG,GAAMoL,gBA5BoB,WAAoC,IAAnCjF,EAAkC,uDAA1BjB,GACpC,OAAO,2BACFiB,GADL,IAEEmE,UAAW,GACX9D,SAAU,GACVJ,MAAO,KACPJ,SAAS,EACTe,YAAY,OAIK,GAoBNH,2BAAc1B,GAAee,IChI7BxB,yBAAY,oQAiBzB,IChBWS,GAAgB,CAC3B2B,OAAQ,KACRwE,WAAY,GACZrF,SAAS,EACTe,YAAY,EACZC,eAAe,GA+DJf,IAAQ,mBAClBjG,GAAMsL,kBA5DsB,WAAoC,IAAnCnF,EAAkC,uDAA1BjB,GACtC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OA0DzC,cAElB/G,GAAMuL,0BAzD6B,WAAoC,IAAnCpF,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACvE,OAAO,2BAAKH,GAAZ,IAAmBkF,WAAY/E,EAAOC,aAAcP,SAAS,OAsD1C,cAGlBhG,GAAMwL,0BAtD6B,WAAoC,IAAnCrF,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACvE,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,WAkD9B,cAKlBpG,GAAMyL,kBAnDsB,WAAoC,IAAnCtF,EAAkC,uDAA1BjB,GACtC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA6C/D,cAMlBhH,GAAM0L,0BAhD6B,WAAoC,IAAnCvF,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC/DqF,EAA8BrF,EAA9BqF,YAAapF,EAAiBD,EAAjBC,aACrB,OAAO,2BACFJ,GADL,IAEEkF,WAAYlF,EAAMkF,WAAW1D,KAAI,SAAAC,GAC/B,OAAGA,EAAKzC,KAAOwG,EACNpF,EAEAqB,KAGXb,YAAY,EACZC,eAAe,OA8BE,cAOlBhH,GAAM4L,0BAjC6B,WAAoC,IAAnCzF,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACvE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAyBvD,cASlBhH,GAAM6L,kBA/BsB,WAAoC,IAAnC1F,EAAkC,uDAA1BjB,GACtC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMC,eAAe,OAqBjC,cAUlBhH,GAAM8L,0BA5B6B,WAAoC,IAAnC3F,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAiBlC,cAWlBhH,GAAM+L,0BAzB6B,WAAoC,IAAnC5F,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAalC,cAalBhH,GAAMgM,iBAvBqB,WAAoC,IAAnC7F,EAAkC,uDAA1BjB,GACrC,OAAO,2BACFiB,GADL,IAEEkF,WAAY,GACZjF,MAAO,KACPJ,SAAS,EACTe,YAAY,OAIK,GAgBNH,2BAAc1B,GAAee,ICrF7BxB,yBAAY,0OAazB,ICZWS,GAAgB,CAC3B2B,OAAQ,KACRoF,kBAAmB,GACnBjG,SAAS,EACTe,YAAY,EACZC,eAAe,GA0CJf,IAAQ,mBAClBjG,GAAMkM,0BAvC6B,WAAoC,IAAnC/F,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OAqCzC,cAElB/G,GAAMmM,kCApCoC,WAAoC,IAAnChG,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmB8F,kBAAmB3F,EAAOC,aAAcP,SAAS,OAiCjD,cAGlBhG,GAAMoM,kCAjCoC,WAAoC,IAAnCjG,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,WA6B9B,cAKlBpG,GAAMqM,yBA7B4B,WAAoC,IAAnClG,EAAkC,uDAA1BjB,GAC5C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OAuB/D,cAMlBhH,GAAMsM,iCA1BmC,WAAoC,IAAnCnG,EAAkC,uDAA1BjB,GACnD,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAmBlC,cAOlBhH,GAAMuM,iCAvBmC,WAAoC,IAAnCpG,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC7E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAejC,cASlBpG,GAAMwM,wBApB2B,WAAoC,IAAnCrG,EAAkC,uDAA1BjB,GAC3C,OAAO,2BACFiB,GADL,IAEE8F,kBAAmB,GACnB7F,MAAO,KACPJ,SAAS,EACTe,YAAY,EACZC,eAAe,OAIE,GAYNJ,2BAAc1B,GAAee,IC5D7BxB,yBAAY,0jBA6BzB,IC5BWS,GAAgB,CAC3B2B,OAAQ,KACR4F,eAAgB,GAChBC,kBAAmB,KACnBC,cAAe,KACf3G,SAAS,EACTe,YAAY,EACZC,eAAe,GAuGJf,IAAQ,mBAClBjG,GAAM4M,sBAvFyB,WAAoC,IAAnCzG,EAAkC,uDAA1BjB,GACzC,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OAqFzC,cAElB/G,GAAM6M,8BApFgC,WAAoC,IAAnC1G,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC1E,OAAO,2BAAKH,GAAZ,IAAmBsG,eAAgBnG,EAAOC,aAAcP,SAAS,OAiF9C,cAGlBhG,GAAM8M,8BAjFgC,WAAoC,IAAnC3G,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC1E,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOoD,SAAU,QA6E/C,cAKlBxJ,GAAM+M,yBAxG2B,WAAoC,IAAnC5G,EAAkC,uDAA1BjB,GAC3C,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,UAkGvB,cAMlB7G,GAAMgN,iCArGkC,WAAoC,IAAnC7G,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC5E,OAAO,2BAAKH,GAAZ,IAAmBuG,kBAAmBpG,EAAOC,aAAcP,SAAS,OA8FjD,cAOlBhG,GAAMiN,iCAlGkC,WAAoC,IAAnC9G,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC5E,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOoD,SAAU,QA0F/C,cASlBxJ,GAAMkN,sBArEyB,WAAoC,IAAnC/G,EAAkC,uDAA1BjB,GACzC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA2D/D,cAUlBhH,GAAMmN,8BAlEgC,WAAoC,IAAnChH,EAAkC,uDAA1BjB,GAChD,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAuDlC,cAWlBhH,GAAMoN,8BA/DgC,WAAoC,IAAnCjH,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC1E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAmDjC,cAalBpG,GAAMqN,sBA5DyB,WAAoC,IAAnClH,EAAkC,uDAA1BjB,GACzC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA8C/D,cAclBhH,GAAMsN,8BAzDgC,WAAoC,IAAnCnH,EAAkC,uDAA1BjB,GAChD,OAAO,2BACFiB,GADL,IAEEY,YAAY,EACZC,eAAe,OAuCE,cAelBhH,GAAMuN,8BAlDgC,WAAoC,IAAnCpH,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC1E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAkCvD,cAiBlBhH,GAAMwN,sBA9CoB,WAAoC,IAAnCrH,EAAkC,uDAA1BjB,GACpC,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,OA4BzC,cAkBlBhG,GAAMyN,8BA3C2B,WAAoC,IAAnCtH,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC7D0B,EAAiB1B,EAAjB0B,aACR,OAAO,2BACF7B,GADL,IAEEqD,SAAUrD,EAAMqD,SAASvB,QAAO,SAAAL,GAAI,OAAGA,EAAKzC,KAAO6C,KACnDjB,YAAY,OAoBK,cAmBlB/G,GAAM0N,8BAnC2B,WAAoC,IAAnCvH,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACrE,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAejC,cAqBlBpG,GAAM2N,qBAhCwB,WAAoC,IAAnCxH,EAAkC,uDAA1BjB,GACxC,OAAO,2BACFiB,GADL,IAEEsG,eAAgB,GAChBC,kBAAmB,GACnBtG,MAAO,KACPJ,SAAS,EACTe,YAAY,OAIK,GAwBNH,2BAAc1B,GAAee,ICvI7BxB,yBAAY,ypBA6BzB,IC5BWS,GAAgB,CAC3B2B,OAAQ,KACR+G,oBAAqB,GACrBC,mBAAoB,KACpBC,uBAAwB,GACxB9H,SAAS,EACTe,YAAY,EACZC,eAAe,GAuGJf,IAAQ,mBAClBjG,GAAM+N,2BAvF6B,WAAoC,IAAnC5H,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,KAAME,YAAY,OAqFzC,cAElB/G,GAAMgO,mCApFoC,WAAoC,IAAnC7H,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmB2H,uBAAwBxH,EAAOC,aAAcP,SAAS,OAiFtD,cAGlBhG,GAAMiO,mCAjFoC,WAAoC,IAAnC9H,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOoD,SAAU,QA6E/C,cAKlBxJ,GAAMkO,8BAxG+B,WAAoC,IAAnC/H,EAAkC,uDAA1BjB,GAC/C,OAAO,2BAAKiB,GAAZ,IAAmBH,SAAS,EAAMa,OAAQ,UAkGvB,cAMlB7G,GAAMmO,sCArGsC,WAAoC,IAAnChI,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAChF,OAAO,2BAAKH,GAAZ,IAAmB2H,uBAAwBxH,EAAOC,aAAcP,SAAS,OA8FtD,cAOlBhG,GAAMoO,sCAlGsC,WAAoC,IAAnCjI,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAChF,OAAO,2BAAKH,GAAZ,IAAmBH,SAAS,EAAOI,MAAOE,EAAOF,MAAOoD,SAAU,QA0F/C,cASlBxJ,GAAMqO,2BArE6B,WAAoC,IAAnClI,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA2D/D,cAUlBhH,GAAMsO,mCAlEoC,WAAoC,IAAnCnI,EAAkC,uDAA1BjB,GACpD,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAOC,eAAe,OAuDlC,cAWlBhH,GAAMuO,mCA/DoC,WAAoC,IAAnCpI,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAmDjC,cAalBpG,GAAMwO,2BA5D6B,WAAoC,IAAnCrI,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,EAAOgB,eAAe,OA8C/D,cAclBhH,GAAMyO,mCAzDoC,WAAoC,IAAnCtI,EAAkC,uDAA1BjB,GACpD,OAAO,2BACFiB,GADL,IAEEY,YAAY,EACZC,eAAe,OAuCE,cAelBhH,GAAM0O,mCAlDoC,WAAoC,IAAnCvI,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,MAAOY,eAAe,OAkCvD,cAiBlBhH,GAAM2O,2BA9C6B,WAAoC,IAAnCxI,EAAkC,uDAA1BjB,GAC7C,OAAO,2BAAKiB,GAAZ,IAAmBY,YAAY,EAAMF,OAAQ,KAAMb,SAAS,OA4BzC,cAkBlBhG,GAAM4O,mCA3CoC,WAAoC,IAAnCzI,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCACtE0B,EAAiB1B,EAAjB0B,aACR,OAAO,2BACF7B,GADL,IAEEqD,SAAUrD,EAAMqD,SAASvB,QAAO,SAAAL,GAAI,OAAGA,EAAKzC,KAAO6C,KACnDjB,YAAY,OAoBK,cAmBlB/G,GAAM6O,mCAnCoC,WAAoC,IAAnC1I,EAAkC,uDAA1BjB,GAAeoB,EAAW,uCAC9E,OAAO,2BAAKH,GAAZ,IAAmBY,YAAY,EAAOX,MAAOE,EAAOF,WAejC,cAqBlBpG,GAAM8O,0BAhC4B,WAAoC,IAAnC3I,EAAkC,uDAA1BjB,GAC5C,OAAO,2BACFiB,GADL,IAEE4I,mBAAoB,GACpBjB,uBAAwB,GACxB1H,MAAO,KACPJ,SAAS,EACTe,YAAY,OAIK,GAwBNH,2BAAc1B,GAAee,IC9H7B+I,eAAgB,CAC7BnM,KAAMoM,GACNvJ,WAAYwJ,GACZ7G,SAAU8G,GACVC,QAASC,GACT7I,SAAU8I,GACVC,UAAWC,GACXC,gBAAiBC,GACjBC,WAAYC,GACZC,MAAOC,K,oFCRQC,I,aAsBAC,I,aAOAC,I,aAIAC,IAjCV,SAAUH,GAAMzJ,GAAhB,wFAIc,OAHnBtB,QAAQC,IAAI,SAAUqB,GADjB,WAGyBA,EAAO6J,QAA3B3K,EAHL,EAGKA,MAAO4K,EAHZ,EAGYA,SAHZ,SAIoBC,aAAKC,KAAQ,CAAE9K,QAAO4K,aAJ1C,UAKoB,aADjBG,EAJH,QAKSC,OALT,iBASD,OAHMjK,EAAegK,EAASE,KAC9BC,YAAgB3L,IAAgBwB,EAAaR,OAC7C2K,YAAgB9L,IAAD,YAAC,eAAoB2B,EAAaC,UAAlC,IAA4CV,KAAMS,EAAaC,SAASV,KAAK,MAR3F,UASK6K,aAAI1Q,KAAS2Q,aAAarK,IAT/B,QAUDsK,KAAQC,KAAK,QAVZ,wBAaD,OADAC,aAAiB,QAAS,QAASR,EAASS,SAZ3C,UAaKL,aAAI1Q,KAASgR,YAAYV,EAASS,UAbvC,gCAkBH,OAlBG,0BAgBGA,EAAW,iBAAS,KAAMT,gBAAf,aAAS,EAAgBE,QAAzB,UAAiC,KAAMF,gBAAvC,iBAAiC,EAAgBE,YAAjD,aAAiC,EAAsBrK,QAAU,sBAClF2K,aAAiB,QAAS,QAASC,GAjBhC,UAkBGL,aAAI1Q,KAASiR,aAAaF,IAlB7B,uDAsBA,SAAUhB,GAAO1J,GAAjB,kEACL,OADK,SACCqK,aAAI1Q,KAAS+P,OAAO,OADrB,OAELmB,YAAgBvM,KAChBuM,YAAgBpM,KAChB8L,KAAQC,KAAK,eAJR,wCAOA,SAAUb,KAAV,kEACL,OADK,SACCmB,aAAYpR,KAAMkG,MAAO6J,IAD1B,wCAIA,SAAUG,KAAV,kEACL,OADK,SACCkB,aAAYpR,KAAM0G,OAAQsJ,IAD3B,wC,8BC1CA,SAASqB,GAAeC,GAC7B,OAAOC,aAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKpR,QAWL,SAASqR,GAAejB,GAE7B,OADAzL,QAAQC,IAAI,WAAYwL,GACjBc,aAAW,CAChBC,OAAQ,OACRC,IAAI,GAAD,OAAKpR,MACRoQ,SAIG,SAASxP,GAAiB0Q,EAAQlB,GACvC,OAAOc,aAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKpR,MAAL,OAA4BsR,GAC/BlB,SAIG,SAASrP,GAAiBuQ,GAC/B,OAAOJ,aAAW,CAChBC,OAAQ,SACRC,IAAI,GAAD,OAAKpR,MAAL,OAA4BsR,K,iBCxBlBnR,I,aAkCAM,I,aAmBAG,I,aAoBAG,I,aAoBAwQ,I,aAIAC,I,aAIAC,I,aAIAC,IAzGV,SAAUvR,GAAiB8F,GAA3B,4EAEc,OAFd,kBAEoB+J,aAAKgB,GAAgB,IAFzC,UAGoB,aADjBd,EAFH,QAGSC,OAHT,iBAKD,OADMjK,EAAegK,EAASE,KAJ7B,SAKKE,aAAI1Q,KAASQ,wBAAwB8F,IAL1C,+BAQD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAP3C,UAQKL,aAAI1Q,KAASS,wBAAwB6P,EAASS,UARnD,gCAaH,OAbG,0BAWGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAC/E2K,aAAiB,QAAS,QAASC,GAZhC,UAaGL,aAAI1Q,KAASS,wBAAwBsQ,IAbxC,uDAkCA,SAAUlQ,GAAiBwF,GAA3B,4EAGc,OAFnBtB,QAAQC,IAAI,cAAeqB,GADtB,kBAGoB+J,aAAKqB,GAAgBpL,EAAO6J,SAHhD,UAIoB,aADjBI,EAHH,QAISC,OAJT,iBAMD,OADMjK,EAAegK,EAASE,KAL7B,SAMKE,aAAI1Q,KAASc,wBAAwBwF,IAN1C,OAODwK,aAAiB,UAAW,oBAAqBR,EAASS,SAPzD,wBAUD,OADAD,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAASe,wBAAwBuP,EAASS,UAVnD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAASe,wBAAwBgQ,IAfxC,uDAmBA,SAAU/P,GAAiBqF,GAA3B,gFAIc,OAHnBtB,QAAQC,IAAI,SAAUqB,GACd0B,EAA0B1B,EAA1B0B,aAAcmI,EAAY7J,EAAZ6J,QAFjB,kBAIoBE,aAAK2B,GAAqBhK,EAAcmI,GAJ5D,UAKoB,aADjBI,EAJH,QAKSC,OALT,iBAQD,OAFMjK,EAAegK,EAASE,KAC9BM,aAAiB,UAAW,oBAAqBR,EAASS,SAPzD,UAQKL,aAAI1Q,KAASiB,wBAAwBqF,IAR1C,gCAWD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAV3C,UAWKL,aAAI1Q,KAASkB,wBAAwBoP,EAASS,UAXnD,gCAgBH,OAhBG,0BAcGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAC/E2K,aAAiB,QAAS,QAASC,GAfhC,UAgBGL,aAAI1Q,KAASkB,wBAAwB6P,IAhBxC,uDAoBA,SAAU5P,GAAiBkF,GAA3B,4EAIc,OAHnBtB,QAAQC,IAAI,SAAUqB,GACd0B,EAAiB1B,EAAjB0B,aAFH,kBAIoBqI,aAAK4B,GAAqBjK,GAJ9C,UAKoB,aADjBuI,EAJH,QAKSC,OALT,iBAOD,OADAO,aAAiB,UAAW,oBAAqBR,EAASS,SANzD,UAOKL,aAAI1Q,KAASoB,wBAAwB2G,IAP1C,gCAUD,OADA+I,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAASqB,wBAAwBiP,EAASS,UAVnD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAASkB,wBAAwB6P,IAfxC,uDAoBA,SAAUY,GAAsBtL,GAAhC,kEACL,OADK,SACC4L,aAAWlS,KAAMiH,kBAAmBzG,IADrC,wCAIA,SAAUqR,GAAsBvL,GAAhC,kEACL,OADK,SACC4L,aAAWlS,KAAMoH,kBAAmBtG,IADrC,wCAIA,SAAUgR,GAAsBxL,GAAhC,kEACL,OADK,SACC4L,aAAWlS,KAAMyH,kBAAmBxG,IADrC,wCAIA,SAAU8Q,GAAsBzL,GAAhC,kEACL,OADK,SACC4L,aAAWlS,KAAM8H,kBAAmB1G,IADrC,wC,sBClHA,SAAS+Q,GAAab,GAC3BtM,QAAQC,IAAI,qBACZ,IAAMmN,EAAWC,aAAqBf,GACtC,OAAOC,aAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKnR,MAAL,OAA0B8R,KAW1B,SAASE,GAAa7B,GAC3B,OAAOc,aAAW,CAChBC,OAAQ,OACRC,IAAI,GAAD,OAAKnR,MACRmQ,SAIG,SAAS8B,GAAerJ,EAAYuH,GACzC,OAAOc,aAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKnR,MAAL,OAA0B4I,GAC7BuH,SAIG,SAAS+B,GAAetJ,GAC7B,OAAOqI,aAAW,CAChBC,OAAQ,SACRC,IAAI,GAAD,OAAKnR,MAAL,OAA0B4I,K,iBC3BhBuJ,I,aAmBAC,I,aAoBAH,I,aAkBAC,I,aAqBAG,I,aAIAC,I,aAIAC,I,aAIAC,IA1FV,SAAUL,GAAenM,GAAzB,8EAGc,OAFXgL,EAAUhL,EAAVgL,MADH,kBAGoBjB,aAAK8B,GAAcb,GAHvC,UAGGf,EAHH,OAIHvL,QAAQC,IAAI,gBAAiBsL,GACN,YAApBA,EAASC,OALT,iBAOD,OADMjK,GAAuB,OAARgK,QAAQ,IAARA,OAAA,EAAAA,EAAUE,OAAQ,GANtC,UAOKE,aAAI1Q,KAAS8S,sBAAsBxM,IAPxC,gCAUD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAAS+S,sBAAsBzC,EAASS,UAVjD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAAS+S,sBAAsBhC,IAftC,uDAmBA,SAAU0B,GAAepM,GAAzB,4EAGc,OAFnBtB,QAAQC,IAAI,UAAWqB,GADlB,kBAGoB+J,aAAKiC,GAAchM,EAAO6J,SAH9C,UAIoB,aADjBI,EAHH,QAISC,OAJT,iBAOD,OAFMjK,EAAegK,EAASE,KAC9BM,aAAiB,UAAW,kBAAmBR,EAASS,SANvD,UAOKL,aAAI1Q,KAASwS,eAAe,KAPjC,QAQD,OARC,UAQK9B,aAAI1Q,KAASgT,sBAAsB1M,IARxC,gCAWD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAV3C,UAWKL,aAAI1Q,KAASiT,sBAAsB3C,EAASS,UAXjD,gCAgBH,OAhBG,0BAcGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAfhC,UAgBGL,aAAI1Q,KAASiT,sBAAsBlC,IAhBtC,uDAoBA,SAAUuB,GAAejM,GAAzB,0EAGc,OAFnBtB,QAAQC,IAAI,SAAUqB,GADjB,kBAGoB+J,aAAK8C,GAAmB7M,EAAO4C,WAAY5C,EAAO6J,SAHtE,UAIoB,aADjBI,EAHH,QAISC,OAJT,iBAMD,OADAO,aAAiB,UAAW,kBAAmBR,EAASS,SALvD,SAMKL,aAAI1Q,KAASmT,sBAAT,aAAgCjO,GAAImB,EAAO4C,YAAe5C,EAAO6J,WAN1E,+BASD,OADAY,aAAiB,QAAS,QAASR,EAASS,SAR3C,UASKL,aAAI1Q,KAASoT,sBAAsB9C,EAASS,UATjD,gCAcH,OAdG,0BAYGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAbhC,UAcGL,aAAI1Q,KAASoT,sBAAsBrC,IAdtC,uDAkBA,SAAUwB,GAAelM,GAAzB,4EAIc,OAHX4C,EAAc5C,EAAd4C,WACRlE,QAAQC,IAAI,iCAA+BiE,GAFtC,kBAIoBmH,aAAKiD,GAAmBpK,GAJ5C,UAKoB,QADjBqH,EAJH,QAKSC,OALT,iBAOD,OADAxL,QAAQC,IAAI,yCANX,UAOK0L,aAAI1Q,KAASsT,sBAAsBrK,IAPxC,QAQD6H,aAAiB,UAAW,kBAAmBR,EAASS,SARvD,wBAWD,OADAD,aAAiB,QAAS,QAASR,EAASS,SAV3C,UAWKL,aAAI1Q,KAASuT,sBAAsBjD,EAASS,UAXjD,gCAgBH,OAhBG,0BAcGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAfhC,UAgBGL,aAAI1Q,KAASoT,sBAAsBrC,IAhBtC,uDAqBA,SAAU2B,GAAoBrM,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAMuI,gBAAiBkK,IADnC,wCAIA,SAAUG,GAAoBtM,GAA9B,kEACL,OADK,SACC8K,aAAYpR,KAAM0I,gBAAiBgK,IADpC,wCAIA,SAAUG,GAAoBvM,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAM6I,gBAAiB0J,IADnC,wCAIA,SAAUO,GAAoBxM,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAMgJ,gBAAiBwJ,IADnC,wC,mCCzFUxT,I,aAiBAG,I,aAiBAG,I,aAoBAG,I,aAmBAG,I,aAmBA6T,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,IA5GV,SAAU7U,GAAesH,GAAzB,4EAEc,OAFd,kBAEoB+J,aAAKyD,KAAmB,IAF5C,UAGoB,aADjBvD,EAFH,QAGSC,OAHT,iBAKD,OADMjK,EAAegK,EAASE,KAJ7B,SAKKE,aAAI1Q,KAAShB,sBAAsBsH,IALxC,+BAQD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAP3C,UAQKL,aAAI1Q,KAASf,sBAAsBqR,EAASS,UARjD,gCAaH,OAbG,0BAWGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAZhC,UAaGL,aAAI1Q,KAASf,sBAAsB8R,IAbtC,uDAiBA,SAAU7R,GAAYmH,GAAtB,4EAEc,OAFd,kBAEoB+J,aAAK0D,KAAgBzN,EAAO0N,YAFhD,UAGoB,QADjBzD,EAFH,QAGSC,OAHT,iBAKD,OADMjK,EAAegK,EAASE,KAJ7B,SAKKE,aAAI1Q,KAASb,mBAAmBmH,IALrC,+BAQD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAP3C,UAQKL,aAAI1Q,KAASZ,mBAAmBkR,EAASS,UAR9C,gCAaH,OAbG,0BAWGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAZhC,UAaGL,aAAI1Q,KAASZ,mBAAmB2R,IAbnC,uDAiBA,SAAU1R,GAAegH,GAAzB,4EAEc,OAFd,kBAEoB+J,aAAK4D,KAAiB3N,EAAO6J,SAFjD,UAGoB,aADjBI,EAFH,QAGSC,OAHT,iBAOD,OAHMjK,EAAegK,EAASE,KAC9BzL,QAAQC,IAAI,OAAQsB,GACpBwK,aAAiB,UAAW,kBAAmBR,EAASS,SANvD,UAOKL,aAAI1Q,KAASV,sBAAsBgH,IAPxC,QAQD,OARC,UAQKoK,aAAI1Q,KAASjB,kBARlB,gCAWD,OADA+R,aAAiB,QAAS,kBAAmBR,EAASS,SAVrD,UAWKL,aAAI1Q,KAAST,sBAAsB+Q,EAASS,UAXjD,gCAgBH,OAhBG,0BAcGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,6BAC/E2K,aAAiB,QAAS,kBAAmBC,GAf1C,UAgBGL,aAAI1Q,KAAST,sBAAsBwR,IAhBtC,uDAoBA,SAAUvR,GAAe6G,GAAzB,4EAGc,OAFnBtB,QAAQC,IAAI,SAAUqB,GADjB,kBAGoB+J,aAAK6D,KAAmB5N,EAAO4E,WAAY5E,EAAO6J,SAHtE,UAIoB,aADjBI,EAHH,QAISC,OAJT,iBAOD,OAFMjK,EAAegK,EAASE,KAC9BzL,QAAQC,IAAI,gBAAiBsB,GAN5B,UAOKoK,aAAI1Q,KAASP,sBAAsB6G,IAPxC,gCAUD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAASN,sBAAsB4Q,EAASS,UAVjD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAASN,sBAAsBqR,IAftC,uDAmBA,SAAUpR,GAAe0G,GAAzB,0EAGc,OAFnBtB,QAAQC,IAAI,SAAUqB,GADjB,kBAGoB+J,aAAK8D,KAAmB7N,EAAO4E,YAHnD,UAIoB,QADjBqF,EAHH,QAISC,OAJT,iBAMD,OADAO,aAAiB,UAAW,kBAAmBR,EAASS,SALvD,SAMKL,aAAI1Q,KAASJ,sBAAsB,CAACqL,WAAY5E,EAAO4E,cAN5D,+BASD,OADA6F,aAAiB,QAAS,QAASR,EAASS,SAR3C,UASKL,aAAI1Q,KAASH,sBAAsByQ,EAASS,UATjD,gCAcH,OAdG,0BAYGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAbhC,UAcGL,aAAI1Q,KAASN,sBAAsBqR,IAdtC,uDAmBA,SAAUyC,GAAoBnN,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAMuK,gBAAiBvL,IADnC,wCAIA,SAAU0U,GAAoBpN,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAM0K,gBAAiBpL,IADnC,wCAIA,SAAUqU,GAAoBrN,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAM6K,gBAAiBpL,IADnC,wCAIA,SAAUmU,GAAoBtN,GAA9B,kEACL,OADK,SACC4L,aAAWlS,KAAMgL,gBAAiBpL,IADnC,wCAIA,SAAUiU,GAAiBvN,GAA3B,kEACL,OADK,SACC4L,aAAWlS,KAAMoU,aAAcjV,IADhC,wC,mCC7GUkV,I,aAoBAC,I,aAoBAC,I,aAyBAC,I,aAIAC,I,aAIAC,IAzEV,SAAUL,GAAc/N,GAAxB,kFAGc,OAFnBtB,QAAQC,IAAI,kCAAmCqB,GAD1C,kBAGoB+J,aAAKsE,KAAkBrO,EAAOgL,OAHlD,UAGGf,EAHH,OAIHvL,QAAQC,IAAI,mBAAoBsL,IAC7B,CAAC,KAAM,UAAW,SAASqE,SAASrE,EAASC,QAL7C,iBAOD,OADMjK,GAAuB,OAARgK,QAAQ,IAARA,OAAA,EAAAA,EAAUE,OAAQ,GANtC,UAOKE,aAAI1Q,KAAS4U,qBAAqBtO,IAPvC,gCAUD,OADAwK,aAAiB,QAAS,gBAAiBR,EAASS,SAAW,4BAT9D,UAUKL,aAAI1Q,KAAS6U,qBAAqBvE,EAASS,SAAW,8BAV3D,gCAeH,OAfG,0BAaG+D,EAAa,6CAAS,KAAOxE,gBAAhB,aAAS,EAAiBE,QAA1B,sCAAkC,KAAOF,gBAAzC,iBAAkC,EAAiBE,YAAnD,aAAkC,EAAuBrK,QAAU,8BACtF2K,aAAiB,QAAS,gBAAiBgE,GAdxC,UAeGpE,aAAI1Q,KAAS6U,qBAAqBC,IAfrC,uDAoBA,SAAUT,GAAchO,GAAxB,4EAGc,OAFnBtB,QAAQC,IAAI,cAAeqB,GADtB,kBAGoB+J,aAAK2E,KAAkB1O,EAAO6J,SAHlD,UAIoB,QADjBI,EAHH,QAISC,OAJT,iBAMD,OADMjK,EAAegK,EAASE,KAL7B,SAMKE,aAAI1Q,KAASgV,qBAAqB1O,IANvC,OAOD4K,YAAgB,eAChBJ,aAAiB,UAAW,iBAAkBR,EAASS,SARtD,wBAWD,OADAD,aAAiB,QAAS,QAASR,EAASS,SAV3C,UAWKL,aAAI1Q,KAASiV,qBAAqB3E,EAASS,UAXhD,gCAgBH,OAhBG,0BAcGmE,EAAY,MAAS,KAAM5E,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAChF2K,aAAiB,QAAS,QAASoE,GAfhC,UAgBGxE,aAAI1Q,KAASiV,qBAAqBC,IAhBrC,uDAoBA,SAAUZ,GAAcjO,GAAxB,4EAGc,OAFnBtB,QAAQC,IAAI,SAAUqB,GADjB,kBAGoB+J,aAAK+E,KAAkB9O,EAAO6J,SAHlD,UAGGI,EAHH,QAIA,CAAC,KAAM,WAAWqE,SAASrE,EAASC,QAJpC,iBAQD,OAHMjK,EALL,OAKoBgK,QALpB,IAKoBA,OALpB,EAKoBA,EAAUE,KAC/BzL,QAAQC,IAAI,oBAAqBsB,GACjCwK,aAAiB,UAAW,iBAAkBR,EAASS,SAPtD,UAQKL,aAAI1Q,KAASoV,qBAAqB9O,GAAgB,KARvD,gCAWD,OADAwK,aAAiB,QAAS,iBAAkBR,EAASS,SAVpD,UAWKL,aAAI1Q,KAASqV,qBAAqB/E,EAASS,UAXhD,gCAgBH,OAhBG,0BAcGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAC/E2K,aAAiB,QAAS,iBAAkBC,GAfzC,UAgBGL,aAAI1Q,KAASqV,qBAAqBtE,IAhBrC,uDAyBA,SAAUwD,GAAmBlO,GAA7B,kEACL,OADK,SACC4L,aAAWlS,KAAMyJ,eAAgB4K,IADlC,wCAIA,SAAUI,GAAmBnO,GAA7B,kEACL,OADK,SACC4L,aAAWlS,KAAM4J,eAAgB0K,IADlC,wCAIA,SAAUI,GAAmBpO,GAA7B,kEACL,OADK,SACC4L,aAAWlS,KAAM+J,eAAgBwK,IADlC,wC,sBCjFDrR,GAAO,cA+BN,SAASqS,GAAcjE,GAC5B,OAAOkE,aAAQ,CACb/D,IAAI,GAAD,OAAMvO,GAAN,QACHsO,OAAQ,QAKL,SAASiE,GAAiBnE,GAG/B,OAFAtM,QAAQC,IAAI,YAAaqM,GACDA,EAAhBoE,aAEN,KAAKC,KACH,OAAOJ,KACT,KAAKK,KACH,OA5BGJ,aAAQ,CACb/D,IAAI,GAAD,OAAKvO,GAAL,oBACHsO,OAAQ,QA2BR,KAAKqE,KACH,OAvBGL,aAAQ,CACb/D,IAAI,GAAD,OAAKvO,GAAL,oBACHsO,OAAQ,QAsBR,QACE,OAAO+D,MAIN,SAASO,GAAgBnK,EAAawE,GAE3C,OADAnL,QAAQC,IAAI,UAAWkL,GAChBqF,aAAQ,CACb/D,IAAI,GAAD,OAAKvO,GAAL,YAAayI,EAAb,kCAAkDwE,EAAQ4F,YAC7DvE,OAAQ,MACRf,KAAMN,IAIH,SAAS6F,GAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQhN,EAAc,EAAdA,WAC1CiN,EAAK,IAAIC,SAEb,OADAD,EAAGE,OAAO,OAAQJ,GACXT,aAAQ,CACb/D,IAAI,yBAAD,OAA2BvI,EAA3B,uBAAoDgN,GACvD1E,OAAQ,OACRf,KAAM0F,I,2BC7DOG,I,aAoBAR,I,aAqBAE,I,aAiBAO,I,aAIAC,I,aAIAC,IAlEV,SAAUH,GAAgBhQ,GAA1B,4EAGc,OAFnBtB,QAAQC,IAAI,wBAAyBqB,GADhC,kBAGoB+J,aAAKqG,GAAqBpQ,EAAOgL,OAHrD,UAIoB,QADjBf,EAHH,QAISC,OAJT,iBAOD,OAFMjK,EAAegK,EAASE,KAC9BzL,QAAQC,IAAI,gBAAiBsB,GAN5B,UAOKoK,aAAI1Q,KAAS0W,uBAAuBpQ,IAPzC,gCAUD,OADAwK,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAAS2W,uBAAuBrG,EAASS,UAVlD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAAS2W,uBAAuB5F,IAfvC,uDAoBA,SAAU8E,GAAgBxP,GAA1B,gFAIc,OAHnBtB,QAAQC,IAAI,SAAUqB,GACfqF,EAAwBrF,EAAxBqF,YAAawE,EAAW7J,EAAX6J,QAFf,kBAIoBE,aAAKwG,GAAoBlL,EAAawE,GAJ1D,UAKoB,QADjBI,EAJH,QAKSC,OALT,iBAOD,OADMjK,EAAegK,EAASE,KAN7B,UAOKE,aAAI1Q,KAAS6W,uBAAuBvQ,IAPzC,QAQDwK,aAAiB,UAAW,mBAAoBR,EAASS,SARxD,wBAYD,OADAD,aAAiB,QAAS,mBAAoBR,EAASS,SAXtD,UAYKL,aAAI1Q,KAAS8W,uBAAuBxG,EAASS,UAZlD,gCAiBH,OAjBG,0BAeGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,4BAC/E2K,aAAiB,QAAS,QAASC,GAhBhC,UAiBGL,aAAI1Q,KAAS8W,uBAAuB/F,IAjBvC,uDAqBA,SAAUgF,GAAgB1P,GAA1B,0EAGc,OAFX6J,EAAY7J,EAAZ6J,QADH,kBAGoBE,aAAK2G,GAAoB7G,GAH7C,UAIoB,QADjBI,EAHH,QAISC,OAJT,iBAKD,OALC,SAKKG,aAAI1Q,KAASgX,uBAAuB1G,EAASE,OALlD,OAMDO,KAAQkG,QAAQ,0CANf,wBAQDlG,KAAQ5K,MAAM,kBARb,0DAWHpB,QAAQC,IAAI,QAAZ,MACA+L,KAAQ5K,MAAM,WAZX,uDAiBA,SAAUmQ,GAAqBjQ,GAA/B,kEACL,OADK,SACC4L,aAAWlS,KAAMsL,iBAAkBgL,IADpC,wCAIA,SAAUE,GAAqBlQ,GAA/B,kEACL,OADK,SACC4L,aAAWlS,KAAMyL,iBAAkBqK,IADpC,wCAIA,SAAUW,GAAqBnQ,GAA/B,kEACL,OADK,SACC4L,aAAWlS,KAAM6L,iBAAkBmK,IADpC,wC,aC7ED9S,GAAO,kBAEN,SAASiU,KACd,OAAO3B,aAAQ,CACb/D,IAAI,GAAD,OAAKvO,IACRsO,OAAQ,QAIL,SAAS4F,GAAoB3G,GAClC,OAAO+E,aAAQ,CACb/D,IAAI,GAAD,OAAKvO,IACRsO,OAAQ,OACRf,S,iBCJa4G,I,aAcAC,I,aAoBAC,I,aAMAC,I,aAIAC,I,aAIAC,IAhDV,SAAUL,GAAuB/Q,GAAjC,4EAGc,OAFnBtB,QAAQC,IAAI,kCAAmCqB,GAD1C,kBAGoB+J,aAAKsH,GAAyBrR,EAAOgL,OAHzD,OAKH,OAFMf,EAHH,OAIGhK,EAAegK,EAASE,KAJ3B,SAKGE,aAAI1Q,KAAS2X,8BAA8BrR,IAL9C,+BASH,OATG,0BAOGyK,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,6BAC/E2K,aAAiB,QAAS,QAASC,GARhC,UASGL,aAAI1Q,KAAS4X,8BAA8B7G,IAT9C,uDAcA,SAAUsG,GAAsBhR,GAAhC,4EAGc,OAFnBtB,QAAQC,IAAI,cAAeqB,GADtB,kBAGoB+J,aAAKyH,GAA0BxR,EAAO6J,SAH1D,UAIoB,QADjBI,EAHH,QAISC,OAJT,iBAMD,OADMjK,EAAegK,EAASE,KAL7B,SAMKE,aAAI1Q,KAAS8X,6BAA6BxR,IAN/C,OAODwK,aAAiB,UAAW,iBAAkBR,EAASS,SAPtD,wBAUD,OADAD,aAAiB,QAAS,QAASR,EAASS,SAT3C,UAUKL,aAAI1Q,KAAS+X,6BAA6BzH,EAASS,UAVxD,gCAeH,OAfG,0BAaGA,EAAW,MAAS,KAAMT,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,0BAC/E2K,aAAiB,QAAS,QAASC,GAdhC,UAeGL,aAAI1Q,KAAS+X,6BAA6BhH,IAf7C,uDAoBA,SAAUuG,GAAqBjR,GAA/B,kEACL,OADK,SACCqK,aAAI1Q,KAASgY,gBADd,wCAMA,SAAUT,GAA4BlR,GAAtC,kEACL,OADK,SACC4L,aAAWlS,KAAMkM,yBAA0BmL,IAD5C,wCAIA,SAAUI,GAA2BnR,GAArC,kEACL,OADK,SACC4L,aAAWlS,KAAMqM,wBAAyBiL,IAD3C,wCAIA,SAAUI,GAA0BpR,GAApC,kEACL,OADK,SACC4L,aAAWlS,KAAMwM,uBAAwB+K,IAD1C,wC,mBCtDA,SAASW,GAAiB/H,GAC/B,OAAOqF,aAAQ,CACb/D,IAAI,8BACJD,OAAQ,OACRf,KAAMN,IAIH,SAASgI,GAAqB7G,GACnC,IAAMc,EAAWC,aAAqBf,GACtC,OAAOkE,aAAQ,CACb/D,IAAI,qBAAD,OAAuBW,GAC1BZ,OAAQ,QAIL,SAAS4G,GAAsB9G,GACpC,IAAMc,EAAWC,aAAqBf,GACtC,OAAOkE,aAAQ,CACb/D,IAAI,SAAD,OAAWW,GACdZ,OAAQ,Q,iBCXK4G,I,aAkBAD,I,aAmBAE,I,aAyBAC,I,aAIAC,I,aAIAC,IAtEV,SAAUJ,GAAsB9R,GAAhC,kFAIc,OAHnBtB,QAAQC,IAAI,kCAAmCqB,GACvCgL,EAAUhL,EAAVgL,MAFH,kBAIoBjB,aAAKoI,GAA0BnH,GAJnD,UAKoB,aADjBf,EAJH,QAKSC,OALT,iBAMD,OANC,SAMKG,aAAI1Q,KAASyY,6BAAT,OAAsCnI,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAUE,OANzD,+BASD,OADAM,aAAiB,QAAS,gBAAV,OAA2BR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAUS,SARpD,UASKL,aAAI1Q,KAAS0Y,6BAAT,OAAsCpI,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAUS,UATzD,gCAcH,OAdG,0BAYG+D,EAAa,6CAAS,KAAOxE,gBAAhB,aAAS,EAAiBE,QAA1B,sCAAkC,KAAOF,gBAAzC,iBAAkC,EAAiBE,YAAnD,aAAkC,EAAuBrK,QAAU,iCACtF2K,aAAiB,QAAS,gBAAiBgE,GAbxC,UAcGpE,aAAI1Q,KAAS0Y,6BAA6B5D,IAd7C,uDAkBA,SAAUoD,GAAqB7R,GAA/B,kFAIc,OAHnBtB,QAAQC,IAAI,kCAAmCqB,GACvCgL,EAAUhL,EAAVgL,MAFH,kBAIoBjB,aAAKuI,GAAyBtH,GAJlD,WAIGf,EAJH,QAKSC,SAAWqI,KALpB,iBAMD,OANC,SAMKlI,aAAI1Q,KAAS6Y,4BAAT,OAAqCvI,QAArC,IAAqCA,OAArC,EAAqCA,EAAUE,OANxD,+BASD,OADAM,aAAiB,QAAS,gBAAV,OAA2BR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAUS,SARpD,UASKL,aAAI1Q,KAAS8Y,4BAAT,OAAqCxI,QAArC,IAAqCA,OAArC,EAAqCA,EAAUS,UATxD,gCAcH,OAdG,0BAYG+D,EAAa,6CAAS,KAAOxE,gBAAhB,aAAS,EAAiBE,QAA1B,sCAAkC,KAAOF,gBAAzC,iBAAkC,EAAiBE,YAAnD,aAAkC,EAAuBrK,QAAU,8BACtF2K,aAAiB,QAAS,gBAAiBgE,GAbxC,UAcGpE,aAAI1Q,KAAS8Y,4BAA4BhE,IAd5C,uDAmBA,SAAUsD,GAAmB/R,GAA7B,kFAGc,OAFX6J,EAAY7J,EAAZ6J,QADH,kBAGoBE,aAAK2I,GAAqB7I,GAH9C,WAGGI,EAHH,QAISC,SAAWqI,KAJpB,iBAMD,OADA9H,aAAiB,UAAW,eAAZ,OAA4BR,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUS,SALrD,SAMKL,aAAI1Q,KAASgZ,0BAAT,OAAmC1I,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAUE,OANtD,+BASD,OADAM,aAAiB,QAAS,eAAV,OAA0BR,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUS,SARnD,UASKL,aAAI1Q,KAASiZ,0BAAT,OAAmC3I,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAUS,UATtD,gCAcH,OAdG,0BAYG+D,EAAa,6CAAS,KAAOxE,gBAAhB,aAAS,EAAiBE,QAA1B,sCAAkC,KAAOF,gBAAzC,iBAAkC,EAAiBE,YAAnD,aAAkC,EAAuBrK,QAAU,8BACtF2K,aAAiB,QAAS,eAAgBgE,GAbvC,UAcGpE,aAAI1Q,KAASiZ,0BAA0BnE,IAd1C,uDAyBA,SAAUuD,GAAwBhS,GAAlC,kEACL,OADK,SACC4L,aAAWlS,KAAM4M,qBAAsBwL,IADxC,wCAIA,SAAUG,GAA0BjS,GAApC,kEACL,OADK,SACC4L,aAAWlS,KAAM+M,wBAAyBoL,IAD3C,wCAIA,SAAUK,GAAwBlS,GAAlC,kEACL,OADK,SACC4L,aAAWlS,KAAMkN,qBAAsBmL,IADxC,wC,aChFA,SAASc,GAAqBhJ,GACnC,OAAOqF,aAAQ,CACb/D,IAAI,mCACJD,OAAQ,OACRf,KAAMN,IAYH,SAASiJ,GAA0B9H,GACxC,IAAMc,EAAWC,aAAqBf,GACtC,OAAOkE,aAAQ,CACb/D,IAAI,aAAD,OAAeW,GAClBZ,OAAQ,Q,iBCVK6H,I,aAqCAC,I,aA4BAC,I,aAIAC,IArEV,SAAUH,GAAuB/S,GAAjC,kFAEc,OAFd,kBAEoB+J,aAAKoJ,GAA8BnT,EAAOgL,OAF9D,UAEGf,EAFH,OAGHvL,QAAQC,IAAI,mBAAoBsL,IAC7B,CAAC,KAAM,UAAW,SAASqE,SAASrE,EAASC,QAJ7C,iBAMD,OADMjK,GAAuB,OAARgK,QAAQ,IAARA,OAAA,EAAAA,EAAUE,OAAQ,GALtC,SAMKE,aAAI1Q,KAASyZ,8BAA8BnT,IANhD,+BASD,OADAwK,aAAiB,QAAS,gBAAiBR,EAASS,SAAW,4BAR9D,UASKL,aAAI1Q,KAAS0Z,8BAA8BpJ,EAASS,SAAW,8BATpE,gCAcH,OAdG,0BAYG+D,EAAa,6CAAS,KAAOxE,gBAAhB,aAAS,EAAiBE,QAA1B,sCAAkC,KAAOF,gBAAzC,iBAAkC,EAAiBE,YAAnD,aAAkC,EAAuBrK,QAAU,8BACtF2K,aAAiB,QAAS,gBAAiBgE,GAbxC,UAcGpE,aAAI1Q,KAAS0Z,8BAA8B5E,IAd9C,uDAqCA,SAAUuE,GAAuBhT,GAAjC,4EAEc,OAFd,kBAEoB+J,aAAKuJ,GAAyBtT,EAAO6J,SAFzD,WAEGI,EAFH,QAGSC,SAAWqI,KAHpB,iBAKD,OADMtS,EAAegK,EAASE,KAJ7B,SAKKE,aAAI1Q,KAAS4Z,8BAA8BtT,IALhD,OAMD4K,YAAgB,eAChBJ,aAAiB,UAAW,oBAAqBR,EAASS,SAPzD,wBAUD,OADAD,aAAiB,QAAS,oBAAqBR,EAASS,SATvD,UAUKL,aAAI1Q,KAAS6Z,8BAA8BvJ,EAASS,UAVzD,gCAeH,OAfG,0BAaGmE,EAAY,MAAS,KAAM5E,SAASE,MAAQ,KAAMF,SAASE,KAAKrK,OAAU,8BAChF2K,aAAiB,QAAS,QAASoE,GAdhC,UAeGxE,aAAI1Q,KAAS6Z,8BAA8B3E,IAf9C,uDA4BA,SAAUoE,GAA8BjT,GAAxC,kEACL,OADK,SACC4L,aAAWlS,KAAMkO,6BAA8BmL,IADhD,wCAIA,SAAUG,GAA4BlT,GAAtC,kEACL,OADK,SACC4L,aAAWlS,KAAMqO,0BAA2BiL,IAD7C,wC,iBCxBkBS,IAAV,SAAUA,KAAV,kEACd,OADc,SACRC,aAAI,CACT/J,KACAC,KAEA2B,KACAD,KACAG,KACAD,KAEAa,KACAC,KACAC,KACAC,KAEAW,KACAI,KACAH,KACAC,KACAC,KAEAY,KACAC,KACAC,KAEA6B,KACAC,KACAC,KAEAe,KACAC,KACAC,KAEAa,KACAD,KACAE,KAEAgB,KACAD,OAtCa,wCCnDAU,yBAMf,IAAMC,GAAiBC,cAGjBC,GAAc,CAACF,IANZ/Z,GAM+C8H,OAAOoS,SAGzD1X,GAAQ2X,YACZC,GACAC,IAAe,WAAf,cAAmBJ,MAIrBF,GAAeO,IAAIV,IAEJpX,U,SCjBf+X,IAASC,OACL,cAAC,IAAD,CAAUhY,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAQkO,QAASA,KAAS+J,SAAUza,kCAApC,SAEE,cAAC,EAAD,QAGN0a,SAASC,eAAe,SAM1B9W,K,gCCvBA,wIAAO,IAAM0M,EAAkB,SAACqK,EAAOtK,GACrC,IACsB,kBAATA,EACTuK,aAAaC,QAAQF,EAAOG,KAAKC,UAAU1K,IAE3CuK,aAAaC,QAAQF,EAAOtK,GAE9B,MAAO2K,GACPpW,QAAQC,IAAI,kCAAmCmW,KAkBtCtW,EAAgB,SAACiW,GAC5B,IACE,OAAOC,aAAaK,QAAQN,GAC5B,MAAOK,GACP,OAAO,OAIEzW,EAAsB,SAACoW,GAClC,IACE,OAAOC,aAAaK,QAAQN,IAAUG,KAAKI,MAAMN,aAAaK,QAAQN,IACtE,MAAOK,GACP,OAAO,OAIEjK,EAAkB,SAAC4J,GAC9B,IACEC,aAAaO,WAAWR,GACxB,MAAOK,GACPpW,QAAQC,IAAI,mCAAoCmW,M,gCC9CpD,gFAEO,EAA4Brc,wBACjC,CACE0T,eAAgB,CAAC,SACjBM,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBN,eAAgB,CAAC,WACjBO,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBX,eAAgB,CAAC,aAAc,WAC/Ba,sBAAuB,CAAC,gBACxBC,sBAAuB,CAAC,SAExBb,eAAgB,CAAC,cACjBe,sBAAuB,CAAC,cACxBC,sBAAuB,CAAC,SAExBgI,YAAa,CAAC,cACdC,mBAAoB,CAAC,cACrBC,mBAAoB,CAAC,SAErBC,eAAgB,OAtBL3b,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,oEAAO,IAAM8E,EAAiB,aACjBH,EAAgB,a,gCCD7B,oVAAO,IAAMd,EAAc,cACdD,EAAa,OACbR,EAAkB,iBAClBI,EAAoB,mBACpBC,EAAkB,iBAClBkY,EAAqB,qBACrBjY,EAAiB,iBACjBH,EAAoB,mBACpBD,EAAgB,gBAIhBD,EAAkB,oB,gCCZ/B,gFAEO,EAA4BvE,wBACjC,CACEsV,cAAe,CAAC,SAChBQ,qBAAsB,CAAC,gBACvBC,qBAAsB,CAAC,SAEvB+G,WAAY,CAAC,aACbC,kBAAmB,CAAC,gBACpBC,kBAAmB,CAAC,SAEpBzH,cAAe,CAAC,WAChBW,qBAAsB,CAAC,gBACvBC,qBAAsB,CAAC,SAEvBX,cAAe,CAAC,WAChBc,qBAAsB,CAAC,YAAa,gBACpCC,qBAAsB,CAAC,SAEvB0G,cAAe,CAAC,YAAa,WAC7BC,qBAAsB,CAAC,gBACvBC,qBAAsB,CAAC,SAEvBjE,aAAc,OAtBHjY,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,gFAEO,EAA4BlB,wBACjC,CACEod,mBAAoB,CAAC,SACrBC,0BAA2B,CAAC,gBAC5BC,0BAA2B,CAAC,SAE5BlE,qBAAsB,CAAC,SACvBW,4BAA6B,CAAC,gBAC9BC,4BAA6B,CAAC,SAE9BuD,gBAAiB,CAAC,aAClBC,uBAAwB,CAAC,gBACzBC,uBAAwB,CAAC,SAEzBnE,mBAAoB,CAAC,WACrBY,0BAA2B,CAAC,gBAC5BC,0BAA2B,CAAC,SAE5BuD,mBAAoB,CAAC,WACrBC,0BAA2B,CAAC,KAAM,gBAClCC,0BAA2B,CAAC,SAE5BC,mBAAoB,CAAC,YAAa,WAClCC,0BAA2B,CAAC,gBAC5BC,0BAA2B,CAAC,SAE5BC,kBAAmB,OA1BR/c,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,gFAEO,EAA4BlB,wBACjC,CACEsa,uBAAwB,CAAC,SACzBK,8BAA+B,CAAC,gBAChCC,8BAA+B,CAAC,SAEhCqD,yBAA0B,CAAC,SAC3BlE,4BAA6B,CAAC,gBAC9BC,4BAA6B,CAAC,SAE9BkE,oBAAqB,CAAC,aACtBC,2BAA4B,CAAC,gBAC7BC,2BAA4B,CAAC,SAE7B7D,uBAAwB,CAAC,WACzBO,8BAA+B,CAAC,gBAChCC,8BAA+B,CAAC,SAEhCsD,uBAAwB,CAAC,WACzBC,8BAA+B,CAAC,KAAM,gBACtCC,8BAA+B,CAAC,SAEhCC,uBAAwB,CAAC,YAAa,WACtCC,8BAA+B,CAAC,gBAChCC,8BAA+B,CAAC,SAEhCC,sBAAuB,OA1BZ1d,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,oEAAO,IAAM0d,EAAsB,CACjCC,YAAa,cACbC,oBAAqB,uBACrBC,kBAAmB,oBACnBC,6CAA8C,sBAC9CC,qBAAsB,sBACtBC,gCAAiC,kCAGtBC,EAAuB,CAClCC,QAAS,UACTC,OAAQ,SACRC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,QAAS,Y,2GCmBI7b,iBALS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,KAAKC,KACrB0b,YAAa7b,EAAME,KAAKkD,SAGc,KAAzBrD,EAxBY,SAAC,GAAqE,IAAxD+b,EAAuD,EAAlEtb,UAAsBub,EAA4C,EAA5CA,MAAO9b,EAAqC,EAArCA,SAA0B+b,GAAW,EAA3BH,YAA2B,+DAC9F,OACE,cAAC,IAAD,2BACMG,GADN,IAEEhE,OAAU,SAAA5X,GACR,IAAMyb,EAAc1Z,YAAcC,KAClC,OAAKnC,GAAY4b,EAIdE,IAA2C,IAAlCA,EAAME,QAAQhc,EAASkD,MAC1B,cAAC,IAAD,CAAU/B,GAAI6X,MAEhB,cAAC6C,EAAD,2BAAe1b,GAAW4b,IANxB,cAAC,IAAD,CAAU5a,GAAID,c,gCChB/B,gFAEO,EAA4B/E,wBACjC,CACEuX,gBAAiB,CAAC,SAClBK,uBAAwB,CAAC,gBACzBC,uBAAwB,CAAC,SAEzBd,gBAAiB,CAAC,cAAc,WAChCgB,uBAAwB,CAAC,cAAe,gBACxCC,uBAAwB,CAAC,SAEzBf,gBAAiB,CAAC,WAClBiB,uBAAwB,CAAC,gBACzB4H,uBAAwB,CAAC,SAEzBC,eAAgB,OAdL9e,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,4HAEO,SAAS8e,EAAiBC,GAC/B,OAAIA,EACGC,IAAsBD,EAAM,qBADlB,MAIZ,SAASE,IAEd,MADiB,WAAOC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,KAI/D,SAASjN,EAAsBkN,GACpC,MAAO,IAAMC,OAAOC,KAAKF,GAAKG,QAAO,SAASC,EAAGC,GAI/C,OAHGL,EAAIK,IACLD,EAAE7O,KAAK8O,EAAI,IAAMC,mBAAmBN,EAAIK,KAEnCD,IACN,IAAIG,KAAK,O,gCClBd,8CAGajP,EAAUkP,e,gCCHvB,gFAEO,EAA4BhhB,wBACjC,CACEsY,uBAAwB,CAAC,SACzBO,8BAA+B,CAAC,gBAChCC,8BAA+B,CAAC,SAEhCP,sBAAuB,CAAC,WACxBS,6BAA8B,CAAC,gBAC/BC,6BAA8B,CAAC,SAE/BT,qBAAsB,OAVXvX,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,gFAEO,EAA4BlB,wBACjC,CACEgR,MAAO,CAAC,WACRa,aAAc,CAAC,gBACfM,aAAc,CAAC,SAEflB,OAAQ,KAERgQ,UAAW,OARAhgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,U,gCCFtB,+NAGO,SAASggB,IACd,OAAO1O,YAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKlR,OAIL,SAAS2f,EAAQhK,GACtB,OAAO3E,YAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKlR,KAAL,OAAyB2V,KAIzB,SAASiK,EAAS1P,GACvB,OAAOc,YAAW,CAChBC,OAAQ,OACRC,IAAI,qBACJhB,SAIG,SAAS2P,EAAWlK,EAAQzF,GACjC,OAAOc,YAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKlR,KAAL,OAAyB2V,GAC5BzF,SAIG,SAAS4P,EAAWnK,GACzB,OAAO3E,YAAW,CAChBC,OAAQ,SACRC,IAAI,GAAD,OAAKlR,KAAL,OAAyB2V,KAKzB,SAASoK,EAAmBpK,EAAQzF,GACzC,OAAOc,YAAW,CAChBC,OAAQ,MACRC,IAAI,GAAD,OAAKlR,KAAL,OAAyB2V,EAAzB,mBACHzF,W,gCC7CJ,yIAMO,SAASH,EAAOH,GACrB,OAAOoB,YAAW,CAChBE,IAAI,UACJD,OAAQ,OACRf,KAAMN,IAIH,SAASoQ,IACdpP,YAAgBpM,KAChBoM,YAAgBvM,KAEhBiM,IAAQC,KAAK,UAIR,SAAS0P,EAAe1a,EAAM4Y,GACnC,OAAIA,IAC4B,IAAzBA,EAAME,QAAQ9Y,K,+BCxBvB,aAQeiL,IAPU,SAAC0P,EAAMzP,EAASpL,GACvC8a,IAAaD,GAAM,CACjBzP,UACApL,kB,+BCJJ,gGAOaiT,EAAwB,UAE/B8H,EAAY,CAChBC,QAAS,IACTC,QAAS3gB,KAOLkP,EAAU0R,IAAMC,OAAOJ,GAE7BvR,EAAQ4R,aAAa5R,QAAQ6R,KAAI,SAACC,IACK,IAAlCA,EAAOzP,IAAImN,QAAQ,YAAqD,IAAjCsC,EAAOzP,IAAImN,QAAQ,WAC3DsC,EAAOL,QAAUzgB,KAEnB,IAAMoe,EAAc1Z,YAAcC,KAKlC,OAJGyZ,IACD0C,EAAOC,QAAP,+BAA4C3C,IAE9CxZ,QAAQC,IAAI,eAAgBic,GACrBA,KACN,SAAA9a,GACD,OAAOgb,QAAQC,OAAOjb,MAGxBgJ,EAAQ4R,aAAazQ,SAAS0Q,KAAI,SAAC1Q,GACjC,IAAQC,EAAuBD,EAAvBC,OAAQ8Q,EAAe/Q,EAAf+Q,WAChB,OAAc,MAAX9Q,GAC+C,IAA7CD,EAAS2Q,OAAOzP,IAAImN,QAAQ,YACtBwC,QAAQG,QAAQhR,GAElB6Q,QAAQG,QAAQhR,EAASE,OACb,MAAXD,EACRK,IAAQC,KAAK,mBACK,MAAXN,GACPgR,MAEKJ,QAAQC,OAAOC,OACrB,SAAClb,GAAW,IAAD,EACJoK,IAAgB,OAALpK,QAAK,IAALA,GAAA,UAAAA,EAAOmK,gBAAP,eAAiBE,OAAQ,IAApCD,OAMR,OALc,MAAXA,EACDK,IAAQC,KAAK,mBACM,MAAXN,GACRgR,MAEKJ,QAAQC,OAAOjb,MAGTgJ,O,gCCzDf,mKAKO,SAASqS,EAAYtR,GAC1B,OAAOqF,YAAQ,CACb/D,IAAI,wBACJD,OAAQ,OACRf,KAAMN,IAKH,SAASuR,EAAoBxL,GAClC,OAAOV,YAAQ,CACX/D,IAAI,2BACJD,OAAQ,QAmDP,SAASmQ,EAAwBzW,GACtC,OAAOsK,YAAQ,CACX/D,IAAI,8BACJD,OAAQ,QA+FP,SAAS+C,EAAc9D,GAC5B,IAAQmR,EAAgCnR,EAAhCmR,WAAY1L,EAAoBzF,EAApByF,OAAQ/F,EAAYM,EAAZN,QAC5B,OAAQyR,GACN,KAAK1D,IAAqBC,QACxB,OA9HC,SAAgC0D,EAAYpR,GACjD,OAAO+E,YAAQ,CACX/D,IAAI,uCAAD,OAAyCoQ,GAC5CrQ,OAAQ,MACRf,SA0HOqR,CAAuB5L,EAAQ/F,GACxC,KAAK+N,IAAqBE,OACxB,OAhHC,SAA2BjO,GAChC,OAAOqF,YAAQ,CACX/D,IAAI,2BACJD,OAAQ,MACRf,KAAMN,IA4GC4R,CAAkB5R,GAC3B,KAAK+N,IAAqBH,6CACxB,OApEC,SAA+BtN,GACpC,OAAO+E,YAAQ,CACX/D,IAAI,4CACJD,OAAQ,MACRf,SAgEOuR,CAAsB7R,GAC/B,KAAK+N,IAAqBI,kBACxB,OAAO9I,YAAQ,CAAC/D,IAAI,mCAAqCD,OAAQ,MAAOf,KAAMA,EAAKN,UACrF,KAAK+N,IAAqBK,QACxB,OAAO/I,YAAQ,CAAC/D,IAAI,6BAA+BD,OAAQ,MAAOf,KAAMN,KAMvE,SAASkE,EAAc/C,GAC5B,IA/C2CpI,EA7GAlB,EAAckD,EA4JjDwK,EAAwBpE,EAAxBoE,YAAwBpE,EAAX4E,OAErB,OADAlR,QAAQC,IAAI,yBACJyQ,GACN,KAAKiI,IAAoBC,YACvB,OAAO8D,EAAoBpQ,EAAM4E,QACnC,KAAKyH,IAAoBE,oBACvB,OAlKuC7V,EAkKHsJ,EAAMtJ,aAlKWkD,EAkKGoG,EAAM4E,OAjK3DV,YAAQ,CACX/D,IAAI,6BAAD,OAA+BzJ,EAA/B,sBAAyDkD,GAC5DsG,OAAQ,QAgKV,KAAKmM,IAAoBI,6CACvB,OAAO4D,IACT,KAAKhE,IAAoBM,gCACvB,OAzDuC/U,EAyDHoI,EAAMpI,WAxDvCsM,YAAQ,CACb/D,IAAI,4CAAD,OAA8CvI,GACjDsI,OAAQ,QAuDR,KAAKmM,IAAoBG,kBACvB,OAAO6D,EAAwBrQ,EAAM4E,QACvC,QAEE,OADAlR,QAAQC,IAAI,uBAlLX,SAA4BqM,GACjC,IAAMc,EAAWC,YAAqBf,GACtC,OAAOkE,YAAQ,CACX/D,IAAI,iBAAD,OAAmBW,GACtBZ,OAAQ,QA+KDyQ,CAAmB3Q,M,gCCxMhC,sGAAO,IAAMqE,EAAiB,MACjBC,EAA8B,mBAC9BC,EAAmC,0B","file":"static/js/main.52ca6c3d.chunk.js","sourcesContent":["import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchEmployees: [\"query\"],\r\n    fetchEmployeesSuccess: [\"responseData\"],\r\n    fetchEmployeesFailure: [\"error\"],\r\n\r\n    getEmployee: [\"employeeId\"],\r\n    getEmployeeSuccess: [\"responseData\"],\r\n    getEmployeeFailure: [\"error\"],\r\n\r\n    createEmployee: [\"payload\"],\r\n    createEmployeeSuccess: [\"responseData\"],\r\n    createEmployeeFailure: [\"error\"],\r\n\r\n    updateEmployee: [\"employeeId\", \"payload\"],\r\n    updateEmployeeSuccess: [\"responseData\"],\r\n    updateEmployeeFailure: [\"error\"],\r\n\r\n    deleteEmployee: [\"employeeId\"],\r\n    deleteEmployeeSuccess: [\"responseData\"],\r\n    deleteEmployeeFailure: [\"error\"],\r\n\r\n    resetEmployee: null\r\n  }\r\n)","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const AUTH_BASE_URL = process.env.REACT_APP_BASE_URL_AUTH;\r\n\r\n//auth endpoints\r\nexport const AUTH_ENDPOINT = \"/auth/login\"\r\n\r\n//depatrtmens endpoint\r\nexport const DEPARTMENTS_ENDPOINT = \"/departments/\"\r\n\r\n//suppliers endpoint\r\nexport const SUPPLIERS_ENDPOINT = \"/suppliers/\"\r\n\r\n//my requests endpoint\r\nexport const MY_REQUESTS_ENDPOINT = \"/my-requests/\"\r\n\r\n//quotation endpoint\r\nexport const QUOTATION_ENDPOINT = \"/quotations/\"\r\n\r\n//users endpoint\r\nexport const EMPLOYEE_ENDPOINT = \"/employees/\"","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchDepartments: [\"query\"],\r\n    fetchDepartmentsSuccess: [\"responseData\"],\r\n    fetchDepartmentsFailure: [\"error\"],\r\n\r\n    getDepartment: [\"departmentId\"],\r\n    getDepartmentSuccess: [\"responseData\"],\r\n    getDepartmentFailure: [\"error\"],\r\n\r\n    createDepartment: [\"payload\"],\r\n    createDepartmentSuccess: [\"responseData\"],\r\n    createDepartmentFailure: [\"error\"],\r\n\r\n    updateDepartment: [\"departmentId\", \"payload\"],\r\n    updateDepartmentSuccess: [\"responseData\"],\r\n    updateDepartmentFailure: [\"error\"],\r\n\r\n    deleteDepartment: [\"departmentId\"],\r\n    deleteDepartmentSuccess: [\"departmentId\"],\r\n    deleteDepartmentFailure: [\"error\"],\r\n\r\n    resetDepartment: null\r\n  }\r\n)","import \"antd/dist/antd.less\";\n//import \"./App.less\"\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport React from \"react\";\nimport { Spin } from \"antd\";\nimport { DEPARTMENTS_ROUTE, HOME_ROUTE, LOGIN_ROUTE, SUPPLIERS_ROUTE, EMPLOYEE_ROUTE, MY_REQUESTS_ROUTE, REQUEST_ROUTE, PROCUREMENT_ROUTE, DASHBOARD_ROUTE } from \"./util/routes\";\nimport './styles/app.less'\nimport AuthenticatedRoute from './presentation/AuthenticatedRoute'\nimport { connect } from 'react-redux'\nconst Login = React.lazy(()=> import('./containers/Auth'))\nconst Home = React.lazy(()=> import('./containers/Home'))\nconst Department = React.lazy(()=> import('./containers/Department'))\nconst Supplier = React.lazy(() => import('./containers/Suppliers'))\nconst Employee = React.lazy(() => import('./containers/Employee'))\nconst MyRequest = React.lazy(()=> import('./containers/MyRequest'))\nconst Request = React.lazy(()=> import('./containers/Requests'))\nconst NotAuthorized = React.lazy(()=> import('./containers/NotAuthorized'))\nconst Procurement = React.lazy(() => import('./containers/Procurement'))\nconst Dashboard = React.lazy(() => import('./containers/Dashboard'))\nconst Store = React.lazy(() => import('./containers/Store'))\nconst Settings = React.lazy(()=> import('./containers/Settings'))\nconst Account = React.lazy(() => import('./containers/Account'))\nconst Report = React.lazy(()=> import('./containers/Report'))\nconst Audit = React.lazy(() => import('./containers/Audit'))\nconst QuotationView = React.lazy(() => import('./containers/QuotationView'))\n\nfunction App(props) {\n  return (\n    <>\n      <React.Suspense fallback={<Spin />}>\n        <Switch>\n          <Route path=\"/app/account\" component={Account} {...props} />\n          <Route path=\"/app/store\" component={Store} {...props} />\n          <AuthenticatedRoute path={`${DASHBOARD_ROUTE}`} component={Dashboard} />\n          <Route path={PROCUREMENT_ROUTE} component={Procurement} {...props} />\n          <Route path={REQUEST_ROUTE} component={Request} {...props} />\n          <AuthenticatedRoute path={MY_REQUESTS_ROUTE} component={MyRequest} />\n          <AuthenticatedRoute path={DEPARTMENTS_ROUTE} component={Department} />\n          <AuthenticatedRoute path={SUPPLIERS_ROUTE} component={Supplier} />\n          <AuthenticatedRoute path={EMPLOYEE_ROUTE}  component={Employee} />\n          <AuthenticatedRoute exact path={HOME_ROUTE}  component={Home} />\n          <AuthenticatedRoute path=\"/app/settings\" component={Settings} {...props} />\n          <AuthenticatedRoute path=\"/app/reports\" component={Report} {...props} />\n          <AuthenticatedRoute path=\"/app/quotations\" component={QuotationView} {...props} />\n          <Route path=\"/app/audit\" component={Audit} {...props} />\n          <Route path={LOGIN_ROUTE} component={Login} />\n          <Route path=\"/not-authorized\" component={NotAuthorized} />\n          <AuthenticatedRoute path=\"/\" ><Redirect to={HOME_ROUTE}/></AuthenticatedRoute>\n        </Switch>\n      </React.Suspense>\n    </>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  authUser: store.auth.user\n})\n\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  LOGIN\r\n  LOGIN_SUCCESS\r\n  LOGIN_FAILURE\r\n  LOGOUT\r\n  \r\n\r\n  RESET_AUTH\r\n\r\n`,\r\n  {}\r\n);","import { getLocalState, getLocalStateObject } from '../../app-storage'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\nimport Types from './actionTypes'\r\n\r\nimport { createReducer } from 'reduxsauce'\r\n\r\nconst LOCAL_STORE_USER = getLocalStateObject(AUTH_USER_KEY)\r\nconst LOCAL_STORE_TOKEN = getLocalState(AUTH_TOKEN_KEY)\r\n\r\nconsole.log('YES TOKEN', LOCAL_STORE_TOKEN, 'TOKEN KEY', AUTH_TOKEN_KEY)\r\n\r\nconsole.log('INIT USER', LOCAL_STORE_USER)\r\n\r\nconst INITIAL_USER = {\r\n  id: undefined,\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  fullName: \"\",\r\n  email: \"\",\r\n  phoneNo: \"\",\r\n  department: {id: undefined, name: \"\", description: \"\"},\r\n  enabled: false,\r\n  role: \"\",\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  user: LOCAL_STORE_USER ? LOCAL_STORE_USER : INITIAL_USER,\r\n  token: LOCAL_STORE_TOKEN ? LOCAL_STORE_TOKEN : null,\r\n  loading: false\r\n}\r\n\r\n\r\n\r\nexport const login = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    error: null,\r\n    loading: true,\r\n    token: null\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (state = INITIAL_STATE, action) => {\r\n  const { employee, token } = action.responseData\r\n  console.log('user', employee)\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    user: { ...employee, role: employee.role[0] },\r\n    token: token\r\n  };\r\n};\r\n\r\nexport const loginFailure = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    error: action.error,\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const logout = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const resetAuth = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const HANDLERS = {\r\n  [Types.LOGIN]: login,\r\n  [Types.LOGIN_SUCCESS]: loginSuccess,\r\n  [Types.LOGIN_FAILURE]: loginFailure,\r\n\r\n  [Types.LOGOUT]: logout,\r\n  \r\n\r\n  [Types.RESET_AUTH]: resetAuth,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_DEPARTMENTS\r\n  FETCH_DEPARTMENTS_SUCCESS\r\n  FETCH_DEPARTMENTS_FAILURE\r\n\r\n  GET_DEPARTMENT\r\n  GET_DEPARTMENT_SUCCESS\r\n  GET_DEPARTMENT_FAILURE\r\n\r\n  CREATE_DEPARTMENT\r\n  CREATE_DEPARTMENT_SUCCESS\r\n  CREATE_DEPARTMENT_FAILURE\r\n\r\n  UPDATE_DEPARTMENT\r\n  UPDATE_DEPARTMENT_SUCCESS\r\n  UPDATE_DEPARTMENT_FAILURE\r\n\r\n  DELETE_DEPARTMENT\r\n  DELETE_DEPARTMENT_SUCCESS\r\n  DELETE_DEPARTMENT_FAILURE\r\n\r\n  RESET_DEPARTMENT\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  departments: [],\r\n  loading: false,\r\n  submitting: false,\r\n  department: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchDepartments = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false, submitSuccess: false };\r\n};\r\n\r\nexport const fetchDepartmentsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, departments: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchDepartmentsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('REDUCER', action)\r\n  return { ...state, departments: state.departments.concat([action.responseData]), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSucces: false};\r\n};\r\n\r\n//edit\r\nexport const updateDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('lets update dept reducer', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const deleteDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.filter(item=> item.id !== departmentId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\nexport const resetDepartment = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    departments: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSucces: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_DEPARTMENTS]: fetchDepartments,\r\n  [Types.FETCH_DEPARTMENTS_SUCCESS]: fetchDepartmentsSuccess,\r\n  [Types.FETCH_DEPARTMENTS_FAILURE]: fetchDepartmentsFailure,\r\n\r\n  [Types.CREATE_DEPARTMENT]: createDepartment,\r\n  [Types.CREATE_DEPARTMENT_SUCCESS]: createDepartmentSuccess,\r\n  [Types.CREATE_DEPARTMENT_FAILURE]: createDepartmentFailure,\r\n\r\n  [Types.UPDATE_DEPARTMENT]: updateDepartment,\r\n  [Types.UPDATE_DEPARTMENT_SUCCESS]: updateDepartmentSuccess,\r\n  [Types.UPDATE_DEPARTMENT_FAILURE]: updateDepartmentFailure,\r\n\r\n  [Types.DELETE_DEPARTMENT]: deleteDepartment,\r\n  [Types.DELETE_DEPARTMENT_SUCCESS]: deleteDepartmentSuccess,\r\n  [Types.DELETE_DEPARTMENT_FAILURE]: deleteDepartmentFailure,\r\n  \r\n  [Types.RESET_DEPARTMENT]: resetDepartment\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_SUPPLIERS\r\n  FETCH_SUPPLIERS_SUCCESS\r\n  FETCH_SUPPLIERS_FAILURE\r\n\r\n  CREATE_SUPPLIER\r\n  CREATE_SUPPLIER_SUCCESS\r\n  CREATE_SUPPLIER_FAILURE\r\n\r\n  UPDATE_SUPPLIER\r\n  UPDATE_SUPPLIER_SUCCESS\r\n  UPDATE_SUPPLIER_FAILURE\r\n\r\n  GET_SUPPLIER\r\n  GET_SUPPLIER_SUCCESS\r\n  GET_SUPPLIER_FAILURE\r\n\r\n  DELETE_SUPPLIER\r\n  DELETE_SUPPLIER_SUCCESS\r\n  DELETE_SUPPLIER_FAILURE\r\n\r\n  RESET_SUPPLIERS\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  suppliers: [],\r\n  supplier: {},\r\n  loaidng: false,\r\n  submitting: false,\r\n  submitSuccess: false\r\n};\r\n\r\n\r\n//fetch\r\nexport const fetchSuppliers = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const fetchSuppliersSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, suppliers: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchSuppliersFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, suppliers: []};\r\n};\r\n\r\n//get\r\nexport const getSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const getSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, supplier: action.responseData, loading: false};\r\n};\r\n\r\nexport const getSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const createSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('ADD SUPPLIER REDUCER', action)\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: true};\r\n};\r\n\r\nexport const createSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//edit\r\nexport const updateSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const updateSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('action update success', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    submitSuccess: true,\r\n    suppliers: state.suppliers.map(supplier=> {\r\n      if(supplier.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return supplier;\r\n      }\r\n    }), \r\n    submitting: false, error: action.error\r\n  };\r\n};\r\n\r\nexport const updateSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//delete\r\nexport const deleteSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const deleteSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('------>id', state.suppliers.filter(item => item.id !== action.supplierId))\r\n  return { \r\n    ...state, \r\n    suppliers: state.suppliers.filter(item => item.id !== action.supplierId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\nexport const resetSuppliers = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    suppliers: [],\r\n    error: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_SUPPLIERS]: fetchSuppliers,\r\n  [Types.FETCH_SUPPLIERS_SUCCESS]: fetchSuppliersSuccess,\r\n  [Types.FETCH_SUPPLIERS_FAILURE]: fetchSuppliersFailure,\r\n\r\n  [Types.CREATE_SUPPLIER]: createSupplier,\r\n  [Types.CREATE_SUPPLIER_SUCCESS]: createSupplierSuccess,\r\n  [Types.CREATE_SUPPLIER_FAILURE]: createSupplierFailure,\r\n\r\n  [Types.UPDATE_SUPPLIER]: updateSupplier,\r\n  [Types.UPDATE_SUPPLIER_SUCCESS]: updateSupplierSuccess,\r\n  [Types.UPDATE_SUPPLIER_FAILURE]: updateSupplierFailure,\r\n\r\n  [Types.DELETE_SUPPLIER]: deleteSupplier,\r\n  [Types.DELETE_SUPPLIER_SUCCESS]: deleteSupplierSuccess,\r\n  [Types.DELETE_SUPPLIER_FAILURE]: deleteSupplierFailure,\r\n\r\n  [Types.GET_SUPPLIER]: getSupplier,\r\n  [Types.GET_SUPPLIER_SUCCESS]: getSupplierSuccess,\r\n  [Types.GET_SUPPLIER_FAILURE]: getSupplierFailure,\r\n\r\n  [Types.RESET_SUPPLIERS]: resetSuppliers,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUESTS\r\n  FETCH_REQUESTS_SUCCESS\r\n  FETCH_REQUESTS_FAILURE\r\n\r\n  GET_REQUEST\r\n  GET_REQUEST_SUCCESS\r\n  GET_REQUEST_FAILURE\r\n\r\n  CREATE_REQUEST\r\n  CREATE_REQUEST_SUCCESS\r\n  CREATE_REQUEST_FAILURE\r\n\r\n  UPDATE_REQUEST\r\n  UPDATE_REQUEST_SUCCESS\r\n  UPDATE_REQUEST_FAILURE\r\n\r\n  DELETE_REQUEST\r\n  DELETE_REQUEST_SUCCESS\r\n  DELETE_REQUEST_FAILURE\r\n\r\n  RESET_REQUEST\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requests: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n  department: {}\r\n};\r\n\r\n//fetch\r\nexport const fetchRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//get\r\nexport const getRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { \r\n    ...state,\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false };\r\n};\r\n\r\nexport const deleteRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    requests: state.requests.filter(item=> item.id !== departmentId),\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const deleteRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequest = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requests: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUESTS]: fetchRequests,\r\n  [Types.FETCH_REQUESTS_SUCCESS]: fetchRequestsSuccess,\r\n  [Types.FETCH_REQUESTS_FAILURE]: fetchRequestsFailure,\r\n\r\n  [Types.CREATE_REQUEST]: createRequest,\r\n  [Types.CREATE_REQUEST_SUCCESS]: createRequestSuccess,\r\n  [Types.CREATE_REQUEST_FAILURE]: createRequestFailure,\r\n\r\n  [Types.UPDATE_REQUEST]: updateRequest,\r\n  [Types.UPDATE_REQUEST_SUCCESS]: updateRequestSuccess,\r\n  [Types.UPDATE_REQUEST_FAILURE]: updateRequestFailure,\r\n\r\n  [Types.DELETE_REQUEST]: deleteRequest,\r\n  [Types.DELETE_REQUEST_SUCCESS]: deleteRequestSuccess,\r\n  [Types.DELETE_REQUEST_FAILURE]: deleteRequestFailure,\r\n  \r\n  [Types.RESET_REQUEST]: resetRequest\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_EMPLOYEES\r\n  FETCH_EMPLOYEES_SUCCESS\r\n  FETCH_EMPLOYEES_FAILURE\r\n\r\n  GET_EMPLOYEE\r\n  GET_EMPLOYEE_SUCCESS\r\n  GET_EMPLOYEE_FAILURE\r\n\r\n  CREATE_EMPLOYEE\r\n  CREATE_EMPLOYEE_SUCCESS\r\n  CREATE_EMPLOYEE_FAILURE\r\n\r\n  UPDATE_EMPLOYEE\r\n  UPDATE_EMPLOYEE_SUCCESS\r\n  UPDATE_EMPLOYEE_FAILURE\r\n\r\n  DELETE_EMPLOYEE\r\n  DELETE_EMPLOYEE_SUCCESS\r\n  DELETE_EMPLOYEE_FAILURE\r\n\r\n  RESET_EMPLOYEE\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  employees: [],\r\n  loading: false,\r\n  submitting: false,\r\n  employee: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchEmployees = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchEmployeesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employees: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchEmployeesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employee: action.responseData, loading: false};\r\n};\r\n\r\nexport const getEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('resposeData', action.responseData)\r\n  return { ...state, employees: state.employees.concat(action.responseData), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//edit\r\nexport const updateEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    employees: state.employees.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: true };\r\n};\r\n\r\nexport const deleteEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('delete action', action)\r\n  const { employeeId } = action.responseData\r\n  return { \r\n    ...state, \r\n    employees: state.employees.filter(item=> item.id !== employeeId),\r\n    submitting: false,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const deleteEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, loading: false};\r\n};\r\n\r\n\r\nexport const resetEmployee = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    employees: [],\r\n    employee: {},\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_EMPLOYEES]: fetchEmployees,\r\n  [Types.FETCH_EMPLOYEES_SUCCESS]: fetchEmployeesSuccess,\r\n  [Types.FETCH_EMPLOYEES_FAILURE]: fetchEmployeesFailure,\r\n\r\n  [Types.CREATE_EMPLOYEE]: createEmployee,\r\n  [Types.CREATE_EMPLOYEE_SUCCESS]: createEmployeeSuccess,\r\n  [Types.CREATE_EMPLOYEE_FAILURE]: createEmployeeFailure,\r\n\r\n  [Types.UPDATE_EMPLOYEE]: updateEmployee,\r\n  [Types.UPDATE_EMPLOYEE_SUCCESS]: updateEmployeeSuccess,\r\n  [Types.UPDATE_EMPLOYEE_FAILURE]: updateEmployeeFailure,\r\n\r\n  [Types.DELETE_EMPLOYEE]: deleteEmployee,\r\n  [Types.DELETE_EMPLOYEE_SUCCESS]: deleteEmployeeSuccess,\r\n  [Types.DELETE_EMPLOYEE_FAILURE]: deleteEmployeeFailure,\r\n  \r\n  [Types.RESET_EMPLOYEE]: resetEmployee\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_QUOTATIONS\r\n  FETCH_QUOTATIONS_SUCCESS\r\n  FETCH_QUOTATIONS_FAILURE\r\n\r\n  UPDATE_QUOTATION\r\n  UPDATE_QUOTATION_SUCCESS\r\n  UPDATE_QUOTATION_FAILURE\r\n\r\n  CREATE_QUOTATION\r\n  CREATE_QUOTATION_SUCCESS\r\n  CREATE_QUOTATION_FAILURE\r\n\r\n  RESET_QUOTATION\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  quotations: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchQuotations = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchQuotationsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, quotations: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchQuotationsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateQuotation = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateQuotationSuccess = (state = INITIAL_STATE, action) => {\r\n  const { quotationId, responseData } = action\r\n  return { \r\n    ...state, \r\n    quotations: state.quotations.map(item=> {\r\n      if(item.id === quotationId) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateQuotationFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\nexport const createQuotation = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, submitSuccess: false };\r\n};\r\n\r\nexport const createQuotationSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true };\r\n};\r\n\r\nexport const createQuotationFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: false };\r\n};\r\n\r\nexport const resetQuotation = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    quotations: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_QUOTATIONS]: fetchQuotations,\r\n  [Types.FETCH_QUOTATIONS_SUCCESS]: fetchQuotationsSuccess,\r\n  [Types.FETCH_QUOTATIONS_FAILURE]: fetchQuotationsFailure,\r\n\r\n  [Types.UPDATE_QUOTATION]: updateQuotation,\r\n  [Types.UPDATE_QUOTATION_SUCCESS]: updateQuotationSuccess,\r\n  [Types.UPDATE_QUOTATION_FAILURE]: updateQuotationFailure,\r\n\r\n  [Types.CREATE_QUOTATION]: createQuotation,\r\n  [Types.CREATE_QUOTATION_SUCCESS]: createQuotationSuccess,\r\n  [Types.CREATE_QUOTATION_FAILURE]: createQuotationFailure,\r\n  \r\n  [Types.RESET_QUOTATION]: resetQuotation\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUEST_CATEGORIES\r\n  FETCH_REQUEST_CATEGORIES_SUCCESS\r\n  FETCH_REQUEST_CATEGORIES_FAILURE\r\n\r\n  CREATE_REQUEST_CATEGORY\r\n  CREATE_REQUEST_CATEGORY_SUCCESS\r\n  CREATE_REQUEST_CATEGORY_FAILURE\r\n\r\n  RESET_REQUEST_CATEGORY\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requestCategories: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchRequestCategories = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestCategoriesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requestCategories: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestCategoriesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestCategorySuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestCategoryFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requestCategories: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSuccess: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUEST_CATEGORIES]: fetchRequestCategories,\r\n  [Types.FETCH_REQUEST_CATEGORIES_SUCCESS]: fetchRequestCategoriesSuccess,\r\n  [Types.FETCH_REQUEST_CATEGORIES_FAILURE]: fetchRequestCategoriesFailure,\r\n\r\n  [Types.CREATE_REQUEST_CATEGORY]: createRequestCategory,\r\n  [Types.CREATE_REQUEST_CATEGORY_SUCCESS]: createRequestCategorySuccess,\r\n  [Types.CREATE_REQUEST_CATEGORY_FAILURE]: createRequestCategoryFailure,\r\n  \r\n  [Types.RESET_REQUEST_CATEGORY]: resetRequestCategory\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_FLOAT_REQUESTS\r\n  FETCH_FLOAT_REQUESTS_SUCCESS\r\n  FETCH_FLOAT_REQUESTS_FAILURE\r\n\r\n  FETCH_MY_FLOAT_REQUESTS\r\n  FETCH_MY_FLOAT_REQUESTS_SUCCESS\r\n  FETCH_MY_FLOAT_REQUESTS_FAILURE\r\n\r\n  GET_FLOAT_REQUEST\r\n  GET_FLOAT_REQUEST_SUCCESS\r\n  GET_FLOAT_REQUEST_FAILURE\r\n\r\n  CREATE_FLOAT_REQUEST\r\n  CREATE_FLOAT_REQUEST_SUCCESS\r\n  CREATE_FLOAT_REQUEST_FAILURE\r\n\r\n  UPDATE_FLOAT_REQUEST\r\n  UPDATE_FLOAT_REQUEST_SUCCESS\r\n  UPDATE_FLOAT_REQUEST_FAILURE\r\n\r\n  DELETE_FLOAT_REQUEST\r\n  DELETE_FLOAT_REQUEST_SUCCESS\r\n  DELETE_FLOAT_REQUEST_FAILURE\r\n\r\n  RESET_FLOAT_REQUEST\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  float_requests: [],\r\n  my_float_requests: null,\r\n  float_request: null,\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchMyFloatRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const fetchMyFloatRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, my_float_requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchMyFloatRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//fetch\r\nexport const fetchFloatRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchFloatRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, float_requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchFloatRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//get\r\nexport const getFloatRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getFloatRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getFloatRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createFloatRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createFloatRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createFloatRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateFloatRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateFloatRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { \r\n    ...state,\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateFloatRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false };\r\n};\r\n\r\nexport const deleteRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    requests: state.requests.filter(item=> item.id !== departmentId),\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const deleteRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetFloatRequest = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    float_requests: [],\r\n    my_float_requests: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_FLOAT_REQUESTS]: fetchFloatRequests,\r\n  [Types.FETCH_FLOAT_REQUESTS_SUCCESS]: fetchFloatRequestsSuccess,\r\n  [Types.FETCH_FLOAT_REQUESTS_FAILURE]: fetchFloatRequestsFailure,\r\n\r\n  [Types.FETCH_MY_FLOAT_REQUESTS]: fetchMyFloatRequests,\r\n  [Types.FETCH_MY_FLOAT_REQUESTS_SUCCESS]: fetchMyFloatRequestsSuccess,\r\n  [Types.FETCH_MY_FLOAT_REQUESTS_FAILURE]: fetchMyFloatRequestsFailure,\r\n\r\n  [Types.CREATE_FLOAT_REQUEST]: createFloatRequest,\r\n  [Types.CREATE_FLOAT_REQUEST_SUCCESS]: createFloatRequestSuccess,\r\n  [Types.CREATE_FLOAT_REQUEST_FAILURE]: createFloatRequestFailure,\r\n\r\n  [Types.UPDATE_FLOAT_REQUEST]: updateFloatRequest,\r\n  [Types.UPDATE_FLOAT_REQUEST_SUCCESS]: updateFloatRequestSuccess,\r\n  [Types.UPDATE_FLOAT_REQUEST_FAILURE]: updateFloatRequestFailure,\r\n\r\n  [Types.DELETE_FLOAT_REQUEST]: deleteRequest,\r\n  [Types.DELETE_FLOAT_REQUEST_SUCCESS]: deleteRequestSuccess,\r\n  [Types.DELETE_FLOAT_REQUEST_FAILURE]: deleteRequestFailure,\r\n  \r\n  [Types.RESET_FLOAT_REQUEST]: resetFloatRequest\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_PETTY_CASH_REQUESTS\r\n  FETCH_PETTY_CASH_REQUESTS_SUCCESS\r\n  FETCH_PETTY_CASH_REQUESTS_FAILURE\r\n\r\n  FETCH_MY_PETTY_CASH_REQUESTS\r\n  FETCH_MY_PETTY_CASH_REQUESTS_SUCCESS\r\n  FETCH_MY_PETTY_CASH_REQUESTS_FAILURE\r\n\r\n  GET_PETTY_CASH_REQUEST\r\n  GET_PETTY_CASH_REQUEST_SUCCESS\r\n  GET_PETTY_CASH_REQUEST_FAILURE\r\n\r\n  CREATE_PETTY_CASH_REQUEST\r\n  CREATE_PETTY_CASH_REQUEST_SUCCESS\r\n  CREATE_PETTY_CASH_REQUEST_FAILURE\r\n\r\n  UPDATE_PETTY_CASH_REQUEST\r\n  UPDATE_PETTY_CASH_REQUEST_SUCCESS\r\n  UPDATE_PETTY_CASH_REQUEST_FAILURE\r\n\r\n  DELETE_PETTY_CASH_REQUEST\r\n  DELETE_PETTY_CASH_REQUEST_SUCCESS\r\n  DELETE_PETTY_CASH_REQUEST_FAILURE\r\n\r\n  RESET_PETTY_CASH_REQUEST\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  petty_cash_requests: [],\r\n  petty_cash_request: null,\r\n  my_petty_cash_requests: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchMyPettyCashRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const fetchMyPettyCashRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, my_petty_cash_requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchMyPettyCashRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//fetch\r\nexport const fetchPettyCashRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchPettyCashRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, my_petty_cash_requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchPettyCashRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//get\r\nexport const getPettyCashRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getPettyCashRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, petty_cash_request: action.responseData, loading: false};\r\n};\r\n\r\nexport const getPettyCashRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createPettyCashRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createPettyCashRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createPettyCashRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updatePettyCashRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updatePettyCashRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { \r\n    ...state,\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updatePettyCashRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deletePettyCashRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false };\r\n};\r\n\r\nexport const deletePettyCashRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    requests: state.requests.filter(item=> item.id !== departmentId),\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const deletePettyCashRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetPettyCashRequest = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    PettyCash_requests: [],\r\n    my_petty_cash_requests: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_PETTY_CASH_REQUESTS]: fetchPettyCashRequests,\r\n  [Types.FETCH_PETTY_CASH_REQUESTS_SUCCESS]: fetchPettyCashRequestsSuccess,\r\n  [Types.FETCH_PETTY_CASH_REQUESTS_FAILURE]: fetchPettyCashRequestsFailure,\r\n\r\n  [Types.FETCH_MY_PETTY_CASH_REQUESTS]: fetchMyPettyCashRequests,\r\n  [Types.FETCH_MY_PETTY_CASH_REQUESTS_SUCCESS]: fetchMyPettyCashRequestsSuccess,\r\n  [Types.FETCH_MY_PETTY_CASH_REQUESTS_FAILURE]: fetchMyPettyCashRequestsFailure,\r\n\r\n  [Types.CREATE_PETTY_CASH_REQUEST]: createPettyCashRequest,\r\n  [Types.CREATE_PETTY_CASH_REQUEST_SUCCESS]: createPettyCashRequestSuccess,\r\n  [Types.CREATE_PETTY_CASH_REQUEST_FAILURE]: createPettyCashRequestFailure,\r\n\r\n  [Types.UPDATE_PETTY_CASH_REQUEST]: updatePettyCashRequest,\r\n  [Types.UPDATE_PETTY_CASH_REQUEST_SUCCESS]: updatePettyCashRequestSuccess,\r\n  [Types.UPDATE_PETTY_CASH_REQUEST_FAILURE]: updatePettyCashRequestFailure,\r\n\r\n  [Types.DELETE_PETTY_CASH_REQUEST]: deletePettyCashRequest,\r\n  [Types.DELETE_PETTY_CASH_REQUEST_SUCCESS]: deletePettyCashRequestSuccess,\r\n  [Types.DELETE_PETTY_CASH_REQUEST_FAILURE]: deletePettyCashRequestFailure,\r\n  \r\n  [Types.RESET_PETTY_CASH_REQUEST]: resetPettyCashRequest\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth/reducers'\r\nimport departmentReducer from './department/reducers'\r\nimport supplierReducer from './supplier/reducers'\r\nimport requestReducer from './request/reducers'\r\nimport employeeReducer from './employee/reducers'\r\nimport QuotationReducer from './quotation/reducers'\r\nimport requestCategoryReducer from './request-category/reducers'\r\nimport FloatReducer from \"./float/reducers\"\r\nimport pettyCashReducer from \"./petty-cash/reducers\"\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  department: departmentReducer,\r\n  supplier: supplierReducer,\r\n  request: requestReducer,\r\n  employee: employeeReducer,\r\n  quotation: QuotationReducer,\r\n  requestCategory: requestCategoryReducer,\r\n  petty_cash: pettyCashReducer,\r\n  float: FloatReducer,\r\n})","import { call, put, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/auth/actions'\r\nimport { history } from '../../../util/browser-history'\r\n\r\nimport {\r\n  signIn\r\n} from '../../api/auth'\r\nimport { clearLocalState, storeLocalState } from '../../app-storage'\r\nimport openNotification from '../../../util/notification'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\n\r\n\r\nexport function* login(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const { email, password } = action.payload\r\n    const response = yield call(signIn, { email, password })\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      storeLocalState(AUTH_TOKEN_KEY, responseData.token)\r\n      storeLocalState(AUTH_USER_KEY, { ...responseData.employee, role: responseData.employee.role[0] })\r\n      yield put(Creators.loginSuccess(responseData))\r\n      history.push(\"/app\")\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.loginFailue(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response?.data && error.response?.data?.error) || 'Invalid credentials'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.loginFailure(message))\r\n  }\r\n}\r\n\r\nexport function* logout(action) {\r\n  yield put(Creators.logout(null))\r\n  clearLocalState(AUTH_USER_KEY)\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  history.push(\"/auth/login\") //ada\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLeading(Types.LOGIN, login)\r\n}\r\n\r\nexport function* watchLogout() {\r\n  yield takeLeading(Types.LOGOUT, logout)\r\n}","import apiRequest from \"../apiRequest\";\r\nimport { DEPARTMENTS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getDepartments(query) {\r\n  return apiRequest({\r\n    method: 'GET',\r\n    url: `${DEPARTMENTS_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}\r\n\r\nexport function saveDepartment(data) {\r\n  console.log('data api', data)\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${DEPARTMENTS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateDepartment(deptId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/department/actions'\r\n\r\nimport {\r\n  getDepartments,\r\n  deleteDepartment as deleteDepartmentApi,\r\n  updateDepartment as updateDepartmentApi,\r\n  saveDepartment,\r\n  getDepartment as getDepartmentApi\r\n} from '../../api/department'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchDepartments(action) {\r\n  try {\r\n    const response = yield call(getDepartments, {})\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchDepartmentsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchDepartmentsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchDepartmentsFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getDepartment(action) {\r\n  try {\r\n    const response = yield call(getDepartmentApi, action.departmentId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createDepartment(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(saveDepartment, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      yield put(Creators.createDepartmentSuccess(responseData))\r\n      openNotification('success', 'CREATE DEPARTMENT', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId, payload } = action\r\n  try {\r\n    const response = yield call(updateDepartmentApi, departmentId, payload)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      openNotification('success', 'Update Department', response.message)\r\n      yield put(Creators.updateDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId } = action\r\n  try {\r\n    const response = yield call(deleteDepartmentApi, departmentId)\r\n    if(response.status === 'SUCCESS') {\r\n      openNotification('success', 'Delete Department', response.message)\r\n      yield put(Creators.deleteDepartmentSuccess(departmentId))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchDepartments(action) {\r\n  yield takeLatest(Types.FETCH_DEPARTMENTS, fetchDepartments)\r\n}\r\n\r\nexport function* watchCreateDepartment(action) {\r\n  yield takeLatest(Types.CREATE_DEPARTMENT, createDepartment)\r\n}\r\n\r\nexport function* watchUpdateDepartment(action) {\r\n  yield takeLatest(Types.UPDATE_DEPARTMENT, updateDepartment)\r\n}\r\n\r\nexport function* watchDeleteDepartment(action) {\r\n  yield takeLatest(Types.DELETE_DEPARTMENT, deleteDepartment)\r\n}\r\n\r\nexport function* watchGetDepartment(action) {\r\n  yield takeLatest(Types.GET_DEPARTMENT, getDepartment)\r\n}","import { serializeQueryParams } from \"../../../util/common-helper\";\r\nimport apiRequest from \"../apiRequest\";\r\nimport { SUPPLIERS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getSuppliers(query) {\r\n  console.log('fetch supplie API')\r\n  const queryStr = serializeQueryParams(query)\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}${queryStr}`\r\n  })\r\n}\r\n\r\nexport function getSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}\r\n\r\nexport function saveSupplier(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${SUPPLIERS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateSupplier(supplierId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}","import { call, put, takeLatest, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/supplier/actions'\r\n\r\nimport {\r\n  getSuppliers,\r\n  deleteSupplier as deleteSupplierApi,\r\n  updateSupplier as updateSupplierApi,\r\n  saveSupplier\r\n} from '../../api/supplier'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchSuppliers(action) {\r\n  const { query } = action\r\n  try {\r\n    const response = yield call(getSuppliers, query)\r\n    console.log('supplier data', response)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchSuppliersSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchSuppliersFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchSuppliersFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createSupplier(action) {\r\n  console.log('payload', action)\r\n  try {\r\n    const response = yield call(saveSupplier, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      openNotification('success', 'CREATE SUPPLIER', response.message)\r\n      yield put(Creators.fetchSuppliers({}))\r\n      yield put(Creators.createSupplierSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateSupplier(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateSupplierApi, action.supplierId, action.payload)\r\n    if(response.status === 'SUCCESS') {\r\n      openNotification('success', 'update supplier', response.message)\r\n      yield put(Creators.updateSupplierSuccess({id: action.supplierId, ...action.payload}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteSupplier(action) {\r\n  const  {supplierId} = action\r\n  console.log('---------->saga supplier id', supplierId)\r\n  try {\r\n    const response = yield call(deleteSupplierApi, supplierId)\r\n    if(response.status === 'OK') {\r\n      console.log('about to call supplier delete success')\r\n      yield put(Creators.deleteSupplierSuccess(supplierId))\r\n      openNotification('success', 'Delete Supplier', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchSuppliers(action) {\r\n  yield takeLatest(Types.FETCH_SUPPLIERS, fetchSuppliers)\r\n}\r\n\r\nexport function* watchCreateSupplier(action) {\r\n  yield takeLeading(Types.CREATE_SUPPLIER, createSupplier)\r\n}\r\n\r\nexport function* watchUpdateSupplier(action) {\r\n  yield takeLatest(Types.UPDATE_SUPPLIER, updateSupplier)\r\n}\r\n\r\nexport function* watchDeleteSupplier(action) {\r\n  yield takeLatest(Types.DELETE_SUPPLIER, deleteSupplier)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/employee/actions'\r\n\r\nimport {\r\n  getUsers as fetchEmployeesApi,\r\n  deleteUser as deleteEmployeeApi,\r\n  updateUser as updateEmployeeApi,\r\n  saveUser as saveEmployeeApi,\r\n  getUser as getEmployeeApi\r\n} from '../../api/employee'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchEmployees(action) {\r\n  try {\r\n    const response = yield call(fetchEmployeesApi, {})\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchEmployeesSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchEmployeesFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchEmployeesFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getEmployee(action) {\r\n  try {\r\n    const response = yield call(getEmployeeApi, action.EmployeeId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createEmployee(action) {\r\n  try {\r\n    const response = yield call(saveEmployeeApi, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      console.log('data', responseData)\r\n      openNotification('success', 'CREATE Employee', response.message)\r\n      yield put(Creators.createEmployeeSuccess(responseData))\r\n      yield put(Creators.fetchEmployees())\r\n    } else {\r\n      openNotification('error', 'Create Employee', response.message)\r\n      yield put(Creators.createEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to create Employees'\r\n    openNotification('error', 'Create Employee', message)\r\n    yield put(Creators.createEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateEmployeeApi, action.employeeId, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      console.log('employee data', responseData)\r\n      yield put(Creators.updateEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(deleteEmployeeApi, action.employeeId)\r\n    if(response.status === 'OK') {\r\n      openNotification('success', 'delete employee', response.message)\r\n      yield put(Creators.deleteEmployeeSuccess({employeeId: action.employeeId}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchEmployees(action) {\r\n  yield takeLatest(Types.FETCH_EMPLOYEES, fetchEmployees)\r\n}\r\n\r\nexport function* watchCreateEmployee(action) {\r\n  yield takeLatest(Types.CREATE_EMPLOYEE, createEmployee)\r\n}\r\n\r\nexport function* watchUpdateEmployee(action) {\r\n  yield takeLatest(Types.UPDATE_EMPLOYEE, updateEmployee)\r\n}\r\n\r\nexport function* watchDeleteEmployee(action) {\r\n  yield takeLatest(Types.DELETE_EMPLOYEE, deleteEmployee)\r\n}\r\n\r\nexport function* watchGetEmployee(action) {\r\n  yield takeLatest(Types.GET_EMPLOYEE, getEmployee)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request/actions'\r\n\r\nimport {\r\n  fetchRequests as fetchRequestsApi,\r\n  updateRequest as updateRequestApi,\r\n  saveRequest as createRequestApi,\r\n} from '../../api/item-request'\r\nimport openNotification from '../../../util/notification'\r\nimport { clearLocalState } from '../../app-storage'\r\n\r\n\r\nexport function* fetchRequests(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(fetchRequestsApi, action.query)\r\n    console.log(\"Request Response\", response)\r\n    if([\"OK\", \"SUCCESS\", \"FOUND\"].includes(response.status)) {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchRequestsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response.message || \"Failed to fetch Requests\")\r\n      yield put(Creators.fetchRequestsFailure(response.message || \"Failed to fetch requests!\"))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequest(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestSuccess(responseData))\r\n      clearLocalState(\"NEW-REQUEST\")\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const errorTxt = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', errorTxt)\r\n    yield put(Creators.createRequestFailure(errorTxt))\r\n  }\r\n}\r\n\r\nexport function* updateRequest(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateRequestApi, action.payload)\r\n    if([\"OK\", \"SUCCESS\"].includes(response.status)) {\r\n      const responseData = response?.data\r\n      console.log('API RESPONSE DAYA', responseData)\r\n      openNotification('success', 'Update Request', response.message)\r\n      yield put(Creators.updateRequestSuccess(responseData || {}))\r\n    } else {\r\n      openNotification('error', 'Update Request', response.message)\r\n      yield put(Creators.updateRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Update Request', message)\r\n    yield put(Creators.updateRequestFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequest(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\nexport function* watchFetchRequests(action) {\r\n  yield takeLatest(Types.FETCH_REQUESTS, fetchRequests)\r\n}\r\n\r\nexport function* watchCreateRequest(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST, createRequest)\r\n}\r\n\r\nexport function* watchUpdateRequest(action) {\r\n  yield takeLatest(Types.UPDATE_REQUEST, updateRequest)\r\n}\r\n","import service from '../apiRequest'\r\nimport { ALL_QUOTATIONS, QUOTATIONS_WITHOUT_DOCUMENT, QUOTATIONS_WITHOUT_DOCUMENT_TEST } from '../../../util/quotation-types'\r\n\r\n\r\nconst path = \"/quotations\"\r\nexport function assignRequestDocument(payload){\r\n  return service({\r\n    url: `${path}/${payload.quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function assignRequestDocumentToSupplier(payload){\r\n  return service({\r\n    url: `/suppliers/${payload.supplierId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function getAllQuotationsWithoutDocuments(query) {\r\n  return service({\r\n    url: `${path}/withoutDocument`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getAllQuotationsWithoutDocumentsTest(query) {\r\n  return service({\r\n    url: `${path}/supplierRequest`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getQuotations(query) {\r\n  return service({\r\n    url:  `${path}/all`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\nexport function getAllQuotations(query) {\r\n  console.log('query api', query)\r\n  const { requestType } = query\r\n  switch(requestType) {\r\n    case ALL_QUOTATIONS:\r\n      return getQuotations()\r\n    case QUOTATIONS_WITHOUT_DOCUMENT:\r\n      return getAllQuotationsWithoutDocuments()\r\n    case QUOTATIONS_WITHOUT_DOCUMENT_TEST:\r\n      return getAllQuotationsWithoutDocumentsTest()\r\n    default:\r\n      return getQuotations()\r\n  }\r\n}\r\n\r\nexport function updateQuotation(quotationId, payload) {\r\n  console.log('payload', payload)\r\n  return service({\r\n    url: `${path}/${quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'PUT',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function createQuotation({ file, userId, supplierId }) {\r\n  let fd = new FormData()\r\n  fd.append(\"file\", file)\r\n  return service({\r\n    url: `/quotations/suppliers/${supplierId}?employeeId=${userId}`,\r\n    method: 'POST',\r\n    data: fd\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/quotation/actions'\r\n\r\nimport {\r\n  getAllQuotations as getAllQuotationsApi,\r\n  updateQuotation as updateQuotationApi,\r\n  createQuotation as createQuotationApi,\r\n} from '../../api/quotation'\r\nimport openNotification from '../../../util/notification'\r\nimport { message } from 'antd'\r\n\r\n\r\nexport function* fetchQuotations(action) {\r\n  console.log('fetch quotations saga', action)\r\n  try {\r\n    const response = yield call(getAllQuotationsApi, action.query)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      console.log('response data', responseData)\r\n      yield put(Creators.fetchQuotationsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchQuotationsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchQuotationsFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* updateQuotation(action) {\r\n  console.log('action', action)\r\n  const {quotationId, payload} = action\r\n  try {\r\n    const response = yield call(updateQuotationApi, quotationId, payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.updateQuotationSuccess(responseData))\r\n      openNotification('success', 'Update Quotation', response.message)\r\n      //yield put(Creators.fetchQuotations({}))\r\n    } else {\r\n      openNotification('error', 'Update Quotation', response.message)\r\n      yield put(Creators.updateQuotationFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateQuotationFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createQuotation(action) {\r\n  const { payload } = action\r\n  try {\r\n    const response = yield call(createQuotationApi, payload)\r\n    if(response.status === \"OK\") {\r\n      yield put(Creators.createQuotationSuccess(response.data))\r\n      message.success(\"Quotation Document Addedd Successfully\")\r\n    } else {\r\n      message.error(\"Upload failed!\")\r\n    }\r\n  } catch (error) {\r\n    console.log('err: ', error)\r\n    message.error(\"Failed!\")\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchQuotations(action) {\r\n  yield takeLatest(Types.FETCH_QUOTATIONS, fetchQuotations)\r\n}\r\n\r\nexport function* watchUpdateQuotation(action) {\r\n  yield takeLatest(Types.UPDATE_QUOTATION, updateQuotation)\r\n}\r\n\r\nexport function* watchCreateQuotation(action) {\r\n  yield takeLatest(Types.CREATE_QUOTATION, createQuotation)\r\n}","import service from '../apiRequest'\r\nconst path = 'requestCategory'\r\n\r\nexport function getRequestCategories() {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function saveRequestCategory(data) {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'POST',\r\n    data\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request-category/actions'\r\n\r\nimport {\r\n  getRequestCategories as getRequestCategoriesApi,\r\n  saveRequestCategory as createRequestCategoryApi\r\n} from '../../api/request-category'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchRequestCategories(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(getRequestCategoriesApi, action.query)\r\n    const responseData = response.data\r\n    yield put(Creators.fetchRequestCategoriesSuccess(responseData))\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch categories'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchRequestCategoriesFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequestCategory(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestCategoryApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestCategorySuccess(responseData))\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestCategoryFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to save category'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createRequestCategoryFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequestCategory(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\n\r\n\r\nexport function* watchFetchRequestCategories(action) {\r\n  yield takeLatest(Types.FETCH_REQUEST_CATEGORIES, fetchRequestCategories)\r\n}\r\n\r\nexport function* watchCreateRequestCategory(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST_CATEGORY, createRequestCategory)\r\n}\r\n\r\nexport function* watchResetRequestCategory(action) {\r\n  yield takeLatest(Types.RESET_REQUEST_CATEGORY, resetRequestCategory)\r\n}\r\n","import service from '../apiRequest'\r\nimport { FETCH_REQUEST_TYPES, UPDATE_REQUEST_TYPES } from '../../../util/request-types'\r\nimport { serializeQueryParams } from '../../../util/common-helper'\r\n\r\nexport function saveFloatRequest(payload){\r\n  return service({\r\n    url: `/bulkFloatOrPettyCash/FLOAT`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function fetchMyFloatRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n    url: `/floatsForEmployee${queryStr}`,\r\n    method: 'GET',\r\n  })\r\n}\r\n\r\nexport function fetchAllFloatRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n    url: `/float${queryStr}`,\r\n    method: 'GET',\r\n  })\r\n}\r\n\r\nexport function deleteFloatRequest(id) {\r\n  return service({\r\n    url: `/floats/${id}`,\r\n    method: 'POST'\r\n  })\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/float/actions'\r\n\r\nimport {\r\n  fetchAllFloatRequests as fetchAllFloatRequestsApi,\r\n  fetchMyFloatRequests as fetchMyFloatRequestsApi,\r\n  saveFloatRequest as saveFloatRequestApi\r\n} from '../../api/float'\r\nimport openNotification from '../../../util/notification'\r\nimport { clearLocalState } from '../../app-storage'\r\nimport { RESPONSE_SUCCESS_CODE } from '../../api/apiRequest'\r\n\r\n\r\nexport function* fetchAllFloatRequests(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  const { query } = action\r\n  try {\r\n    const response = yield call(fetchAllFloatRequestsApi, query)\r\n    if(response.status === \"SUCCESS\") {\r\n      yield put(Creators.fetchAllFloatRequestsSuccess(response?.data))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response?.message)\r\n      yield put(Creators.fetchAllFloatRequestsFailure(response?.message))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to fetch float requests'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchAllFloatRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\nexport function* fetchMyFloatRequests(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  const { query } = action\r\n  try {\r\n    const response = yield call(fetchMyFloatRequestsApi, query)\r\n    if(response.status === RESPONSE_SUCCESS_CODE) {\r\n      yield put(Creators.fetchMyFloatRequestsSuccess(response?.data))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response?.message)\r\n      yield put(Creators.fetchMyFloatRequestsFailure(response?.message))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to my float requests'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchMyFloatRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* createFloatRequest(action) {\r\n  const { payload } = action\r\n  try {\r\n    const response = yield call(saveFloatRequestApi, payload)\r\n    if(response.status === RESPONSE_SUCCESS_CODE) {\r\n      openNotification('success', 'Create Float', response?.message)\r\n      yield put(Creators.createFloatRequestSuccess(response?.data))\r\n    } else {\r\n      openNotification('error', 'Create Float', response?.message)\r\n      yield put(Creators.createFloatRequestFailure(response?.message))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to my float requests'\r\n    openNotification('error', 'Create Float', errorText)\r\n    yield put(Creators.createFloatRequestFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetFloatRequest(action) {\r\n  yield put(Creators.resetFloatequest())\r\n}\r\n\r\n//watchers\r\n\r\nexport function* watchFetchFloatRequests(action) {\r\n  yield takeLatest(Types.FETCH_FLOAT_REQUESTS, fetchAllFloatRequests)\r\n}\r\n\r\nexport function* watchFetchMyFloatRequests(action) {\r\n  yield takeLatest(Types.FETCH_MY_FLOAT_REQUESTS, fetchMyFloatRequests)\r\n}\r\n\r\nexport function* watchCreateFloatRequest(action) {\r\n  yield takeLatest(Types.CREATE_FLOAT_REQUEST, createFloatRequest)\r\n}\r\n","import service from '../apiRequest'\r\nimport { serializeQueryParams } from '../../../util/common-helper'\r\n\r\nexport function savePettyCashRequest(payload){\r\n  return service({\r\n    url: `/bulkFloatOrPettyCash/PETTY_CASH`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function fetchMyPettyCashRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n    url: `/pettyCashForEmployee${queryStr}`,\r\n    method: 'GET',\r\n  })\r\n}\r\n\r\nexport function fetchAllPettyCashRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n    url: `/pettyCash${queryStr}`,\r\n    method: 'GET',\r\n  })\r\n}\r\n\r\nexport function deletePettyCashRequest(id) {\r\n  return service({\r\n    url: `/floats/${id}`,\r\n    method: 'DELETE',\r\n  })\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/petty-cash/actions'\r\n\r\nimport {\r\n  savePettyCashRequest as savePettyCashRequestApi,\r\n  fetchMyPettyCashRequests as fetchMyPettyCashRequestsApi,\r\n  fetchAllPettyCashRequests as fetchAllPettyCashRequestsApi,\r\n} from '../../api/petty-cash'\r\nimport openNotification from '../../../util/notification'\r\nimport { clearLocalState } from '../../app-storage'\r\nimport { RESPONSE_SUCCESS_CODE } from '../../api/apiRequest'\r\n\r\n\r\nexport function* fetchPettyCashRequests(action) {\r\n  try {\r\n    const response = yield call(fetchAllPettyCashRequestsApi, action.query)\r\n    console.log(\"Request Response\", response)\r\n    if([\"OK\", \"SUCCESS\", \"FOUND\"].includes(response.status)) {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchPettyCashRequestsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response.message || \"Failed to fetch Requests\")\r\n      yield put(Creators.fetchPettyCashRequestsFailure(response.message || \"Failed to fetch requests!\"))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchPettyCashRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* fetchMyPettyCashRequests(action) {\r\n  try {\r\n    const response = yield call(fetchMyPettyCashRequestsApi, action.query)\r\n    if(response.status === RESPONSE_SUCCESS_CODE) {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchMyPettyCashRequestsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response.message || \"Failed to fetch Requests\")\r\n      yield put(Creators.fetchMyPettyCashRequestsFailure(response.message || \"Failed to fetch requests!\"))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchMyPettyCashRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* createPettyCashRequest(action) {\r\n  try {\r\n    const response = yield call(savePettyCashRequestApi, action.payload)\r\n    if(response.status === RESPONSE_SUCCESS_CODE) {\r\n      const responseData = response.data\r\n      yield put(Creators.createPettyCashRequestSuccess(responseData))\r\n      clearLocalState(\"NEW-REQUEST\")\r\n      openNotification('success', 'CREATE PETTY CASH', response.message)\r\n    } else {\r\n      openNotification('error', 'CREATE PETTY CASH', response.message)\r\n      yield put(Creators.createPettyCashRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const errorTxt = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', errorTxt)\r\n    yield put(Creators.createPettyCashRequestFailure(errorTxt))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequest(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\nexport function* watchFetchPettyCashRequests(action) {\r\n  yield takeLatest(Types.FETCH_PETTY_CASH_REQUESTS, fetchPettyCashRequests)\r\n}\r\n\r\nexport function* watchFetchMyPettyCashRequests(action) {\r\n  yield takeLatest(Types.FETCH_MY_PETTY_CASH_REQUESTS, fetchPettyCashRequests)\r\n}\r\n\r\nexport function* watchCreatePettyCashRequest(action) {\r\n  yield takeLatest(Types.CREATE_PETTY_CASH_REQUEST, createPettyCashRequest)\r\n}\r\n\r\n","import { all } from \"@redux-saga/core/effects\";\r\n\r\nimport {\r\n  watchLogin,\r\n  watchLogout\r\n} from './auth'\r\n\r\nimport {\r\n\twatchFetchDepartments,\r\n\twatchDeleteDepartment,\r\n\twatchUpdateDepartment,\r\n\twatchCreateDepartment\r\n} from './department'\r\n\r\nimport {\r\n\twatchFetchSuppliers,\r\n\twatchCreateSupplier,\r\n\twatchDeleteSupplier,\r\n\twatchUpdateSupplier\r\n} from './supplier'\r\n\r\nimport {\r\n\twatchFetchEmployees,\r\n\twatchCreateEmployee,\r\n\twatchGetEmployee,\r\n\twatchUpdateEmployee,\r\n\twatchDeleteEmployee,\r\n} from './employee'\r\n\r\nimport {\r\n\twatchCreateRequest,\r\n\twatchFetchRequests,\r\n\twatchUpdateRequest\r\n} from './request'\r\n\r\nimport {\r\n\twatchFetchQuotations,\r\n\twatchUpdateQuotation,\r\n\twatchCreateQuotation\r\n} from './quotation'\r\n\r\nimport {\r\n\twatchFetchRequestCategories,\r\n\twatchCreateRequestCategory,\r\n\twatchResetRequestCategory\r\n} from './request-category'\r\n\r\nimport {\r\n\twatchCreateFloatRequest,\r\n\twatchFetchMyFloatRequests,\r\n\twatchFetchFloatRequests,\r\n} from \"./float\"\r\n\r\nimport {\r\n\twatchCreatePettyCashRequest,\r\n\twatchFetchMyPettyCashRequests\r\n} from \"./petty-cash\"\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\twatchLogin(),\r\n\t\twatchLogout(),\r\n\r\n\t\twatchCreateDepartment(),\r\n\t\twatchFetchDepartments(),\r\n\t\twatchDeleteDepartment(),\r\n\t\twatchUpdateDepartment(),\r\n\r\n\t\twatchFetchSuppliers(),\r\n\t\twatchCreateSupplier(),\r\n\t\twatchUpdateSupplier(),\r\n\t\twatchDeleteSupplier(),\r\n\t\t\r\n\t\twatchFetchEmployees(),\r\n\t\twatchGetEmployee(),\r\n\t\twatchCreateEmployee(),\r\n\t\twatchUpdateEmployee(),\r\n\t\twatchDeleteEmployee(),\r\n\t\t\r\n\t\twatchFetchRequests(),\r\n\t\twatchCreateRequest(),\r\n\t\twatchUpdateRequest(),\r\n\r\n\t\twatchFetchQuotations(),\r\n\t\twatchUpdateQuotation(),\r\n\t\twatchCreateQuotation(),\r\n\r\n\t\twatchFetchRequestCategories(),\r\n\t\twatchCreateRequestCategory(),\r\n\t\twatchResetRequestCategory(),\r\n\r\n\t\twatchFetchMyFloatRequests(),\r\n\t\twatchFetchFloatRequests(),\r\n\t\twatchCreateFloatRequest(),\r\n\r\n\t\twatchCreatePettyCashRequest(),\r\n\t\twatchFetchMyPettyCashRequests(),\r\n\r\n\t]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from './services/redux/root-reducer';\r\nimport rootSaga from './services/sagas';\r\n\r\n// logger middleware \r\nconst logger = createLogger();\r\n\r\nfunction isDev() {\r\n  return process.env.NODE_ENV === 'development';\r\n}\r\n// saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n//only apply logger middleware on development mode \r\nconst middlewares = [sagaMiddleware, isDev() && logger].filter(Boolean);\r\n\r\n// mount it on the Store\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(...middlewares)\r\n)\r\n// console.log(process.env);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport { HashRouter as Router } from \"react-router-dom\"\nimport { history } from \"./util/browser-history\"\n\nReactDOM.render(\n    <Provider store={store}>\n      <Router history={history} basename={process.env.PUBLIC_URL}>\n      {/* <Router history={history}> */}\n        <App />\n      </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const storeLocalState = (field, data) => {\r\n  try {\r\n    if (typeof data === \"object\") {\r\n      localStorage.setItem(field, JSON.stringify(data));\r\n    } else {\r\n      localStorage.setItem(field, data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error storing in local storage \", err);\r\n  }\r\n};\r\n\r\nexport const getLocalStateAsStringOrObject = (field, field_is_object = false) => {\r\n  try {\r\n    const data = localStorage.getItem(field);\r\n    if (field_is_object) {\r\n      return data;\r\n    } else {\r\n      return JSON.parse(data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error fetching from local storage \", err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalState = (field) => {\r\n  try {\r\n    return localStorage.getItem(field);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalStateObject = (field) => {\r\n  try {\r\n    return localStorage.getItem(field) && JSON.parse(localStorage.getItem(field));\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const clearLocalState = (field) => {\r\n  try {\r\n    localStorage.removeItem(field);\r\n  } catch (err) {\r\n    console.log(\"Error clearing in local storage \", err);\r\n  }\r\n};\r\n","import { createActions} from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchSuppliers: [\"query\"],\r\n    fetchSuppliersSuccess: [\"responseData\"],\r\n    fetchSuppliersFailure: [\"error\"],\r\n\r\n    createSupplier: [\"payload\"],\r\n    createSupplierSuccess: [\"responsedata\"],\r\n    createSupplierFailure: [\"error\"],\r\n\r\n    updateSupplier: [\"supplierId\", \"payload\"],\r\n    updateSupplierSuccess: [\"responseData\"],\r\n    updateSupplierFailure: [\"error\"],\r\n\r\n    deleteSupplier: [\"supplierId\"],\r\n    deleteSupplierSuccess: [\"supplierId\"],\r\n    deleteSupplierFailure: [\"error\"],\r\n\r\n    getSupplier: [\"supplierId\"],\r\n    getSupplierSuccess: [\"supplierId\"],\r\n    getSupplierFailure: [\"error\"],\r\n\r\n    resetSuppliers: null\r\n  }\r\n)","export const AUTH_TOKEN_KEY = 'AUTH-TOKEN'\r\nexport const AUTH_USER_KEY = 'AUTH-USER'","export const LOGIN_ROUTE = \"/auth/login\"\r\nexport const HOME_ROUTE = \"/app\"\r\nexport const DASHBOARD_ROUTE = \"/app/dashboard\"\r\nexport const DEPARTMENTS_ROUTE = \"/app/departments\"\r\nexport const SUPPLIERS_ROUTE = \"/app/suppliers\"\r\nexport const UNAUTHORIZED_ROUTE = \"/app/un-authorized\"\r\nexport const EMPLOYEE_ROUTE = \"/app/employees\"\r\nexport const MY_REQUESTS_ROUTE = \"/app/my-requests\"\r\nexport const REQUEST_ROUTE = \"/app/requests\"\r\nexport const QUOTATION_ROUTE = \"/app/quotations\"\r\nexport const LOCAL_PURCHASE_ORDER_ROUTE=\"/app/local-purchase-orders\"\r\nexport const PAYMENT_ROUTE=\"/app/payments\"\r\nexport const PROCUREMENT_ROUTE=\"/app/procurement\"\r\nexport const LOCAL_PURCHASE_ORDERS=\"/app/local-purchase-orders\"","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequests: [\"query\"],\r\n    fetchRequestsSuccess: [\"responseData\"],\r\n    fetchRequestsFailure: [\"error\"],\r\n\r\n    getRequest: [\"requestId\"],\r\n    getRequestSuccess: [\"responseData\"],\r\n    getRequestFailure: [\"error\"],\r\n\r\n    createRequest: [\"payload\"],\r\n    createRequestSuccess: [\"responsedata\"],\r\n    createRequestFailure: [\"error\"],\r\n\r\n    updateRequest: [\"payload\"],\r\n    updateRequestSuccess: [\"requestId\", \"responseData\"],\r\n    updateRequestFailure: [\"error\"],\r\n\r\n    deleteRequest: [\"requestId\", \"payload\"],\r\n    deleteRequestSuccess: [\"responseData\"],\r\n    deleteRequestFailure: [\"error\"],\r\n\r\n    resetRequest: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchFloatRequests: [\"query\"],\r\n    fetchFloatRequestsSuccess: [\"responseData\"],\r\n    fetchFloatRequestsFailure: [\"error\"],\r\n\r\n    fetchMyFloatRequests: [\"query\"],\r\n    fetchMyFloatRequestsSuccess: [\"responseData\"],\r\n    fetchMyFloatRequestsFailure: [\"error\"],\r\n\r\n    getFloatRequest: [\"requestId\"],\r\n    getFloatRequestSuccess: [\"responseData\"],\r\n    getFloatRequestFailure: [\"error\"],\r\n\r\n    createFloatRequest: [\"payload\"],\r\n    createFloatRequestSuccess: [\"responseData\"],\r\n    createFloatRequestFailure: [\"error\"],\r\n\r\n    updateFloatRequest: [\"payload\"],\r\n    updateFloatRequestSuccess: [\"id\", \"responseData\"],\r\n    updateFloatRequestFailure: [\"error\"],\r\n\r\n    deleteFloatRequest: [\"requestId\", \"payload\"],\r\n    deleteFloatRequestSuccess: [\"responseData\"],\r\n    deleteFloatRequestFailure: [\"error\"],\r\n\r\n    resetFloatRequest: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchPettyCashRequests: [\"query\"],\r\n    fetchPettyCashRequestsSuccess: [\"responseData\"],\r\n    fetchPettyCashRequestsFailure: [\"error\"],\r\n\r\n    fetchMyPettyCashRequests: [\"query\"],\r\n    fetchMyFloatRequestsSuccess: [\"responseData\"],\r\n    fetchMyFloatRequestsFailure: [\"error\"],\r\n\r\n    getPettyCashRequest: [\"requestId\"],\r\n    getPettyCashRequestSuccess: [\"responseData\"],\r\n    getPettyCashRequestFailure: [\"error\"],\r\n\r\n    createPettyCashRequest: [\"payload\"],\r\n    createPettyCashRequestSuccess: [\"responseData\"],\r\n    createPettyCashRequestFailure: [\"error\"],\r\n\r\n    updatePettyCashRequest: [\"payload\"],\r\n    updatePettyCashRequestSuccess: [\"id\", \"responseData\"],\r\n    updatePettyCashRequestFailure: [\"error\"],\r\n\r\n    deletePettyCashRequest: [\"requestId\", \"payload\"],\r\n    deletePettyCashRequestSuccess: [\"responseData\"],\r\n    deletePettyCashRequestFailure: [\"error\"],\r\n\r\n    resetPettyCashRequest: null\r\n  }\r\n)","export const FETCH_REQUEST_TYPES = {\r\n  MY_REQUESTS: \"MY-REQUESTS\",\r\n  HOD_PENDING_REQUEST: \"HOD-PENDING-REQUESTS\",\r\n  ENDORSED_REQUESTS: \"ENDORSED_REQUESTS\",\r\n  PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS: \"PROCUREMENT-REQUEST\",\r\n  REQUESTS_BY_SUPPLIER: \"REQUEST-BY-SUPPLIER\",\r\n  DOCUMENTED_REQUESTS_BY_SUPPLIER: \"DOCUMENTED-REQUEST-BY-SUPPLIER\"\r\n}\r\n\r\nexport const UPDATE_REQUEST_TYPES = {\r\n  ENDORSE: \"ENDORSE\",\r\n  CANCEL: \"CANCEL\",\r\n  ASSIGN_SUPPLIERS: \"ASSIGN-SUPPLIERS\",\r\n  UPDATE_UNIT_PRICE: \"UPDATE-UNIT-PRICE\",\r\n  APPROVE: \"APPROVE\"\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { getLocalState } from '../../services/app-storage'\r\nimport { AUTH_TOKEN_KEY } from '../../services/app-storage/key-values'\r\nimport { LOGIN_ROUTE, UNAUTHORIZED_ROUTE } from '../../util/routes'\r\n\r\n\r\n\r\nconst AuthenticatedRoute = ({ component: Component, roles, authUser, accessToken, ...rest  })=> {\r\n  return(\r\n    <Route \r\n      {...rest}\r\n      render = {props => {\r\n        const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n        if(!(authUser && accessToken)) {\r\n          return <Redirect to={LOGIN_ROUTE} />\r\n        }\r\n\r\n        if(roles && roles.indexOf(authUser.role) === -1) {\r\n          return <Redirect to={UNAUTHORIZED_ROUTE} />\r\n        }\r\n        return <Component {...props} {...rest} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  authUser: store.auth.user,\r\n  accessToken: store.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(AuthenticatedRoute)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchQuotations: [\"query\"],\r\n    fetchQuotationsSuccess: [\"responseData\"],\r\n    fetchQuotationsFailure: [\"error\"],\r\n\r\n    updateQuotation: [\"quotationId\",\"payload\"],\r\n    updateQuotationSuccess: [\"quotationId\", \"responseData\"],\r\n    updateQuotationFailure: [\"error\"],\r\n\r\n    createQuotation: [\"payload\"],\r\n    createQuotationSuccess: [\"responseData\"],\r\n    createQuotationFailure: [\"error\"],\r\n\r\n    resetQuotation: null\r\n  }\r\n)","import * as dateFormatter from 'dateformat'\r\n\r\nexport function prettifyDateTime(date) {\r\n  if(!date) return 'N/A'\r\n  return dateFormatter.default(date, 'mmm dd yyyy HH:MM')\r\n}\r\n\r\nexport function generateHexColorString() {\r\n  const randomColor = `#${Math.floor(Math.random()*16777215).toString(16)}`\r\n  return randomColor\r\n}\r\n\r\nexport function serializeQueryParams( obj ) {\r\n  return '?' + Object.keys(obj).reduce(function(a, k){\r\n    if(obj[k]) {\r\n      a.push(k + '=' + encodeURIComponent(obj[k]));\r\n    }\r\n    return a;\r\n  }, []).join('&');\r\n}\r\n\r\nexport function downloadFile(data, fileName, fileType) {\r\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) { // IE variant\r\n    window.navigator.msSaveOrOpenBlob(new Blob([data], {type: fileType}),\r\n        fileName);\r\n  } else {\r\n    console.log('====>NOT MS')\r\n      const url = window.URL.createObjectURL(new Blob([data], {type: fileType}));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', fileName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n  }\r\n}","import { createHashHistory } from 'history'\r\n\r\n\r\nexport const history = createHashHistory()","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequestCategories: [\"query\"],\r\n    fetchRequestCategoriesSuccess: [\"responseData\"],\r\n    fetchRequestCategoriesFailure: [\"error\"],\r\n\r\n    createRequestCategory: [\"payload\"],\r\n    createRequestCategorySuccess: [\"responsedata\"],\r\n    createRequestCategoryFailure: [\"error\"],\r\n\r\n    resetRequestCategory: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    login: [\"payload\"],\r\n    loginSuccess: [\"responseData\"],\r\n    loginFailure: [\"error\"],\r\n\r\n    logout: null,\r\n\r\n    resetAuth: null\r\n  }\r\n)","import apiRequest from \"../apiRequest\";\r\nimport { EMPLOYEE_ENDPOINT } from \"../urls\";\r\n\r\nexport function getUsers() {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getUser(userId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\nexport function saveUser(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `/auth/admin/signup`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateUser(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteUser(userId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\n\r\nexport function selfChangePassword(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}/changePassword`,\r\n    data\r\n  })\r\n}","import { clearLocalState } from \"../../app-storage\";\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from \"../../app-storage/key-values\";\r\nimport apiRequest from \"../apiRequest\";\r\nimport { history } from \"../../../util/browser-history\";\r\n\r\n\r\nexport function signIn(payload){\r\n  return apiRequest({\r\n    url: `/login/`,\r\n    method: 'POST',\r\n    data: payload,\r\n  })\r\n}\r\n\r\nexport function signOut() {\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  clearLocalState(AUTH_USER_KEY)\r\n  //history.push(LOGIN_ROUTE)\r\n  history.push(\"/login\")\r\n\r\n}\r\n\r\nexport function userHasAnyRole(role, roles) {\r\n  if(!roles) return true\r\n  return roles.indexOf(role) !== -1\r\n}\r\n","import { notification} from 'antd'\r\nconst openNotification = (type, message, description) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  })\r\n}\r\n\r\nexport default openNotification","import axios from \"axios\";\r\nimport { BASE_URL, AUTH_BASE_URL } from \"./urls\";\r\nimport { getLocalState } from \"../app-storage\";\r\nimport { AUTH_TOKEN_KEY } from \"../app-storage/key-values\";\r\nimport * as authenticationService from './auth'\r\nimport { history } from \"../../util/browser-history\";\r\n\r\nexport const RESPONSE_SUCCESS_CODE = \"SUCCESS\"\r\n\r\nconst apiConfig = {\r\n  timeout: 30000,\r\n  baseURL: BASE_URL,\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  // },\r\n  // paramsSerializer: (params) => qs.stringify(params, { indices: false }),\r\n}\r\n\r\nconst request = axios.create(apiConfig)\r\n\r\nrequest.interceptors.request.use((config) => {\r\n  if(config.url.indexOf(\"signUp\") !== -1 || config.url.indexOf(\"login\") !== -1) {\r\n    config.baseURL = AUTH_BASE_URL\r\n  }\r\n  const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n  if(accessToken) {\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`\r\n  }\r\n  console.log('API CONFIG: ', config)\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\nrequest.interceptors.response.use((response) => {\r\n  const { status, statusText } = response\r\n  if(status === 200) {\r\n    if(response.config.url.indexOf(\"download\") !== -1) {\r\n      return Promise.resolve(response)\r\n    }\r\n    return Promise.resolve(response.data)\r\n  } else if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  }else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(statusText)\r\n}, (error) => {\r\n  const { status } = error?.response?.data || {}\r\n  if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  } else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default request","import service from '../apiRequest'\r\nimport { FETCH_REQUEST_TYPES, UPDATE_REQUEST_TYPES } from '../../../util/request-types'\r\nimport { serializeQueryParams } from '../../../util/common-helper'\r\n\r\n\r\nexport function saveRequest(payload){\r\n  return service({\r\n    url: `/multipleRequestItems`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\n\r\nexport function getUserItemRequests(userId) {\r\n  return service({\r\n      url: `/requestItemsForEmployee`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllItemRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n      url: `/requestItems/${queryStr}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllDepartmentItemRequests(departmentId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/departments/${departmentId}/employees/${employeeId}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function endorseItemRequest(requestId, employeeId){\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/endorse`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function endorseBulkItemRequest(authUserId, data) {\r\n  return service({\r\n      url: `/requestItems/bulkEndorse/employees/${authUserId}`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function approveBulkRequests(data) {\r\n  return service({\r\n      url: `/requestItems/bulkApproval`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function cancelBulkRequest(payload) {\r\n  return service({\r\n      url: `/requestItems/bulkCancel`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestItems(employeeId) {\r\n  return service({\r\n      url: `/requestItems/endorsedItems`,\r\n      method: 'get',\r\n    })\r\n}\r\n\r\nexport function procurementActOnRequest(requestId, employeeId, payload) {\r\n  return service({\r\n      url: `/procurement/${employeeId}/requestItem/${requestId}`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getGeneralManagerRequests(employeeId) {\r\n  return service({\r\n      url: `/requestItems/employees/${employeeId}/generalManager`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function approveRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/approve`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function cancelRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/cancel`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function addSuppliersToRequest(data) {\r\n  return service({\r\n      url: `/procurement/assignSuppliers/requestItems`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getEndorsedItemsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function procurementUpdateMultiReuqestSupplier(data) {\r\n  return service({\r\n      url: `/procurement/requestItems/multipleInfo`,\r\n      method: 'PUT',\r\n      data\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function getEndorsedItemsWithSupplier(supplierId) {\r\n  return service({\r\n    url: `/procurement/endorsedItemsWithSupplierId/${supplierId}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\nexport function getAllEndorsedRequestsByDepartment() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getApprovedRequests() {\r\n  return service({\r\n      url: `/requestItems/approvedItems`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getRequestsBySupplier() {\r\n  return service({\r\n    url: `/requestItems/`\r\n  })\r\n}\r\n\r\nexport function updateRequest(data) {\r\n  const { updateType, userId, payload } = data\r\n  switch (updateType) {\r\n    case UPDATE_REQUEST_TYPES.ENDORSE:\r\n      return endorseBulkItemRequest(userId, payload)\r\n    case UPDATE_REQUEST_TYPES.CANCEL:\r\n      return cancelBulkRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return addSuppliersToRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.UPDATE_UNIT_PRICE:\r\n      return service({url: `/requestItems/updateRequestItems`, method: 'PUT', data: data.payload})\r\n    case UPDATE_REQUEST_TYPES.APPROVE:\r\n      return service({url: `/requestItems/bulkApproval`, method: 'PUT', data: payload})\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function fetchRequests(query) {\r\n  const { requestType, userId } = query\r\n  console.log('In fetch All requests')\r\n  switch (requestType) {\r\n    case FETCH_REQUEST_TYPES.MY_REQUESTS:\r\n      return getUserItemRequests(query.userId)\r\n    case FETCH_REQUEST_TYPES.HOD_PENDING_REQUEST:\r\n      return getAllDepartmentItemRequests(query.departmentId, query.userId)\r\n    case FETCH_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return getEndorsedRequestItems(userId)\r\n    case FETCH_REQUEST_TYPES.DOCUMENTED_REQUESTS_BY_SUPPLIER:\r\n      return getEndorsedItemsWithSupplier(query.supplierId)\r\n    case FETCH_REQUEST_TYPES.ENDORSED_REQUESTS:\r\n      return getEndorsedRequestItems(query.userId)\r\n    default: {\r\n      console.log('In default api call')\r\n      return getAllItemRequests(query);\r\n    }\r\n      \r\n  }\r\n}\r\n\r\n\r\n","export const ALL_QUOTATIONS = \"ALL\"\r\nexport const QUOTATIONS_WITHOUT_DOCUMENT = \"WITHOUT-DOCUMENT\"\r\nexport const QUOTATIONS_WITHOUT_DOCUMENT_TEST = \"WITHOUT-DOCUMENT-TEST\""],"sourceRoot":""}
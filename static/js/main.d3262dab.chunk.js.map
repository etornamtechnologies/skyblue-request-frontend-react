{"version":3,"sources":["presentation/Spinner/index.js","services/redux/employee/actions.js","services/redux/department/actions.js","services/api/urls.js","App.js","reportWebVitals.js","services/redux/auth/actionTypes.js","services/redux/auth/reducers.js","services/redux/department/actionTypes.js","services/redux/department/reducers.js","services/redux/supplier/actionTypes.js","services/redux/supplier/reducers.js","services/redux/request/actionTypes.js","services/redux/request/reducers.js","services/redux/employee/actionTypes.js","services/redux/employee/reducers.js","services/redux/quotation/actionTypes.js","services/redux/quotation/reducers.js","services/redux/request-category/actionTypes.js","services/redux/request-category/reducers.js","services/redux/root-reducer.js","services/sagas/auth/index.js","services/api/department/index.js","services/sagas/department/index.js","services/api/supplier/index.js","services/sagas/supplier/index.js","services/sagas/employee/index.js","services/sagas/request/index.js","services/api/quotation/index.js","services/sagas/quotation/index.js","services/api/request-category/index.js","services/sagas/request-category/index.js","services/sagas/index.js","store.js","index.js","services/redux/supplier/actions.js","services/app-storage/index.js","services/app-storage/key-values.js","util/routes.js","services/redux/request/actions.js","util/request-types.js","services/redux/quotation/actions.js","presentation/AuthenticatedRoute/index.js","services/redux/request-category/actions.js","util/browser-history.js","services/redux/auth/actions.js","services/api/employee/index.js","services/api/auth/index.js","util/common-helper.js","util/notification.js","services/api/apiRequest.js","services/api/item-request/index.js","util/quotation-types.js"],"names":["Spinner","antIcon","color","indicator","type","style","fontSize","spin","createActions","fetchEmployees","fetchEmployeesSuccess","fetchEmployeesFailure","getEmployee","getEmployeeSuccess","getEmployeeFailure","createEmployee","createEmployeeSuccess","createEmployeeFailure","updateEmployee","updateEmployeeSuccess","updateEmployeeFailure","deleteEmployee","deleteEmployeeSuccess","deleteEmployeeFailure","resetEmployee","Types","Creators","fetchDepartments","fetchDepartmentsSuccess","fetchDepartmentsFailure","getDepartment","getDepartmentSuccess","getDepartmentFailure","createDepartment","createDepartmentSuccess","createDepartmentFailure","updateDepartment","updateDepartmentSuccess","updateDepartmentFailure","deleteDepartment","deleteDepartmentSuccess","deleteDepartmentFailure","resetDepartment","BASE_URL","process","DEPARTMENTS_ENDPOINT","SUPPLIERS_ENDPOINT","EMPLOYEE_ENDPOINT","Login","React","lazy","Home","Department","Supplier","Employee","MyRequest","Request","NotAuthorized","Procurement","Dashboard","Store","Settings","Account","Report","Audit","connect","store","authUser","auth","user","props","history","Suspense","fallback","path","component","AuthenticatedRoute","DASHBOARD_ROUTE","PROCUREMENT_ROUTE","REQUEST_ROUTE","MY_REQUESTS_ROUTE","DEPARTMENTS_ROUTE","SUPPLIERS_ROUTE","EMPLOYEE_ROUTE","exact","HOME_ROUTE","LOGIN_ROUTE","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTypes","LOCAL_STORE_USER","getLocalStateObject","AUTH_USER_KEY","LOCAL_STORE_TOKEN","getLocalState","AUTH_TOKEN_KEY","console","log","INITIAL_STATE","id","undefined","firstName","lastName","fullName","email","phoneNo","department","name","description","enabled","role","token","loading","HANDLERS","LOGIN","state","error","LOGIN_SUCCESS","action","responseData","employee","LOGIN_FAILURE","LOGOUT","RESET_AUTH","createReducer","errors","departments","submitting","submitSuccess","FETCH_DEPARTMENTS","FETCH_DEPARTMENTS_SUCCESS","FETCH_DEPARTMENTS_FAILURE","CREATE_DEPARTMENT","CREATE_DEPARTMENT_SUCCESS","concat","CREATE_DEPARTMENT_FAILURE","submitSucces","UPDATE_DEPARTMENT","UPDATE_DEPARTMENT_SUCCESS","map","item","UPDATE_DEPARTMENT_FAILURE","DELETE_DEPARTMENT","DELETE_DEPARTMENT_SUCCESS","departmentId","filter","DELETE_DEPARTMENT_FAILURE","RESET_DEPARTMENT","suppliers","supplier","loaidng","FETCH_SUPPLIERS","FETCH_SUPPLIERS_SUCCESS","FETCH_SUPPLIERS_FAILURE","CREATE_SUPPLIER","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAILURE","UPDATE_SUPPLIER","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAILURE","DELETE_SUPPLIER","DELETE_SUPPLIER_SUCCESS","supplierId","DELETE_SUPPLIER_FAILURE","GET_SUPPLIER","GET_SUPPLIER_SUCCESS","GET_SUPPLIER_FAILURE","RESET_SUPPLIERS","requests","FETCH_REQUESTS","FETCH_REQUESTS_SUCCESS","FETCH_REQUESTS_FAILURE","CREATE_REQUEST","CREATE_REQUEST_SUCCESS","CREATE_REQUEST_FAILURE","UPDATE_REQUEST","UPDATE_REQUEST_SUCCESS","UPDATE_REQUEST_FAILURE","DELETE_REQUEST","DELETE_REQUEST_SUCCESS","DELETE_REQUEST_FAILURE","RESET_REQUEST","employees","FETCH_EMPLOYEES","FETCH_EMPLOYEES_SUCCESS","FETCH_EMPLOYEES_FAILURE","CREATE_EMPLOYEE","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAILURE","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAILURE","DELETE_EMPLOYEE","DELETE_EMPLOYEE_SUCCESS","employeeId","DELETE_EMPLOYEE_FAILURE","RESET_EMPLOYEE","quotations","FETCH_QUOTATIONS","FETCH_QUOTATIONS_SUCCESS","FETCH_QUOTATIONS_FAILURE","UPDATE_QUOTATION","UPDATE_QUOTATION_SUCCESS","quotationId","UPDATE_QUOTATION_FAILURE","CREATE_QUOTATION","CREATE_QUOTATION_SUCCESS","CREATE_QUOTATION_FAILURE","RESET_QUOTATION","requestCategories","FETCH_REQUEST_CATEGORIES","FETCH_REQUEST_CATEGORIES_SUCCESS","FETCH_REQUEST_CATEGORIES_FAILURE","CREATE_REQUEST_CATEGORY","CREATE_REQUEST_CATEGORY_SUCCESS","CREATE_REQUEST_CATEGORY_FAILURE","RESET_REQUEST_CATEGORY","combineReducers","authReducer","departmentReducer","supplierReducer","request","requestReducer","employeeReducer","quotation","QuotationReducer","requestCategory","requestCategoryReducer","login","logout","watchLogin","watchLogout","payload","password","call","signIn","response","status","data","storeLocalState","put","loginSuccess","push","openNotification","message","loginFailue","loginFailure","clearLocalState","takeLeading","getDepartments","query","apiRequest","method","url","saveDepartment","deptId","watchFetchDepartments","watchCreateDepartment","watchUpdateDepartment","watchDeleteDepartment","updateDepartmentApi","deleteDepartmentApi","takeLatest","getSuppliers","queryStr","serializeQueryParams","saveSupplier","updateSupplier","deleteSupplier","fetchSuppliers","createSupplier","watchFetchSuppliers","watchCreateSupplier","watchUpdateSupplier","watchDeleteSupplier","fetchSuppliersSuccess","fetchSuppliersFailure","createSupplierSuccess","createSupplierFailure","updateSupplierApi","updateSupplierSuccess","updateSupplierFailure","deleteSupplierApi","deleteSupplierSuccess","deleteSupplierFailure","watchFetchEmployees","watchCreateEmployee","watchUpdateEmployee","watchDeleteEmployee","watchGetEmployee","fetchEmployeesApi","getEmployeeApi","EmployeeId","saveEmployeeApi","updateEmployeeApi","deleteEmployeeApi","GET_EMPLOYEE","fetchRequests","createRequest","updateRequest","watchFetchRequests","watchCreateRequest","watchUpdateRequest","fetchRequestsApi","includes","fetchRequestsSuccess","fetchRequestsFailure","errorText","createRequestApi","createRequestSuccess","createRequestFailure","errorTxt","updateRequestApi","updateRequestSuccess","updateRequestFailure","getQuotations","service","getAllQuotations","requestType","ALL_QUOTATIONS","QUOTATIONS_WITHOUT_DOCUMENT","QUOTATIONS_WITHOUT_DOCUMENT_TEST","updateQuotation","documentId","createQuotation","file","userId","fd","FormData","append","fetchQuotations","watchFetchQuotations","watchUpdateQuotation","watchCreateQuotation","getAllQuotationsApi","fetchQuotationsSuccess","fetchQuotationsFailure","updateQuotationApi","updateQuotationSuccess","updateQuotationFailure","createQuotationApi","createQuotationSuccess","success","getRequestCategories","saveRequestCategory","fetchRequestCategories","createRequestCategory","resetRequestCategory","watchFetchRequestCategories","watchCreateRequestCategory","watchResetRequestCategory","getRequestCategoriesApi","fetchRequestCategoriesSuccess","fetchRequestCategoriesFailure","createRequestCategoryApi","createRequestCategorySuccess","createRequestCategoryFailure","resetRequest","rootSaga","all","createLogger","sagaMiddleware","createSagaMiddleware","middlewares","Boolean","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById","getSupplier","getSupplierSuccess","getSupplierFailure","resetSuppliers","field","localStorage","setItem","JSON","stringify","err","getItem","parse","removeItem","UNAUTHORIZED_ROUTE","getRequest","getRequestSuccess","getRequestFailure","deleteRequest","deleteRequestSuccess","deleteRequestFailure","FETCH_REQUEST_TYPES","MY_REQUESTS","HOD_PENDING_REQUEST","ENDORSED_REQUESTS","PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS","REQUESTS_BY_SUPPLIER","DOCUMENTED_REQUESTS_BY_SUPPLIER","UPDATE_REQUEST_TYPES","ENDORSE","CANCEL","ASSIGN_SUPPLIERS","UPDATE_UNIT_PRICE","APPROVE","createQuotationFailure","resetQuotation","accessToken","Component","roles","rest","indexOf","createHashHistory","resetAuth","getUsers","getUser","saveUser","updateUser","deleteUser","selfChangePassword","signOut","window","location","href","userHasAnyRole","prettifyDateTime","date","dateFormatter","generateHexColorString","Math","floor","random","toString","obj","Object","keys","reduce","a","k","encodeURIComponent","join","downloadFile","fileName","fileType","navigator","msSaveOrOpenBlob","Blob","URL","createObjectURL","link","createElement","setAttribute","body","appendChild","click","notification","apiConfig","timeout","baseURL","axios","create","interceptors","use","config","headers","Promise","reject","statusText","resolve","authenticationService","saveRequest","getUserItemRequests","getEndorsedRequestItems","updateType","authUserId","endorseBulkItemRequest","cancelBulkRequest","addSuppliersToRequest","getAllItemRequests"],"mappings":"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","file":"static/js/main.d3262dab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Spinner = ({ color = \"#30994b\", indicator }) => {\r\n  let antIcon;\r\n  if (indicator) antIcon = indicator;\r\n  else antIcon = <LoadingOutlined type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\n  return <Spin indicator={antIcon} style={{ color }} />;\r\n};\r\n\r\nexport default Spinner;\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: \"5%\",\r\n      }}\r\n    >\r\n      <Spin\r\n        size=\"large\"\r\n        tip=\"Please wait...\"\r\n        style={{ color: \"#30994b\" }}\r\n        data-testid=\"global-loading-spinner\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchEmployees: [\"query\"],\r\n    fetchEmployeesSuccess: [\"responseData\"],\r\n    fetchEmployeesFailure: [\"error\"],\r\n\r\n    getEmployee: [\"employeeId\"],\r\n    getEmployeeSuccess: [\"responseData\"],\r\n    getEmployeeFailure: [\"error\"],\r\n\r\n    createEmployee: [\"payload\"],\r\n    createEmployeeSuccess: [\"responseData\"],\r\n    createEmployeeFailure: [\"error\"],\r\n\r\n    updateEmployee: [\"employeeId\", \"payload\"],\r\n    updateEmployeeSuccess: [\"employeeId\", \"responseData\"],\r\n    updateEmployeeFailure: [\"error\"],\r\n\r\n    deleteEmployee: [\"employeeId\"],\r\n    deleteEmployeeSuccess: [\"responseData\"],\r\n    deleteEmployeeFailure: [\"error\"],\r\n\r\n    resetEmployee: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchDepartments: [\"query\"],\r\n    fetchDepartmentsSuccess: [\"responseData\"],\r\n    fetchDepartmentsFailure: [\"error\"],\r\n\r\n    getDepartment: [\"departmentId\"],\r\n    getDepartmentSuccess: [\"responseData\"],\r\n    getDepartmentFailure: [\"error\"],\r\n\r\n    createDepartment: [\"payload\"],\r\n    createDepartmentSuccess: [\"responseData\"],\r\n    createDepartmentFailure: [\"error\"],\r\n\r\n    updateDepartment: [\"departmentId\", \"payload\"],\r\n    updateDepartmentSuccess: [\"responseData\"],\r\n    updateDepartmentFailure: [\"error\"],\r\n\r\n    deleteDepartment: [\"departmentId\"],\r\n    deleteDepartmentSuccess: [\"departmentId\"],\r\n    deleteDepartmentFailure: [\"error\"],\r\n\r\n    resetDepartment: null\r\n  }\r\n)","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n//auth endpoints\r\nexport const AUTH_ENDPOINT = \"/auth/login\"\r\n\r\n//depatrtmens endpoint\r\nexport const DEPARTMENTS_ENDPOINT = \"/departments/\"\r\n\r\n//suppliers endpoint\r\nexport const SUPPLIERS_ENDPOINT = \"/suppliers/\"\r\n\r\n//my requests endpoint\r\nexport const MY_REQUESTS_ENDPOINT = \"/my-requests/\"\r\n\r\n//quotation endpoint\r\nexport const QUOTATION_ENDPOINT = \"/quotations/\"\r\n\r\n//users endpoint\r\nexport const EMPLOYEE_ENDPOINT = \"/employees/\"","import \"antd/dist/antd.less\";\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport {history} from './util/browser-history'\nimport React from \"react\";\nimport Spinner from \"./presentation/Spinner\";\nimport { DEPARTMENTS_ROUTE, HOME_ROUTE, LOGIN_ROUTE, SUPPLIERS_ROUTE, EMPLOYEE_ROUTE, MY_REQUESTS_ROUTE, REQUEST_ROUTE, PROCUREMENT_ROUTE, DASHBOARD_ROUTE } from \"./util/routes\";\nimport './styles/app.less'\nimport AuthenticatedRoute from './presentation/AuthenticatedRoute'\nimport { connect } from 'react-redux'\nconst Login = React.lazy(()=> import('./containers/Auth'))\nconst Home = React.lazy(()=> import('./containers/Home'))\nconst Department = React.lazy(()=> import('./containers/Department'))\nconst Supplier = React.lazy(() => import('./containers/Suppliers'))\nconst Employee = React.lazy(() => import('./containers/Employee'))\nconst MyRequest = React.lazy(()=> import('./containers/MyRequest'))\nconst Request = React.lazy(()=> import('./containers/Requests'))\nconst NotAuthorized = React.lazy(()=> import('./containers/NotAuthorized'))\nconst Procurement = React.lazy(() => import('./containers/Procurement'))\nconst Dashboard = React.lazy(() => import('./containers/Dashboard'))\nconst Store = React.lazy(() => import('./containers/Store'))\nconst Settings = React.lazy(()=> import('./containers/Settings'))\nconst Account = React.lazy(() => import('./containers/Account'))\nconst Report = React.lazy(()=> import('./containers/Report'))\nconst Audit = React.lazy(() => import('./containers/Audit'))\n\nfunction App(props) {\n  return (\n    <>\n      <Router history={history}>\n        <React.Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route path=\"/app/account\" component={Account} {...props} />\n            <Route path=\"/app/stores\" component={Store} {...props} />\n            <AuthenticatedRoute path={`${DASHBOARD_ROUTE}`} component={Dashboard} />\n            <Route path={PROCUREMENT_ROUTE} component={Procurement} {...props} />\n            <Route path={REQUEST_ROUTE} component={Request} {...props} />\n            <AuthenticatedRoute path={MY_REQUESTS_ROUTE} component={MyRequest} />\n            <AuthenticatedRoute path={DEPARTMENTS_ROUTE} component={Department} /> \\\n            <AuthenticatedRoute path={SUPPLIERS_ROUTE} component={Supplier} />\n            <AuthenticatedRoute path={EMPLOYEE_ROUTE}  component={Employee} />\n            <AuthenticatedRoute exact path={HOME_ROUTE}  component={Home} />\n            <AuthenticatedRoute path=\"/app/settings\" component={Settings} {...props} />\n            <AuthenticatedRoute path=\"/app/reports\" component={Report} {...props} />\n            <Route path=\"/app/audit\" component={Audit} {...props} />\n            <Route path={LOGIN_ROUTE} component={Login} />\n            <Route path=\"/not-authorized\" component={NotAuthorized} />\n            <AuthenticatedRoute path=\"/\"><Redirect to={HOME_ROUTE}/></AuthenticatedRoute>\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  authUser: store.auth.user\n})\n\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  LOGIN\r\n  LOGIN_SUCCESS\r\n  LOGIN_FAILURE\r\n  LOGOUT\r\n  \r\n\r\n  RESET_AUTH\r\n\r\n`,\r\n  {}\r\n);","import { getLocalState, getLocalStateObject } from '../../app-storage'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\nimport Types from './actionTypes'\r\n\r\nimport { createReducer } from 'reduxsauce'\r\n\r\nconst LOCAL_STORE_USER = getLocalStateObject(AUTH_USER_KEY)\r\nconst LOCAL_STORE_TOKEN = getLocalState(AUTH_TOKEN_KEY)\r\n\r\nconsole.log('YES TOKEN', LOCAL_STORE_TOKEN, 'TOKEN KEY', AUTH_TOKEN_KEY)\r\n\r\nconsole.log('INIT USER', LOCAL_STORE_USER)\r\n\r\nconst INITIAL_USER = {\r\n  id: undefined,\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  fullName: \"\",\r\n  email: \"\",\r\n  phoneNo: \"\",\r\n  department: {id: undefined, name: \"\", description: \"\"},\r\n  enabled: false,\r\n  role: \"\",\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  user: LOCAL_STORE_USER ? LOCAL_STORE_USER : INITIAL_USER,\r\n  token: LOCAL_STORE_TOKEN ? LOCAL_STORE_TOKEN : null,\r\n  loading: false\r\n}\r\n\r\n\r\n\r\nexport const login = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    error: null,\r\n    loading: true,\r\n    token: null\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (state = INITIAL_STATE, action) => {\r\n  const { employee, token } = action.responseData\r\n  console.log('user', employee)\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    user: { ...employee, role: employee.role[0] },\r\n    token: token\r\n  };\r\n};\r\n\r\nexport const loginFailure = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    error: action.error,\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const logout = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const resetAuth = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const HANDLERS = {\r\n  [Types.LOGIN]: login,\r\n  [Types.LOGIN_SUCCESS]: loginSuccess,\r\n  [Types.LOGIN_FAILURE]: loginFailure,\r\n\r\n  [Types.LOGOUT]: logout,\r\n  \r\n\r\n  [Types.RESET_AUTH]: resetAuth,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_DEPARTMENTS\r\n  FETCH_DEPARTMENTS_SUCCESS\r\n  FETCH_DEPARTMENTS_FAILURE\r\n\r\n  GET_DEPARTMENT\r\n  GET_DEPARTMENT_SUCCESS\r\n  GET_DEPARTMENT_FAILURE\r\n\r\n  CREATE_DEPARTMENT\r\n  CREATE_DEPARTMENT_SUCCESS\r\n  CREATE_DEPARTMENT_FAILURE\r\n\r\n  UPDATE_DEPARTMENT\r\n  UPDATE_DEPARTMENT_SUCCESS\r\n  UPDATE_DEPARTMENT_FAILURE\r\n\r\n  DELETE_DEPARTMENT\r\n  DELETE_DEPARTMENT_SUCCESS\r\n  DELETE_DEPARTMENT_FAILURE\r\n\r\n  RESET_DEPARTMENT\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  departments: [],\r\n  loading: false,\r\n  submitting: false,\r\n  department: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchDepartments = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false, submitSuccess: false };\r\n};\r\n\r\nexport const fetchDepartmentsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, departments: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchDepartmentsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('REDUCER', action)\r\n  return { ...state, departments: state.departments.concat([action.responseData]), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSucces: false};\r\n};\r\n\r\n//edit\r\nexport const updateDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('lets update dept reducer', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const deleteDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.filter(item=> item.id !== departmentId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\nexport const resetDepartment = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    departments: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSucces: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_DEPARTMENTS]: fetchDepartments,\r\n  [Types.FETCH_DEPARTMENTS_SUCCESS]: fetchDepartmentsSuccess,\r\n  [Types.FETCH_DEPARTMENTS_FAILURE]: fetchDepartmentsFailure,\r\n\r\n  [Types.CREATE_DEPARTMENT]: createDepartment,\r\n  [Types.CREATE_DEPARTMENT_SUCCESS]: createDepartmentSuccess,\r\n  [Types.CREATE_DEPARTMENT_FAILURE]: createDepartmentFailure,\r\n\r\n  [Types.UPDATE_DEPARTMENT]: updateDepartment,\r\n  [Types.UPDATE_DEPARTMENT_SUCCESS]: updateDepartmentSuccess,\r\n  [Types.UPDATE_DEPARTMENT_FAILURE]: updateDepartmentFailure,\r\n\r\n  [Types.DELETE_DEPARTMENT]: deleteDepartment,\r\n  [Types.DELETE_DEPARTMENT_SUCCESS]: deleteDepartmentSuccess,\r\n  [Types.DELETE_DEPARTMENT_FAILURE]: deleteDepartmentFailure,\r\n  \r\n  [Types.RESET_DEPARTMENT]: resetDepartment\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_SUPPLIERS\r\n  FETCH_SUPPLIERS_SUCCESS\r\n  FETCH_SUPPLIERS_FAILURE\r\n\r\n  CREATE_SUPPLIER\r\n  CREATE_SUPPLIER_SUCCESS\r\n  CREATE_SUPPLIER_FAILURE\r\n\r\n  UPDATE_SUPPLIER\r\n  UPDATE_SUPPLIER_SUCCESS\r\n  UPDATE_SUPPLIER_FAILURE\r\n\r\n  GET_SUPPLIER\r\n  GET_SUPPLIER_SUCCESS\r\n  GET_SUPPLIER_FAILURE\r\n\r\n  DELETE_SUPPLIER\r\n  DELETE_SUPPLIER_SUCCESS\r\n  DELETE_SUPPLIER_FAILURE\r\n\r\n  RESET_SUPPLIERS\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  suppliers: [],\r\n  supplier: {},\r\n  loaidng: false,\r\n  submitting: false,\r\n  submitSuccess: false\r\n};\r\n\r\n\r\n//fetch\r\nexport const fetchSuppliers = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const fetchSuppliersSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, suppliers: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchSuppliersFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, suppliers: []};\r\n};\r\n\r\n//get\r\nexport const getSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const getSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, supplier: action.responseData, loading: false};\r\n};\r\n\r\nexport const getSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const createSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('ADD SUPPLIER REDUCER', action)\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: true};\r\n};\r\n\r\nexport const createSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//edit\r\nexport const updateSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const updateSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('action update success', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    submitSuccess: true,\r\n    suppliers: state.suppliers.map(supplier=> {\r\n      if(supplier.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return supplier;\r\n      }\r\n    }), \r\n    submitting: false, error: action.error\r\n  };\r\n};\r\n\r\nexport const updateSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//delete\r\nexport const deleteSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const deleteSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('------>id', state.suppliers.filter(item => item.id !== action.supplierId))\r\n  return { \r\n    ...state, \r\n    suppliers: state.suppliers.filter(item => item.id !== action.supplierId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\nexport const resetSuppliers = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    suppliers: [],\r\n    error: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_SUPPLIERS]: fetchSuppliers,\r\n  [Types.FETCH_SUPPLIERS_SUCCESS]: fetchSuppliersSuccess,\r\n  [Types.FETCH_SUPPLIERS_FAILURE]: fetchSuppliersFailure,\r\n\r\n  [Types.CREATE_SUPPLIER]: createSupplier,\r\n  [Types.CREATE_SUPPLIER_SUCCESS]: createSupplierSuccess,\r\n  [Types.CREATE_SUPPLIER_FAILURE]: createSupplierFailure,\r\n\r\n  [Types.UPDATE_SUPPLIER]: updateSupplier,\r\n  [Types.UPDATE_SUPPLIER_SUCCESS]: updateSupplierSuccess,\r\n  [Types.UPDATE_SUPPLIER_FAILURE]: updateSupplierFailure,\r\n\r\n  [Types.DELETE_SUPPLIER]: deleteSupplier,\r\n  [Types.DELETE_SUPPLIER_SUCCESS]: deleteSupplierSuccess,\r\n  [Types.DELETE_SUPPLIER_FAILURE]: deleteSupplierFailure,\r\n\r\n  [Types.GET_SUPPLIER]: getSupplier,\r\n  [Types.GET_SUPPLIER_SUCCESS]: getSupplierSuccess,\r\n  [Types.GET_SUPPLIER_FAILURE]: getSupplierFailure,\r\n\r\n  [Types.RESET_SUPPLIERS]: resetSuppliers,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUESTS\r\n  FETCH_REQUESTS_SUCCESS\r\n  FETCH_REQUESTS_FAILURE\r\n\r\n  GET_REQUEST\r\n  GET_REQUEST_SUCCESS\r\n  GET_REQUEST_FAILURE\r\n\r\n  CREATE_REQUEST\r\n  CREATE_REQUEST_SUCCESS\r\n  CREATE_REQUEST_FAILURE\r\n\r\n  UPDATE_REQUEST\r\n  UPDATE_REQUEST_SUCCESS\r\n  UPDATE_REQUEST_FAILURE\r\n\r\n  DELETE_REQUEST\r\n  DELETE_REQUEST_SUCCESS\r\n  DELETE_REQUEST_FAILURE\r\n\r\n  RESET_REQUEST\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requests: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n  department: {}\r\n};\r\n\r\n//fetch\r\nexport const fetchRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error, requests: []};\r\n};\r\n\r\n//get\r\nexport const getRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { \r\n    ...state,\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false };\r\n};\r\n\r\nexport const deleteRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    requests: state.requests.filter(item=> item.id !== departmentId),\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const deleteRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequest = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requests: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUESTS]: fetchRequests,\r\n  [Types.FETCH_REQUESTS_SUCCESS]: fetchRequestsSuccess,\r\n  [Types.FETCH_REQUESTS_FAILURE]: fetchRequestsFailure,\r\n\r\n  [Types.CREATE_REQUEST]: createRequest,\r\n  [Types.CREATE_REQUEST_SUCCESS]: createRequestSuccess,\r\n  [Types.CREATE_REQUEST_FAILURE]: createRequestFailure,\r\n\r\n  [Types.UPDATE_REQUEST]: updateRequest,\r\n  [Types.UPDATE_REQUEST_SUCCESS]: updateRequestSuccess,\r\n  [Types.UPDATE_REQUEST_FAILURE]: updateRequestFailure,\r\n\r\n  [Types.DELETE_REQUEST]: deleteRequest,\r\n  [Types.DELETE_REQUEST_SUCCESS]: deleteRequestSuccess,\r\n  [Types.DELETE_REQUEST_FAILURE]: deleteRequestFailure,\r\n  \r\n  [Types.RESET_REQUEST]: resetRequest\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_EMPLOYEES\r\n  FETCH_EMPLOYEES_SUCCESS\r\n  FETCH_EMPLOYEES_FAILURE\r\n\r\n  GET_EMPLOYEE\r\n  GET_EMPLOYEE_SUCCESS\r\n  GET_EMPLOYEE_FAILURE\r\n\r\n  CREATE_EMPLOYEE\r\n  CREATE_EMPLOYEE_SUCCESS\r\n  CREATE_EMPLOYEE_FAILURE\r\n\r\n  UPDATE_EMPLOYEE\r\n  UPDATE_EMPLOYEE_SUCCESS\r\n  UPDATE_EMPLOYEE_FAILURE\r\n\r\n  DELETE_EMPLOYEE\r\n  DELETE_EMPLOYEE_SUCCESS\r\n  DELETE_EMPLOYEE_FAILURE\r\n\r\n  RESET_EMPLOYEE\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  employees: [],\r\n  loading: false,\r\n  submitting: false,\r\n  employee: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchEmployees = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchEmployeesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employees: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchEmployeesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employee: action.responseData, loading: false};\r\n};\r\n\r\nexport const getEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('resposeData', action.responseData)\r\n  return { ...state, employees: state.employees.concat(action.responseData), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//edit\r\nexport const updateEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    employees: state.employees.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: true };\r\n};\r\n\r\nexport const deleteEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('delete action', action)\r\n  const { employeeId } = action.responseData\r\n  return { \r\n    ...state, \r\n    employees: state.employees.filter(item=> item.id !== employeeId),\r\n    submitting: false,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const deleteEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, loading: false};\r\n};\r\n\r\n\r\nexport const resetEmployee = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    employees: [],\r\n    employee: {},\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_EMPLOYEES]: fetchEmployees,\r\n  [Types.FETCH_EMPLOYEES_SUCCESS]: fetchEmployeesSuccess,\r\n  [Types.FETCH_EMPLOYEES_FAILURE]: fetchEmployeesFailure,\r\n\r\n  [Types.CREATE_EMPLOYEE]: createEmployee,\r\n  [Types.CREATE_EMPLOYEE_SUCCESS]: createEmployeeSuccess,\r\n  [Types.CREATE_EMPLOYEE_FAILURE]: createEmployeeFailure,\r\n\r\n  [Types.UPDATE_EMPLOYEE]: updateEmployee,\r\n  [Types.UPDATE_EMPLOYEE_SUCCESS]: updateEmployeeSuccess,\r\n  [Types.UPDATE_EMPLOYEE_FAILURE]: updateEmployeeFailure,\r\n\r\n  [Types.DELETE_EMPLOYEE]: deleteEmployee,\r\n  [Types.DELETE_EMPLOYEE_SUCCESS]: deleteEmployeeSuccess,\r\n  [Types.DELETE_EMPLOYEE_FAILURE]: deleteEmployeeFailure,\r\n  \r\n  [Types.RESET_EMPLOYEE]: resetEmployee\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_QUOTATIONS\r\n  FETCH_QUOTATIONS_SUCCESS\r\n  FETCH_QUOTATIONS_FAILURE\r\n\r\n  UPDATE_QUOTATION\r\n  UPDATE_QUOTATION_SUCCESS\r\n  UPDATE_QUOTATION_FAILURE\r\n\r\n  CREATE_QUOTATION\r\n  CREATE_QUOTATION_SUCCESS\r\n  CREATE_QUOTATION_FAILURE\r\n\r\n  RESET_QUOTATION\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  quotations: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchQuotations = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchQuotationsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, quotations: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchQuotationsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateQuotation = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateQuotationSuccess = (state = INITIAL_STATE, action) => {\r\n  const { quotationId, responseData } = action\r\n  return { \r\n    ...state, \r\n    quotations: state.quotations.map(item=> {\r\n      if(item.id === quotationId) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateQuotationFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\nexport const createQuotation = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, submitSuccess: false };\r\n};\r\n\r\nexport const createQuotationSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true };\r\n};\r\n\r\nexport const createQuotationFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: false };\r\n};\r\n\r\nexport const resetQuotation = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    quotations: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_QUOTATIONS]: fetchQuotations,\r\n  [Types.FETCH_QUOTATIONS_SUCCESS]: fetchQuotationsSuccess,\r\n  [Types.FETCH_QUOTATIONS_FAILURE]: fetchQuotationsFailure,\r\n\r\n  [Types.UPDATE_QUOTATION]: updateQuotation,\r\n  [Types.UPDATE_QUOTATION_SUCCESS]: updateQuotationSuccess,\r\n  [Types.UPDATE_QUOTATION_FAILURE]: updateQuotationFailure,\r\n\r\n  [Types.CREATE_QUOTATION]: createQuotation,\r\n  [Types.CREATE_QUOTATION_SUCCESS]: createQuotationSuccess,\r\n  [Types.CREATE_QUOTATION_FAILURE]: createQuotationFailure,\r\n  \r\n  [Types.RESET_QUOTATION]: resetQuotation\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUEST_CATEGORIES\r\n  FETCH_REQUEST_CATEGORIES_SUCCESS\r\n  FETCH_REQUEST_CATEGORIES_FAILURE\r\n\r\n  CREATE_REQUEST_CATEGORY\r\n  CREATE_REQUEST_CATEGORY_SUCCESS\r\n  CREATE_REQUEST_CATEGORY_FAILURE\r\n\r\n  RESET_REQUEST_CATEGORY\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requestCategories: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchRequestCategories = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestCategoriesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requestCategories: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestCategoriesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestCategorySuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestCategoryFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requestCategories: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSuccess: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUEST_CATEGORIES]: fetchRequestCategories,\r\n  [Types.FETCH_REQUEST_CATEGORIES_SUCCESS]: fetchRequestCategoriesSuccess,\r\n  [Types.FETCH_REQUEST_CATEGORIES_FAILURE]: fetchRequestCategoriesFailure,\r\n\r\n  [Types.CREATE_REQUEST_CATEGORY]: createRequestCategory,\r\n  [Types.CREATE_REQUEST_CATEGORY_SUCCESS]: createRequestCategorySuccess,\r\n  [Types.CREATE_REQUEST_CATEGORY_FAILURE]: createRequestCategoryFailure,\r\n  \r\n  [Types.RESET_REQUEST_CATEGORY]: resetRequestCategory\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth/reducers'\r\nimport departmentReducer from './department/reducers'\r\nimport supplierReducer from './supplier/reducers'\r\nimport requestReducer from './request/reducers'\r\nimport employeeReducer from './employee/reducers'\r\nimport QuotationReducer from './quotation/reducers'\r\nimport requestCategoryReducer from './request-category/reducers'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  department: departmentReducer,\r\n  supplier: supplierReducer,\r\n  request: requestReducer,\r\n  employee: employeeReducer,\r\n  quotation: QuotationReducer,\r\n  requestCategory: requestCategoryReducer\r\n})","import { call, put, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/auth/actions'\r\nimport { history } from '../../../util/browser-history'\r\n\r\nimport {\r\n  signIn\r\n} from '../../api/auth'\r\nimport { clearLocalState, storeLocalState } from '../../app-storage'\r\nimport openNotification from '../../../util/notification'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\n\r\n\r\nexport function* login(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const { email, password } = action.payload\r\n    const response = yield call(signIn, { email, password })\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      storeLocalState(AUTH_TOKEN_KEY, responseData.token)\r\n      storeLocalState(AUTH_USER_KEY, { ...responseData.employee, role: responseData.employee.role[0] })\r\n      yield put(Creators.loginSuccess(responseData))\r\n      //window.location.href = \"/app\"\r\n      history.push(\"/app\")\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.loginFailue(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response?.data && error.response?.data?.error) || 'Invalid credentials'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.loginFailure(message))\r\n  }\r\n}\r\n\r\nexport function* logout(action) {\r\n  yield put(Creators.logout(null))\r\n  clearLocalState(AUTH_USER_KEY)\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  //window.location.href = \"/#auth/login\"\r\n  history.push(\"/auth/login\") //ada\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLeading(Types.LOGIN, login)\r\n}\r\n\r\nexport function* watchLogout() {\r\n  yield takeLeading(Types.LOGOUT, logout)\r\n}","import apiRequest from \"../apiRequest\";\r\nimport { DEPARTMENTS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getDepartments(query) {\r\n  return apiRequest({\r\n    method: 'GET',\r\n    url: `${DEPARTMENTS_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}\r\n\r\nexport function saveDepartment(data) {\r\n  console.log('data api', data)\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${DEPARTMENTS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateDepartment(deptId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/department/actions'\r\n\r\nimport {\r\n  getDepartments,\r\n  deleteDepartment as deleteDepartmentApi,\r\n  updateDepartment as updateDepartmentApi,\r\n  saveDepartment,\r\n  getDepartment as getDepartmentApi\r\n} from '../../api/department'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchDepartments(action) {\r\n  try {\r\n    const response = yield call(getDepartments, {})\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchDepartmentsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchDepartmentsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchDepartmentsFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getDepartment(action) {\r\n  try {\r\n    const response = yield call(getDepartmentApi, action.departmentId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createDepartment(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(saveDepartment, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      yield put(Creators.createDepartmentSuccess(responseData))\r\n      openNotification('success', 'CREATE DEPARTMENT', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId, payload } = action\r\n  try {\r\n    const response = yield call(updateDepartmentApi, departmentId, payload)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      openNotification('success', 'Update Department', response.message)\r\n      yield put(Creators.updateDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId } = action\r\n  try {\r\n    const response = yield call(deleteDepartmentApi, departmentId)\r\n    if(response.status === 'SUCCESS') {\r\n      openNotification('success', 'Delete Department', response.message)\r\n      yield put(Creators.deleteDepartmentSuccess(departmentId))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchDepartments(action) {\r\n  yield takeLatest(Types.FETCH_DEPARTMENTS, fetchDepartments)\r\n}\r\n\r\nexport function* watchCreateDepartment(action) {\r\n  yield takeLatest(Types.CREATE_DEPARTMENT, createDepartment)\r\n}\r\n\r\nexport function* watchUpdateDepartment(action) {\r\n  yield takeLatest(Types.UPDATE_DEPARTMENT, updateDepartment)\r\n}\r\n\r\nexport function* watchDeleteDepartment(action) {\r\n  yield takeLatest(Types.DELETE_DEPARTMENT, deleteDepartment)\r\n}\r\n\r\nexport function* watchGetDepartment(action) {\r\n  yield takeLatest(Types.GET_DEPARTMENT, getDepartment)\r\n}","import { serializeQueryParams } from \"../../../util/common-helper\";\r\nimport apiRequest from \"../apiRequest\";\r\nimport { SUPPLIERS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getSuppliers(query) {\r\n  console.log('fetch supplie API')\r\n  const queryStr = serializeQueryParams(query)\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}${queryStr}`\r\n  })\r\n}\r\n\r\nexport function getSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}\r\n\r\nexport function saveSupplier(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${SUPPLIERS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateSupplier(supplierId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}","import { call, put, takeLatest, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/supplier/actions'\r\n\r\nimport {\r\n  getSuppliers,\r\n  deleteSupplier as deleteSupplierApi,\r\n  updateSupplier as updateSupplierApi,\r\n  saveSupplier\r\n} from '../../api/supplier'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchSuppliers(action) {\r\n  const { query } = action\r\n  try {\r\n    const response = yield call(getSuppliers, query)\r\n    console.log('supplier data', response)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchSuppliersSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchSuppliersFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchSuppliersFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createSupplier(action) {\r\n  console.log('payload', action)\r\n  try {\r\n    const response = yield call(saveSupplier, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      openNotification('success', 'CREATE SUPPLIER', response.message)\r\n      yield put(Creators.fetchSuppliers({}))\r\n      yield put(Creators.createSupplierSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateSupplier(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateSupplierApi, action.supplierId, action.payload)\r\n    if(response.status === 'SUCCESS') {\r\n      openNotification('success', 'update supplier', response.message)\r\n      yield put(Creators.updateSupplierSuccess({id: action.supplierId, ...action.payload}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteSupplier(action) {\r\n  const  {supplierId} = action\r\n  console.log('---------->saga supplier id', supplierId)\r\n  try {\r\n    const response = yield call(deleteSupplierApi, supplierId)\r\n    if(response.status === 'OK') {\r\n      console.log('about to call supplier delete success')\r\n      yield put(Creators.deleteSupplierSuccess(supplierId))\r\n      openNotification('success', 'Delete Supplier', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchSuppliers(action) {\r\n  yield takeLatest(Types.FETCH_SUPPLIERS, fetchSuppliers)\r\n}\r\n\r\nexport function* watchCreateSupplier(action) {\r\n  yield takeLeading(Types.CREATE_SUPPLIER, createSupplier)\r\n}\r\n\r\nexport function* watchUpdateSupplier(action) {\r\n  yield takeLatest(Types.UPDATE_SUPPLIER, updateSupplier)\r\n}\r\n\r\nexport function* watchDeleteSupplier(action) {\r\n  yield takeLatest(Types.DELETE_SUPPLIER, deleteSupplier)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/employee/actions'\r\n\r\nimport {\r\n  getUsers as fetchEmployeesApi,\r\n  deleteUser as deleteEmployeeApi,\r\n  updateUser as updateEmployeeApi,\r\n  saveUser as saveEmployeeApi,\r\n  getUser as getEmployeeApi\r\n} from '../../api/employee'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchEmployees(action) {\r\n  try {\r\n    const response = yield call(fetchEmployeesApi, {})\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchEmployeesSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchEmployeesFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchEmployeesFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getEmployee(action) {\r\n  try {\r\n    const response = yield call(getEmployeeApi, action.EmployeeId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createEmployee(action) {\r\n  try {\r\n    const response = yield call(saveEmployeeApi, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      console.log('data', responseData)\r\n      openNotification('success', 'CREATE Employee', response.message)\r\n      yield put(Creators.createEmployeeSuccess(responseData))\r\n      yield put(Creators.fetchEmployees())\r\n    } else {\r\n      openNotification('error', 'Create Employee', response.message)\r\n      yield put(Creators.createEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to create Employees'\r\n    openNotification('error', 'Create Employee', message)\r\n    yield put(Creators.createEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateEmployeeApi, action.employeeId, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      yield put(Creators.updateEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(deleteEmployeeApi, action.employeeId)\r\n    if(response.status === 'OK') {\r\n      openNotification('success', 'delete employee', response.message)\r\n      yield put(Creators.deleteEmployeeSuccess({employeeId: action.employeeId}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchEmployees(action) {\r\n  yield takeLatest(Types.FETCH_EMPLOYEES, fetchEmployees)\r\n}\r\n\r\nexport function* watchCreateEmployee(action) {\r\n  yield takeLatest(Types.CREATE_EMPLOYEE, createEmployee)\r\n}\r\n\r\nexport function* watchUpdateEmployee(action) {\r\n  yield takeLatest(Types.UPDATE_EMPLOYEE, updateEmployee)\r\n}\r\n\r\nexport function* watchDeleteEmployee(action) {\r\n  yield takeLatest(Types.DELETE_EMPLOYEE, deleteEmployee)\r\n}\r\n\r\nexport function* watchGetEmployee(action) {\r\n  yield takeLatest(Types.GET_EMPLOYEE, getEmployee)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request/actions'\r\n\r\nimport {\r\n  fetchRequests as fetchRequestsApi,\r\n  updateRequest as updateRequestApi,\r\n  saveRequest as createRequestApi,\r\n} from '../../api/item-request'\r\nimport openNotification from '../../../util/notification'\r\nimport { clearLocalState } from '../../app-storage'\r\n\r\n\r\nexport function* fetchRequests(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(fetchRequestsApi, action.query)\r\n    console.log(\"Request Response\", response)\r\n    if([\"OK\", \"SUCCESS\", \"FOUND\"].includes(response.status)) {\r\n      const responseData = response?.data || []\r\n      yield put(Creators.fetchRequestsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Fetch Request', response.message || \"Failed to fetch Requests\")\r\n      yield put(Creators.fetchRequestsFailure(response.message || \"Failed to fetch requests!\"))\r\n    }\r\n  } catch (error) {\r\n    const errorText = (error && error?.response?.data && error?.response?.data?.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Fetch Request', errorText)\r\n    yield put(Creators.fetchRequestsFailure(errorText))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequest(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestSuccess(responseData))\r\n      clearLocalState(\"NEW-REQUEST\")\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const errorTxt = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', errorTxt)\r\n    yield put(Creators.createRequestFailure(errorTxt))\r\n  }\r\n}\r\n\r\nexport function* updateRequest(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateRequestApi, action.payload)\r\n    if([\"OK\", \"SUCCESS\"].includes(response.status)) {\r\n      const responseData = response?.data\r\n      console.log('API RESPONSE DAYA', responseData)\r\n      openNotification('success', 'Update Request', response.message)\r\n      yield put(Creators.updateRequestSuccess(responseData || {}))\r\n    } else {\r\n      openNotification('error', 'Update Request', response.message)\r\n      yield put(Creators.updateRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Update Request', message)\r\n    yield put(Creators.updateRequestFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequest(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\nexport function* watchFetchRequests(action) {\r\n  yield takeLatest(Types.FETCH_REQUESTS, fetchRequests)\r\n}\r\n\r\nexport function* watchCreateRequest(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST, createRequest)\r\n}\r\n\r\nexport function* watchUpdateRequest(action) {\r\n  yield takeLatest(Types.UPDATE_REQUEST, updateRequest)\r\n}\r\n","import service from '../apiRequest'\r\nimport { ALL_QUOTATIONS, QUOTATIONS_WITHOUT_DOCUMENT, QUOTATIONS_WITHOUT_DOCUMENT_TEST } from '../../../util/quotation-types'\r\n\r\n\r\nconst path = \"/quotations\"\r\nexport function assignRequestDocument(payload){\r\n  return service({\r\n    url: `${path}/${payload.quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function assignRequestDocumentToSupplier(payload){\r\n  return service({\r\n    url: `/suppliers/${payload.supplierId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function getAllQuotationsWithoutDocuments(query) {\r\n  return service({\r\n    url: `${path}/withoutDocument`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getAllQuotationsWithoutDocumentsTest(query) {\r\n  return service({\r\n    url: `${path}/supplierRequest`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getQuotations(query) {\r\n  return service({\r\n    url:  `${path}/all`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\nexport function getAllQuotations(query) {\r\n  console.log('query api', query)\r\n  const { requestType } = query\r\n  switch(requestType) {\r\n    case ALL_QUOTATIONS:\r\n      return getQuotations()\r\n    case QUOTATIONS_WITHOUT_DOCUMENT:\r\n      return getAllQuotationsWithoutDocuments()\r\n    case QUOTATIONS_WITHOUT_DOCUMENT_TEST:\r\n      return getAllQuotationsWithoutDocumentsTest()\r\n    default:\r\n      return getQuotations()\r\n  }\r\n}\r\n\r\nexport function updateQuotation(quotationId, payload) {\r\n  console.log('payload', payload)\r\n  return service({\r\n    url: `${path}/${quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'PUT',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function createQuotation({ file, userId, supplierId }) {\r\n  let fd = new FormData()\r\n  fd.append(\"file\", file)\r\n  return service({\r\n    url: `/quotations/suppliers/${supplierId}?employeeId=${userId}`,\r\n    method: 'POST',\r\n    data: fd\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/quotation/actions'\r\n\r\nimport {\r\n  getAllQuotations as getAllQuotationsApi,\r\n  updateQuotation as updateQuotationApi,\r\n  createQuotation as createQuotationApi,\r\n} from '../../api/quotation'\r\nimport openNotification from '../../../util/notification'\r\nimport { message } from 'antd'\r\n\r\n\r\nexport function* fetchQuotations(action) {\r\n  console.log('fetch quotations saga', action)\r\n  try {\r\n    const response = yield call(getAllQuotationsApi, action.query)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      console.log('response data', responseData)\r\n      yield put(Creators.fetchQuotationsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchQuotationsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchQuotationsFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* updateQuotation(action) {\r\n  console.log('action', action)\r\n  const {quotationId, payload} = action\r\n  try {\r\n    const response = yield call(updateQuotationApi, quotationId, payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.updateQuotationSuccess(responseData))\r\n      openNotification('success', 'Update Quotation', response.message)\r\n      //yield put(Creators.fetchQuotations({}))\r\n    } else {\r\n      openNotification('error', 'Update Quotation', response.message)\r\n      yield put(Creators.updateQuotationFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateQuotationFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createQuotation(action) {\r\n  const { payload } = action\r\n  try {\r\n    const response = yield call(createQuotationApi, payload)\r\n    if(response.status === \"OK\") {\r\n      yield put(Creators.createQuotationSuccess(response.data))\r\n      message.success(\"Quotation Document Addedd Successfully\")\r\n    } else {\r\n      message.error(\"Upload failed!\")\r\n    }\r\n  } catch (error) {\r\n    console.log('err: ', error)\r\n    message.error(\"Failed!\")\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchQuotations(action) {\r\n  yield takeLatest(Types.FETCH_QUOTATIONS, fetchQuotations)\r\n}\r\n\r\nexport function* watchUpdateQuotation(action) {\r\n  yield takeLatest(Types.UPDATE_QUOTATION, updateQuotation)\r\n}\r\n\r\nexport function* watchCreateQuotation(action) {\r\n  yield takeLatest(Types.CREATE_QUOTATION, createQuotation)\r\n}","import service from '../apiRequest'\r\nconst path = 'requestCategory'\r\n\r\nexport function getRequestCategories() {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function saveRequestCategory(data) {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'POST',\r\n    data\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request-category/actions'\r\n\r\nimport {\r\n  getRequestCategories as getRequestCategoriesApi,\r\n  saveRequestCategory as createRequestCategoryApi\r\n} from '../../api/request-category'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchRequestCategories(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(getRequestCategoriesApi, action.query)\r\n    const responseData = response.data\r\n    yield put(Creators.fetchRequestCategoriesSuccess(responseData))\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch categories'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchRequestCategoriesFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequestCategory(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestCategoryApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestCategorySuccess(responseData))\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestCategoryFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to save category'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createRequestCategoryFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequestCategory(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\n\r\n\r\nexport function* watchFetchRequestCategories(action) {\r\n  yield takeLatest(Types.FETCH_REQUEST_CATEGORIES, fetchRequestCategories)\r\n}\r\n\r\nexport function* watchCreateRequestCategory(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST_CATEGORY, createRequestCategory)\r\n}\r\n\r\nexport function* watchResetRequestCategory(action) {\r\n  yield takeLatest(Types.RESET_REQUEST_CATEGORY, resetRequestCategory)\r\n}\r\n","import { all } from \"@redux-saga/core/effects\";\r\n\r\nimport {\r\n  watchLogin,\r\n  watchLogout\r\n} from './auth'\r\n\r\nimport {\r\n\twatchFetchDepartments,\r\n\twatchDeleteDepartment,\r\n\twatchUpdateDepartment,\r\n\twatchCreateDepartment\r\n} from './department'\r\n\r\nimport {\r\n\twatchFetchSuppliers,\r\n\twatchCreateSupplier,\r\n\twatchDeleteSupplier,\r\n\twatchUpdateSupplier\r\n} from './supplier'\r\n\r\nimport {\r\n\twatchFetchEmployees,\r\n\twatchCreateEmployee,\r\n\twatchGetEmployee,\r\n\twatchUpdateEmployee,\r\n\twatchDeleteEmployee,\r\n} from './employee'\r\n\r\nimport {\r\n\twatchCreateRequest,\r\n\twatchFetchRequests,\r\n\twatchUpdateRequest\r\n} from './request'\r\n\r\nimport {\r\n\twatchFetchQuotations,\r\n\twatchUpdateQuotation,\r\n\twatchCreateQuotation\r\n} from './quotation'\r\n\r\nimport {\r\n\twatchFetchRequestCategories,\r\n\twatchCreateRequestCategory,\r\n\twatchResetRequestCategory\r\n} from './request-category'\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\twatchLogin(),\r\n\t\twatchLogout(),\r\n\r\n\t\twatchCreateDepartment(),\r\n\t\twatchFetchDepartments(),\r\n\t\twatchDeleteDepartment(),\r\n\t\twatchUpdateDepartment(),\r\n\r\n\t\twatchFetchSuppliers(),\r\n\t\twatchCreateSupplier(),\r\n\t\twatchUpdateSupplier(),\r\n\t\twatchDeleteSupplier(),\r\n\t\t\r\n\t\twatchFetchEmployees(),\r\n\t\twatchGetEmployee(),\r\n\t\twatchCreateEmployee(),\r\n\t\twatchUpdateEmployee(),\r\n\t\twatchDeleteEmployee(),\r\n\t\t\r\n\t\twatchFetchRequests(),\r\n\t\twatchCreateRequest(),\r\n\t\twatchUpdateRequest(),\r\n\r\n\t\twatchFetchQuotations(),\r\n\t\twatchUpdateQuotation(),\r\n\t\twatchCreateQuotation(),\r\n\r\n\t\twatchFetchRequestCategories(),\r\n\t\twatchCreateRequestCategory(),\r\n\t\twatchResetRequestCategory()\r\n\r\n\t]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from './services/redux/root-reducer';\r\nimport rootSaga from './services/sagas';\r\n\r\n// logger middleware \r\nconst logger = createLogger();\r\n\r\nfunction isDev() {\r\n  return process.env.NODE_ENV === 'development';\r\n}\r\n// saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n//only apply logger middleware on development mode \r\nconst middlewares = [sagaMiddleware, isDev() && logger].filter(Boolean);\r\n\r\n// mount it on the Store\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(...middlewares)\r\n)\r\n// console.log(process.env);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nconsole.log(\"STATE: \", store)\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createActions} from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchSuppliers: [\"query\"],\r\n    fetchSuppliersSuccess: [\"responseData\"],\r\n    fetchSuppliersFailure: [\"error\"],\r\n\r\n    createSupplier: [\"payload\"],\r\n    createSupplierSuccess: [\"responsedata\"],\r\n    createSupplierFailure: [\"error\"],\r\n\r\n    updateSupplier: [\"supplierId\", \"payload\"],\r\n    updateSupplierSuccess: [\"responseData\"],\r\n    updateSupplierFailure: [\"error\"],\r\n\r\n    deleteSupplier: [\"supplierId\"],\r\n    deleteSupplierSuccess: [\"supplierId\"],\r\n    deleteSupplierFailure: [\"error\"],\r\n\r\n    getSupplier: [\"supplierId\"],\r\n    getSupplierSuccess: [\"supplierId\"],\r\n    getSupplierFailure: [\"error\"],\r\n\r\n    resetSuppliers: null\r\n  }\r\n)","export const storeLocalState = (field, data) => {\r\n  try {\r\n    if (typeof data === \"object\") {\r\n      localStorage.setItem(field, JSON.stringify(data));\r\n    } else {\r\n      localStorage.setItem(field, data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error storing in local storage \", err);\r\n  }\r\n};\r\n\r\nexport const getLocalStateAsStringOrObject = (field, field_is_object = false) => {\r\n  try {\r\n    const data = localStorage.getItem(field);\r\n    if (field_is_object) {\r\n      return data;\r\n    } else {\r\n      return JSON.parse(data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error fetching from local storage \", err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalState = (field) => {\r\n  try {\r\n    return localStorage.getItem(field);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalStateObject = (field) => {\r\n  try {\r\n    return localStorage.getItem(field) && JSON.parse(localStorage.getItem(field));\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const clearLocalState = (field) => {\r\n  try {\r\n    localStorage.removeItem(field);\r\n  } catch (err) {\r\n    console.log(\"Error clearing in local storage \", err);\r\n  }\r\n};\r\n","export const AUTH_TOKEN_KEY = 'AUTH-TOKEN'\r\nexport const AUTH_USER_KEY = 'AUTH-USER'","export const LOGIN_ROUTE = \"/auth/login\"\r\nexport const HOME_ROUTE = \"/app\"\r\nexport const DASHBOARD_ROUTE = \"/app/dashboard\"\r\nexport const DEPARTMENTS_ROUTE = \"/app/departments\"\r\nexport const SUPPLIERS_ROUTE = \"/app/suppliers\"\r\nexport const UNAUTHORIZED_ROUTE = \"/app/un-authorized\"\r\nexport const EMPLOYEE_ROUTE = \"/app/employees\"\r\nexport const MY_REQUESTS_ROUTE = \"/app/my-requests\"\r\nexport const REQUEST_ROUTE = \"/app/requests\"\r\nexport const QUOTATION_ROUTE = \"/app/quotations\"\r\nexport const LOCAL_PURCHASE_ORDER_ROUTE=\"/app/local-purchase-orders\"\r\nexport const PAYMENT_ROUTE=\"/app/payments\"\r\nexport const PROCUREMENT_ROUTE=\"/app/procurement\"\r\nexport const LOCAL_PURCHASE_ORDERS=\"/app/local-purchase-orders\"","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequests: [\"query\"],\r\n    fetchRequestsSuccess: [\"responseData\"],\r\n    fetchRequestsFailure: [\"error\"],\r\n\r\n    getRequest: [\"requestId\"],\r\n    getRequestSuccess: [\"responseData\"],\r\n    getRequestFailure: [\"error\"],\r\n\r\n    createRequest: [\"payload\"],\r\n    createRequestSuccess: [\"responsedata\"],\r\n    createRequestFailure: [\"error\"],\r\n\r\n    updateRequest: [\"payload\"],\r\n    updateRequestSuccess: [\"requestId\", \"responseData\"],\r\n    updateRequestFailure: [\"error\"],\r\n\r\n    deleteRequest: [\"requestId\", \"payload\"],\r\n    deleteRequestSuccess: [\"responseData\"],\r\n    deleteRequestFailure: [\"error\"],\r\n\r\n    resetRequest: null\r\n  }\r\n)","export const FETCH_REQUEST_TYPES = {\r\n  MY_REQUESTS: \"MY-REQUESTS\",\r\n  HOD_PENDING_REQUEST: \"HOD-PENDING-REQUESTS\",\r\n  ENDORSED_REQUESTS: \"ENDORSED_REQUESTS\",\r\n  PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS: \"PROCUREMENT-REQUEST\",\r\n  REQUESTS_BY_SUPPLIER: \"REQUEST-BY-SUPPLIER\",\r\n  DOCUMENTED_REQUESTS_BY_SUPPLIER: \"DOCUMENTED-REQUEST-BY-SUPPLIER\"\r\n}\r\n\r\nexport const UPDATE_REQUEST_TYPES = {\r\n  ENDORSE: \"ENDORSE\",\r\n  CANCEL: \"CANCEL\",\r\n  ASSIGN_SUPPLIERS: \"ASSIGN-SUPPLIERS\",\r\n  UPDATE_UNIT_PRICE: \"UPDATE-UNIT-PRICE\",\r\n  APPROVE: \"APPROVE\"\r\n}","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchQuotations: [\"query\"],\r\n    fetchQuotationsSuccess: [\"responseData\"],\r\n    fetchQuotationsFailure: [\"error\"],\r\n\r\n    updateQuotation: [\"quotationId\",\"payload\"],\r\n    updateQuotationSuccess: [\"quotationId\", \"responseData\"],\r\n    updateQuotationFailure: [\"error\"],\r\n\r\n    createQuotation: [\"payload\"],\r\n    createQuotationSuccess: [\"responseData\"],\r\n    createQuotationFailure: [\"error\"],\r\n\r\n    resetQuotation: null\r\n  }\r\n)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { getLocalState } from '../../services/app-storage'\r\nimport { AUTH_TOKEN_KEY } from '../../services/app-storage/key-values'\r\nimport { LOGIN_ROUTE, UNAUTHORIZED_ROUTE } from '../../util/routes'\r\n\r\n\r\n\r\nconst AuthenticatedRoute = ({ component: Component, roles, authUser, accessToken, ...rest  })=> {\r\n  return(\r\n    <Route \r\n      {...rest}\r\n      render = {props => {\r\n        const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n        if(!(authUser && accessToken)) {\r\n          return <Redirect to={LOGIN_ROUTE} />\r\n        }\r\n\r\n        if(roles && roles.indexOf(authUser.role) === -1) {\r\n          return <Redirect to={UNAUTHORIZED_ROUTE} />\r\n        }\r\n        return <Component {...props} {...rest} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  authUser: store.auth.user,\r\n  accessToken: store.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(AuthenticatedRoute)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequestCategories: [\"query\"],\r\n    fetchRequestCategoriesSuccess: [\"responseData\"],\r\n    fetchRequestCategoriesFailure: [\"error\"],\r\n\r\n    createRequestCategory: [\"payload\"],\r\n    createRequestCategorySuccess: [\"responsedata\"],\r\n    createRequestCategoryFailure: [\"error\"],\r\n\r\n    resetRequestCategory: null\r\n  }\r\n)","import { createHashHistory } from 'history'\r\n\r\n\r\nexport const history = createHashHistory()","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    login: [\"payload\"],\r\n    loginSuccess: [\"responseData\"],\r\n    loginFailure: [\"error\"],\r\n\r\n    logout: null,\r\n\r\n    resetAuth: null\r\n  }\r\n)","import apiRequest from \"../apiRequest\";\r\nimport { EMPLOYEE_ENDPOINT } from \"../urls\";\r\n\r\nexport function getUsers() {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getUser(userId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\nexport function saveUser(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `/auth/admin/signup`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateUser(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteUser(userId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\n\r\nexport function selfChangePassword(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}/changePassword`,\r\n    data\r\n  })\r\n}","import { clearLocalState } from \"../../app-storage\";\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from \"../../app-storage/key-values\";\r\nimport apiRequest from \"../apiRequest\";\r\n\r\n\r\nexport function signIn(payload){\r\n  return apiRequest({\r\n    url: `/auth/login/`,\r\n    method: 'POST',\r\n    data: payload,\r\n  })\r\n}\r\n\r\nexport function signOut() {\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  clearLocalState(AUTH_USER_KEY)\r\n  //history.push(LOGIN_ROUTE)\r\n  window.location.href=\"/#auth/login\"\r\n}\r\n\r\nexport function userHasAnyRole(role, roles) {\r\n  if(!roles) return true\r\n  return roles.indexOf(role) !== -1\r\n}\r\n","import * as dateFormatter from 'dateformat'\r\n\r\nexport function prettifyDateTime(date) {\r\n  return dateFormatter.default(date, 'ddd mmm dd yyyy HH:MM')\r\n}\r\n\r\nexport function generateHexColorString() {\r\n  //return _.times(16, ()=> (Math.random()*0xF<<0).toString(16)).join('')\r\n  const randomColor = `#${Math.floor(Math.random()*16777215).toString(16)}`\r\n  return randomColor\r\n}\r\n\r\nexport function serializeQueryParams( obj ) {\r\n  return '?' + Object.keys(obj).reduce(function(a, k){\r\n    if(obj[k]) {\r\n      a.push(k + '=' + encodeURIComponent(obj[k]));\r\n    }\r\n    return a;\r\n  }, []).join('&');\r\n}\r\n\r\nexport function downloadFile(data, fileName, fileType) {\r\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) { // IE variant\r\n    window.navigator.msSaveOrOpenBlob(new Blob([data], {type: fileType}),\r\n        fileName);\r\n  } else {\r\n    console.log('====>NOT MS')\r\n      const url = window.URL.createObjectURL(new Blob([data], {type: fileType}));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', fileName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n  }\r\n}","import { notification} from 'antd'\r\nconst openNotification = (type, message, description) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  })\r\n}\r\n\r\nexport default openNotification","import axios from \"axios\";\r\nimport { BASE_URL } from \"./urls\";\r\nimport { getLocalState } from \"../app-storage\";\r\nimport { AUTH_TOKEN_KEY } from \"../app-storage/key-values\";\r\nimport * as authenticationService from './auth'\r\nimport { history } from \"../../util/browser-history\";\r\n\r\nconst apiConfig = {\r\n  timeout: 30000,\r\n  baseURL: BASE_URL,\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  // },\r\n  // paramsSerializer: (params) => qs.stringify(params, { indices: false }),\r\n}\r\n\r\nconst request = axios.create(apiConfig)\r\n\r\nrequest.interceptors.request.use((config) => {\r\n  const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n  if(accessToken) {\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`\r\n  }\r\n  console.log('API CONFIG: ', config)\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\nrequest.interceptors.response.use((response) => {\r\n  const { status, statusText } = response\r\n  if(status === 200) {\r\n    if(response.config.url.indexOf(\"download\") !== -1) {\r\n      return Promise.resolve(response)\r\n    }\r\n    return Promise.resolve(response.data)\r\n  } else if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  }else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(statusText)\r\n}, (error) => {\r\n  const { status } = error?.response?.data || {}\r\n  if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  } else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default request","import service from '../apiRequest'\r\nimport { FETCH_REQUEST_TYPES, UPDATE_REQUEST_TYPES } from '../../../util/request-types'\r\nimport { serializeQueryParams } from '../../../util/common-helper'\r\n\r\n\r\nexport function saveRequest(payload){\r\n  return service({\r\n    url: `/multipleRequestItems`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\n\r\nexport function getUserItemRequests(userId) {\r\n  return service({\r\n      url: `/requestItems/employees/${userId}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllItemRequests(query) {\r\n  const queryStr = serializeQueryParams(query)\r\n  return service({\r\n      url: `/requestItems/${queryStr}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllDepartmentItemRequests(departmentId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/departments/${departmentId}/employees/${employeeId}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function endorseItemRequest(requestId, employeeId){\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/endorse`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function endorseBulkItemRequest(authUserId, data) {\r\n  return service({\r\n      url: `/requestItems/bulkEndorse/employees/${authUserId}`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function approveBulkRequests(data) {\r\n  return service({\r\n      url: `/requestItems/bulkApproval`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function cancelBulkRequest(payload) {\r\n  return service({\r\n      url: `/requestItems/bulkCancel`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestItems(employeeId) {\r\n  return service({\r\n      url: `/requestItems/endorsedItems`,\r\n      method: 'get',\r\n    })\r\n}\r\n\r\nexport function procurementActOnRequest(requestId, employeeId, payload) {\r\n  return service({\r\n      url: `/procurement/${employeeId}/requestItem/${requestId}`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getGeneralManagerRequests(employeeId) {\r\n  return service({\r\n      url: `/requestItems/employees/${employeeId}/generalManager`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function approveRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/approve`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function cancelRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/cancel`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function addSuppliersToRequest(data) {\r\n  return service({\r\n      url: `/procurement/assignSuppliers/requestItems`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getEndorsedItemsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function procurementUpdateMultiReuqestSupplier(data) {\r\n  return service({\r\n      url: `/procurement/requestItems/multipleInfo`,\r\n      method: 'PUT',\r\n      data\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function getEndorsedItemsWithSupplier(supplierId) {\r\n  return service({\r\n    url: `/procurement/endorsedItemsWithSupplierId/${supplierId}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\nexport function getAllEndorsedRequestsByDepartment() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getApprovedRequests() {\r\n  return service({\r\n      url: `/requestItems/approvedItems`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getRequestsBySupplier() {\r\n  return service({\r\n    url: `/requestItems/`\r\n  })\r\n}\r\n\r\nexport function updateRequest(data) {\r\n  const { updateType, userId, payload } = data\r\n  switch (updateType) {\r\n    case UPDATE_REQUEST_TYPES.ENDORSE:\r\n      return endorseBulkItemRequest(userId, payload)\r\n    case UPDATE_REQUEST_TYPES.CANCEL:\r\n      return cancelBulkRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return addSuppliersToRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.UPDATE_UNIT_PRICE:\r\n      return service({url: `/requestItems/updateRequestItems`, method: 'PUT', data: data.payload})\r\n    case UPDATE_REQUEST_TYPES.APPROVE:\r\n      return service({url: `/requestItems/bulkApproval`, method: 'PUT', data: payload})\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function fetchRequests(query) {\r\n  const { requestType, userId } = query\r\n  console.log('In fetch All requests')\r\n  switch (requestType) {\r\n    case FETCH_REQUEST_TYPES.MY_REQUESTS:\r\n      return getUserItemRequests(query.userId)\r\n    case FETCH_REQUEST_TYPES.HOD_PENDING_REQUEST:\r\n      return getAllDepartmentItemRequests(query.departmentId, query.userId)\r\n    case FETCH_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return getEndorsedRequestItems(userId)\r\n    case FETCH_REQUEST_TYPES.DOCUMENTED_REQUESTS_BY_SUPPLIER:\r\n      return getEndorsedItemsWithSupplier(query.supplierId)\r\n    case FETCH_REQUEST_TYPES.ENDORSED_REQUESTS:\r\n      return getEndorsedRequestItems(query.userId)\r\n    default: {\r\n      console.log('In default api call')\r\n      return getAllItemRequests(query);\r\n    }\r\n      \r\n  }\r\n}\r\n\r\n\r\n","export const ALL_QUOTATIONS = \"ALL\"\r\nexport const QUOTATIONS_WITHOUT_DOCUMENT = \"WITHOUT-DOCUMENT\"\r\nexport const QUOTATIONS_WITHOUT_DOCUMENT_TEST = \"WITHOUT-DOCUMENT-TEST\""],"sourceRoot":""}
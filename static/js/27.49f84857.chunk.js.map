{"version":3,"sources":["presentation/DashboardCard/index.js","presentation/Chart/index.js","containers/Dashboard/components/Dashboard.js","containers/Dashboard/index.js","services/api/dashboard/index.js","containers/AppLayout/components/Layout.js","containers/AppLayout/index.js"],"names":["DashboardCard","props","title","value","bordered","hoverable","style","width","height","display","flexDirection","alignItems","justifyContent","fontSize","color","BarChart","data","label","labels","maintainAspectRatio","options","responsive","type","datasets","backgroundColor","map","it","idx","COLORS","generateHexColorString","fill","borderColor","tension","barThickness","barPercentage","PieChart","aspectRatio","length","Dashboard","countOfRequestPerCurrentMonth","countOfGRNForToday","costPerDepartmentForCurrentMonth","countOfPaymentDueWithinOneWeek","approvedNumberRequestItemsAndUserDepartmentToday","countPaymentsMadeToday","supplierSpendAnalysis","requestsPerCurrentMonthPerDepartment","requestPerCategoryForToday","Fragment","md","className","gutter","marginTop","item","name","paymentAmount","userDepartment","numOfRequest","department","num_of_Request","totalPrice","requestCategory","React","useState","setData","loading","setLoading","initPage","a","service","url","method","response","status","RESPONSE_SUCCESS_CODE","reasponseData","openNotification","message","useEffect","AppLayout","CollapsibleLayout","collapsed","setCollapsed","Header","Layout","Sider","Content","Footer","key","setKey","location","useLocation","currentUser","toggle","useRouteMatch","path","profileMenu","onClick","console","log","Item","icon","LogoutOutlined","authService","pathname","includes","trigger","collapsible","padding","marginBottom","src","alt","theme","overflowY","mode","defaultSelectedKeys","selectedKeys","forceSubMenuRender","defaultOpenKeys","onChange","to","HomeOutlined","role","FUNCTIONAL_ROLES","dashboardRoles","DashboardOutlined","SendOutlined","EMPLOYEE_ROLE","ROLE_HOD","ROLE_GENERAL_MANAGER","ReconciliationOutlined","ROLE_CHIEF_ACCOUNT_OFFICER","ROLE_ACCOUNT_OFFICER","ROLE_AUDITOR","ROLE_FINANCIAL_MANAGER","SubMenu","ROLE_STORE_OFFICER","ROLE_PROCUREMENT_MANAGER","ShopOutlined","ROLE_PROCUREMENT_OFFICER","PROCUREMENT_ROUTE","ProfileOutlined","ShoppingCartOutlined","listDepartmentsRoles","AppstoreOutlined","UsergroupAddOutlined","listUserRoles","SettingOutlined","report","PieChartOutlined","danger","span","MenuUnfoldOutlined","MenuFoldOutlined","fontWeight","float","marginRight","cursor","Button","overlay","placement","UserOutlined","fullName","minHeight","subNav","children","textAlign","connect","store","auth","user"],"mappings":"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","file":"static/js/27.49f84857.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nconst DashboardCard = (props) => {\r\n  const { title, value } = props\r\n  return (\r\n    <Card title={title} bordered={false} hoverable>\r\n      <div style={{width: '100%', height: '100%', display:'flex', flexDirection: 'row', alignItems:'flex-end', justifyContent: 'flex-end'}}>\r\n        <div style={{}}>\r\n          <span style={{fontSize: '30px', color: '#7e8082'}}>{value ? value : 0}</span>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DashboardCard","import React from 'react'\r\nimport { Line, Doughnut, Pie, Bar } from 'react-chartjs-2'\r\nimport { generateHexColorString } from '../../util/common-helper'\r\nimport { COLORS } from '../../util/datas'\r\n\r\nexport const LineChart = (props) => {\r\n  const { data, label, labels, maintainAspectRation=false } = props\r\n  return (\r\n    <Line \r\n      options={{maintainAspectRatio: maintainAspectRation, responsive: true, offset: true}}\r\n      type=\"line\"\r\n      data={{\r\n        label: label,\r\n        labels,\r\n        datasets: [{\r\n          label,\r\n          data,\r\n          fill: false,\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          tension: 0.1\r\n        }]\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const BarChart = (props) => {\r\n  const { data, label, labels, maintainAspectRatio=false} = props\r\n  return (\r\n    <Bar\r\n      height=\"250px\"\r\n      options={{ maintainAspectRatio: maintainAspectRatio, responsive: true }}\r\n      type=\"Line\"\r\n      data={{\r\n        label: label,\r\n        labels,\r\n        datasets: [{\r\n          backgroundColor: labels.map((it, idx) => COLORS[idx] || generateHexColorString()),\r\n          label,\r\n          data,\r\n          fill: false,\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          tension: 0.1,\r\n          barThickness: 25,\r\n          barPercentage: 0.5\r\n        }]\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const PieChart = (props) => {\r\n  const { data, label, labels, type='Pie' } = props\r\n  return (\r\n    <>\r\n      {type === 'Pie'\r\n      ? <Pie \r\n          height=\"250px\"\r\n          options={{ aspectRatio: 1, maintainAspectRatio: false }}\r\n          data={{\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: label,\r\n                backgroundColor: labels.map((it, idx) => COLORS[idx] || generateHexColorString()),\r\n                data: data\r\n              }\r\n            ]\r\n          }}\r\n          title={label}\r\n          type=\"Pie\"\r\n        />\r\n      : <Doughnut\r\n          height=\"250px\"\r\n          options={{ aspectRatio: 1, maintainAspectRatio: false }}\r\n          data={{\r\n            label: label,\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: label,\r\n                backgroundColor: labels.map((it, idx) => COLORS[labels.length - idx] || generateHexColorString()),\r\n                data: data,\r\n              }\r\n            ]\r\n          }}\r\n          title={label}\r\n          type=\"Doughnut\"\r\n        />}\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Row, Col, Card } from 'antd'\r\nimport DashboardCard from '../../../presentation/DashboardCard'\r\nimport { BarChart, PieChart } from '../../../presentation/Chart'\r\nimport MyPieChart from '../../../shared/MyPieChart'\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  const { data } = props\r\n  const { countOfRequestPerCurrentMonth, countOfGRNForToday, costPerDepartmentForCurrentMonth, countOfPaymentDueWithinOneWeek,\r\n      approvedNumberRequestItemsAndUserDepartmentToday, countPaymentsMadeToday, supplierSpendAnalysis, \r\n      requestsPerCurrentMonthPerDepartment, requestPerCategoryForToday } = data\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col md={24}>\r\n          <span className=\"bs-page-title\">Dashboard</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={24}>\r\n          <Row gutter={12}>\r\n            <Col md={6}>\r\n              <DashboardCard\r\n                title=\"This month's requests\"\r\n                value={countOfRequestPerCurrentMonth}\r\n              />\r\n            </Col><Col md={6}>\r\n              <DashboardCard \r\n                title=\"Payments due in a week\"\r\n                value={countOfPaymentDueWithinOneWeek}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <DashboardCard \r\n                title=\"Payments made today\"\r\n                value={countPaymentsMadeToday}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <DashboardCard \r\n                title=\"GRN for today\"\r\n                value={countOfGRNForToday}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={12} style={{marginTop: 20}}>\r\n            <Col md={8}>\r\n              <Card style={{height: 350}} title=\"Approved number of requests per department\" hoverable>\r\n                {(supplierSpendAnalysis || []).length < 1 ? \"N/A\" : \r\n                  <PieChart\r\n                    type=\"doughnut\"\r\n                    maintainAspectRatio={false}\r\n                    label=\"Cost per department for this month\"\r\n                    labels={(supplierSpendAnalysis || []).map(item=> item.name)}\r\n                    data={(supplierSpendAnalysis || []).map(item=> item.paymentAmount)}\r\n                  />\r\n                }\r\n                {/* {(supplierSpendAnalysis || []).length < 1 ? \"N/A\" : \r\n                  <MyPieChart\r\n                    data={(supplierSpendAnalysis || []).map(item=> {\r\n                      return {type: item?.name, value: item?.paymentAmount}\r\n                    })}\r\n                  />\r\n                } */}\r\n              </Card>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Card style={{height: 350}} title=\"Approved number of requests per department\" hoverable>\r\n                {(approvedNumberRequestItemsAndUserDepartmentToday || []).length < 1 ? \"N/A\" : \r\n                  <PieChart\r\n                    type=\"doughnut\"\r\n                    maintainAspectRatio={false}\r\n                    label=\"Approved number of requests per department\"\r\n                    labels={(approvedNumberRequestItemsAndUserDepartmentToday || []).map(item=> item.userDepartment)}\r\n                    data={(approvedNumberRequestItemsAndUserDepartmentToday || []).map(item=> item.numOfRequest)}\r\n                  />\r\n                }\r\n              </Card>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Card style={{height: 350}} title=\"Request per department for this month\" hoverable>\r\n                {(requestsPerCurrentMonthPerDepartment || []).length < 1 ? \"N/A\" : \r\n                  <PieChart\r\n                    type=\"Pie\"\r\n                    maintainAspectRatio={false}\r\n                    label=\"Request per department for this month\"\r\n                    labels={(requestsPerCurrentMonthPerDepartment || []).map(item=> item.department)}\r\n                    data={(requestsPerCurrentMonthPerDepartment || []).map(item=> item.num_of_Request)}\r\n                  />\r\n                }\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{marginTop: 20}} gutter={12}>\r\n            <Col md={12}>\r\n              <Card style={{height: 350}} title=\"Cost per department for this month\" hoverable>\r\n                {(costPerDepartmentForCurrentMonth || []).length < 1 ? \"N/A\" : \r\n                  <BarChart\r\n                    maintainAspectRatio={false}\r\n                    label=\"Cost per department for this month\"\r\n                    labels={(costPerDepartmentForCurrentMonth || []).map(item=> item.userDepartment)}\r\n                    data={(costPerDepartmentForCurrentMonth || []).map(item=> item.totalPrice)}\r\n                  />\r\n                }\r\n              </Card>\r\n            </Col>\r\n            <Col md={12}>\r\n              <Card style={{height: 350}} title=\"Request per category for today\" hoverable>\r\n                {(requestPerCategoryForToday || []).length < 1 ? \"N/A\" : \r\n                  <BarChart\r\n                    maintainAspectRatio={false}\r\n                    label=\"Request per category for today\"\r\n                    labels={(requestPerCategoryForToday || []).map(item=> item.requestCategory)}\r\n                    data={(requestPerCategoryForToday || []).map(item=> item.numOfRequest)}\r\n                  />\r\n                }\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import { Spin } from 'antd'\r\nimport React from 'react'\r\nimport { RESPONSE_SUCCESS_CODE } from '../../services/api/apiRequest'\r\nimport { getDashboardData as getDashboardDataApi} from '../../services/api/dashboard'\r\nimport openNotification from '../../util/notification'\r\nimport AppLayout from '../AppLayout'\r\nimport DashboardComponent from './components/Dashboard'\r\n\r\nconst Dashboard = (props) => {\r\n  const [data, setData] = React.useState({})\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const initPage = async ()=> {\r\n    setLoading(true)\r\n    try {\r\n      const response = await getDashboardDataApi({})\r\n      if(response.status === RESPONSE_SUCCESS_CODE) {\r\n        const reasponseData = response.data\r\n        setData(reasponseData)\r\n      } else {\r\n        openNotification('error', 'Get Dashboard', response.message)\r\n      }\r\n    } catch(err) {\r\n      openNotification('error', 'get dashboard data', 'Failed!')\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  React.useEffect(()=> {\r\n    initPage()\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppLayout>\r\n        {loading ? <Spin /> :\r\n          <DashboardComponent \r\n            data={data}\r\n          />\r\n        }\r\n      </AppLayout>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import service from '../apiRequest'\r\n\r\nexport function getDashboardData(query) {\r\n  return service({\r\n    url: '/dashboard/data',\r\n    method: 'GET'\r\n  })\r\n}","import React, { useEffect } from 'react'\r\nimport { Menu, Layout, Dropdown, Col, Row } from 'antd'\r\nimport \"../../../styles/layout.less\"\r\nimport * as authService from '../../../services/api/auth'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  HomeOutlined,\r\n  DashboardOutlined,\r\n  AppstoreOutlined,\r\n  UsergroupAddOutlined,\r\n  SettingOutlined,\r\n  PieChartOutlined,\r\n  LogoutOutlined,\r\n  ShopOutlined,\r\n  ReconciliationOutlined,\r\n  UserOutlined,\r\n  AccountBookOutlined,\r\n  SendOutlined,\r\n  ShoppingCartOutlined,\r\n  ProfileOutlined,\r\n} from '@ant-design/icons';\r\nimport { NavLink, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { PROCUREMENT_ROUTE } from '../../../util/routes';\r\nimport { FUNCTIONAL_ROLES } from '../../../util/constants';\r\nimport { EMPLOYEE_ROLE } from '../../../util/datas';\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\n//import { HOME_ROUTE, LOGIN_ROUTE } from '../../../util/routes';\r\n\r\nconst CollapsibleLayout = (props) => {\r\n  const [collapsed, setCollapsed] = React.useState(false)\r\n  const { Header, Sider, Content, Footer } = Layout\r\n  const [key, setKey] = React.useState(\"home\")\r\n  const location = useLocation()\r\n  const { currentUser } = props\r\n  const { path } = useRouteMatch()\r\n\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed)\r\n  }\r\n\r\n  const handleMenuClick = () => {\r\n    console.log('menu click')\r\n  }\r\n\r\n  const profileMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"1\" icon={<LogoutOutlined />} onClick={()=> authService.signOut()}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  const handleMenuChange = (value) => {\r\n    setKey(value)\r\n  }\r\n\r\n  React.useEffect(()=> {\r\n    console.log(\"pathname\", location.pathname)\r\n    const { pathname } = location\r\n    if(pathname.includes(\"/app/my-requests\")) {\r\n      setKey(\"my-requests\")\r\n    } else if(pathname.includes(\"/app/dashboard\")) {\r\n      setKey(\"dashboard\")\r\n    } else if(pathname.includes(\"/app/departments\")) {\r\n      setKey(\"department\")\r\n    } else if(pathname.includes(\"/app/employees\")) {\r\n      setKey(\"employee\")\r\n    } else if(pathname.includes(\"/app/settings\")) {\r\n      setKey(\"setting\")\r\n    } else if(pathname.includes(\"/app/request-items\")) {\r\n      setKey(\"request\")\r\n    } else if(pathname.includes(\"/app/petty-cash\")) {\r\n      setKey(\"petty-cash\")\r\n    } else if(pathname.includes(\"/app/float\")) {\r\n      setKey(\"float\")\r\n    } else if(pathname.includes(\"/app/suppliers\")) {\r\n      setKey(\"/app/\")\r\n    } else if(pathname.includes(\"/app/local-purchase-orders\")) {\r\n      setKey(\"/app/local-purchase-orders\")\r\n    } else if(pathname.includes(\"/app/procurement/create-quotation\")) {\r\n      setKey(\"/app/procurement/create-quotation\")\r\n    } else if(pathname.includes(\"/app/suppliers\")) {\r\n      setKey(\"/app/suppliers\")\r\n    }  else if(pathname.includes(\"/app/quotations\")) {\r\n      setKey(\"/app/quotations\")\r\n    } else if(pathname.includes(\"/app/procurement/assign-suppliers\")) {\r\n      setKey(\"assign-suppliers\")\r\n    } else if(pathname.includes(\"/app/store\")) {\r\n      setKey(\"/app/store\")\r\n    } else if(pathname.includes(\"/app/grn\")) {\r\n      setKey(\"/app/grn\")\r\n    } else if(pathname.includes(\"/app/account/goods-receive-notes\")) {\r\n      setKey(\"/app/account/goods-receive-notes\")\r\n    } else if(pathname.includes(\"/app/account\")) {\r\n      setKey(\"/app/account\")\r\n    }  else if(pathname.includes(\"/app/payments/goods-receive-notes\")) {\r\n      setKey(\"/app/payments/goods-receive-notes\")\r\n    } else if(pathname.includes(\"/app/payments/pending-approval\")) {\r\n\r\n      setKey(\"/app/payments/pending-approval\")\r\n    }\r\n    else {\r\n      setKey(\"home\")\r\n    }\r\n  }, [key])\r\n\r\n  return (\r\n    <Layout className=\"bs-layout\">\r\n      <Sider trigger={null} collapsible collapsed={collapsed}>\r\n        {/* <div className=\"bs-logo\" /> */}\r\n        <div style={{color: '#fff', padding: '10px 0px 10px 20px', marginBottom: 10}}>\r\n          <img width=\"30\" height=\"40\" src=\"https://www.blueskies.com/wp-content/uploads/2017/10/logo-01.png\" alt=\"\" loading=\"eager\" />\r\n          <span>Blueskies</span>\r\n        </div>\r\n        \r\n        <Menu\r\n          theme=\"dark\" \r\n          style={{height: \"100vh\", overflowY: \"auto\"}}\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={[\"/app\"]}\r\n          selectedKeys={[key]}\r\n          forceSubMenuRender={true}\r\n          onClick={(value) => setKey(value)}\r\n          defaultOpenKeys={[\"procurement\"]}\r\n          onChange={handleMenuChange}\r\n        >\r\n          <Menu.Item key=\"home\">\r\n            <NavLink to=\"/app\">\r\n              <HomeOutlined />\r\n              <span>Home</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          {authService.userHasAnyRole(currentUser.role, FUNCTIONAL_ROLES.dashboardRoles) &&   \r\n            <Menu.Item key=\"dashboard\">\r\n              <NavLink to=\"/app/dashboard\">\r\n                <DashboardOutlined />\r\n                <span>Dashboard</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          <Menu.Item key=\"my-requests\">\r\n            <NavLink to=\"/app/my-requests\">\r\n              <SendOutlined />\r\n              <span>My Requests</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_HOD, EMPLOYEE_ROLE.ROLE_GENERAL_MANAGER]) && (\r\n            <>\r\n              <Menu.Item key=\"request\">\r\n                <NavLink to=\"/app/request-items\">\r\n                  <ReconciliationOutlined />\r\n                  <span>Item requests</span>\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"float\">\r\n                <NavLink to=\"/app/float\">\r\n                  <ReconciliationOutlined />\r\n                  <span>Float requests</span>\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"petty-cash\">\r\n                <NavLink to=\"/app/petty-cash\">\r\n                  <ReconciliationOutlined />\r\n                  <span>Petty cash requests</span>\r\n                </NavLink>\r\n              </Menu.Item>\r\n            </>\r\n          )}\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_HOD, EMPLOYEE_ROLE.ROLE_CHIEF_ACCOUNT_OFFICER,\r\n           EMPLOYEE_ROLE.ROLE_GENERAL_MANAGER, EMPLOYEE_ROLE.ROLE_ACCOUNT_OFFICER, \r\n            EMPLOYEE_ROLE.ROLE_AUDITOR, EMPLOYEE_ROLE.ROLE_FINANCIAL_MANAGER]) && (\r\n             <Menu.SubMenu\r\n              key=\"/app/payments\"\r\n              icon={<ReconciliationOutlined />} \r\n              title=\"Payments\"\r\n             >\r\n              \r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_ACCOUNT_OFFICER]) && (\r\n                <Menu.Item\r\n                  key=\"/app/payments/goods-receive-notes\"\r\n                >\r\n                  <NavLink to=\"/app/payments/goods-receive-notes\">\r\n                    <span>GRNs Make Payment</span>\r\n                  </NavLink>\r\n                </Menu.Item>\r\n                )}\r\n              <Menu.Item\r\n                key=\"/app/payments/pending-approval\"\r\n                >\r\n                <NavLink to=\"/app/payments/pending-approval\">\r\n                  <span>Approve Payments</span>\r\n                </NavLink>\r\n              </Menu.Item>\r\n             </Menu.SubMenu>\r\n           )}\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_HOD, EMPLOYEE_ROLE.ROLE_GENERAL_MANAGER, \r\n            EMPLOYEE_ROLE.ROLE_STORE_OFFICER, EMPLOYEE_ROLE.ROLE_PROCUREMENT_MANAGER]) && (\r\n            <Menu.Item key=\"/app/grn\">\r\n              <NavLink to=\"/app/grn\">\r\n                <ShopOutlined />\r\n                <span>GRN Management</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          )}\r\n          {/* {authService.userHasAnyRole(currentUser.role, FUNCTIONAL_ROLES.requestMenu) && \r\n            <Menu.SubMenu key=\"/app/requests\" icon={<DesktopOutlined/>} title=\"Request Mgmt\">\r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_HOD]) && \r\n                <Menu.Item key=\"/app/requests/endorse\">\r\n                  <NavLink to=\"/app/requests/endorse\">\r\n                    <span>Endorse</span>\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_GENERAL_MANAGER]) && \r\n                <Menu.Item key=\"/app/requests/approve\">\r\n                  <NavLink to=\"/app/requests/approve\">\r\n                    <span>Approve</span>\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n            </Menu.SubMenu>\r\n          } */}\r\n          {/* {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_GENERAL_MANAGER, EMPLOYEE_ROLE.ROLE_ADMIN]) &&   \r\n            <Menu.Item key=\"/app/quoatations\">\r\n              <NavLink to=\"/app/quotations\">\r\n                <SnippetsOutlined />\r\n                <span>Quotations</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          } */}\r\n          {authService.userHasAnyRole(currentUser.role, \r\n            [EMPLOYEE_ROLE.ROLE_PROCUREMENT_OFFICER, EMPLOYEE_ROLE.ROLE_PROCUREMENT_MANAGER]) && \r\n            <Menu.SubMenu\r\n              key=\"procurement\"\r\n              icon={<ReconciliationOutlined />} \r\n              title=\"Procurement\"\r\n            >\r\n              <Menu.Item key=\"assign-suppliers\">\r\n                <NavLink to={`${PROCUREMENT_ROUTE}/assign-suppliers`}>\r\n                  Assign Supplier\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key={`${PROCUREMENT_ROUTE}/rfqs`}>\r\n                <NavLink to={`${PROCUREMENT_ROUTE}/rfqs`}>\r\n                  RFQs\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/app/procurement/create-quotation\">\r\n                <NavLink to={`${PROCUREMENT_ROUTE}/create-quotation`}>\r\n                  Create Quotation\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key={`${PROCUREMENT_ROUTE}/add-local-purchase-order`}>\r\n                <NavLink to={`${PROCUREMENT_ROUTE}/add-local-purchase-order`}>\r\n                  Create LPO\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key={`${PROCUREMENT_ROUTE}/request-categories`}>\r\n                <NavLink to={`${PROCUREMENT_ROUTE}/request-categories`}>\r\n                  Request Categories\r\n                </NavLink>\r\n              </Menu.Item>\r\n            </Menu.SubMenu>\r\n          }\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_PROCUREMENT_OFFICER, EMPLOYEE_ROLE.ROLE_PROCUREMENT_MANAGER]) && \r\n            <Menu.Item key={`/app/quotations`}>\r\n              <NavLink to={`/app/quotations`}>\r\n                <ProfileOutlined />\r\n                <span>Supplier Quotes</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_PROCUREMENT_OFFICER, EMPLOYEE_ROLE.ROLE_PROCUREMENT_MANAGER]) && \r\n            <Menu.Item key={`/app/local-purchase-orders`}>\r\n              <NavLink to={`/app/local-purchase-orders`}>\r\n                <ShoppingCartOutlined />\r\n                <span>Local Purchase Orders</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_STORE_OFFICER]) && \r\n            <Menu.Item key=\"/app/store\" icon={<ShopOutlined />}>\r\n              <NavLink to=\"/app/store\">\r\n                Store\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          {/* {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_ACCOUNT_OFFICER, EMPLOYEE_ROLE.ROLE_CHIEF_ACCOUNT_OFFICER, EMPLOYEE_ROLE.ROLE_AUDITOR]) && \r\n            <Menu.SubMenu  \r\n              key=\"/app/account\" \r\n              title=\"Accounts\" \r\n              icon={<AccountBookOutlined />}\r\n            >\r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_ACCOUNT_OFFICER]) && \r\n              <Menu.Item key=\"/app/account/goods-receive-notes\">\r\n                <NavLink to=\"/app/account/goods-receive-notes\">\r\n                  Make Payment\r\n                </NavLink>\r\n              </Menu.Item>\r\n              }\r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_ACCOUNT_OFFICER, EMPLOYEE_ROLE.ROLE_AUDITOR]) &&\r\n              <Menu.Item key=\"/app/account/payments\">\r\n                <NavLink to=\"/app/account/payments\">\r\n                  Payments\r\n                </NavLink>\r\n              </Menu.Item>\r\n              }\r\n              {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_AUDITOR]) &&\r\n                <Menu.Item key=\"/app/audit/approve-payment\">\r\n                  <NavLink to=\"/app/audit/approve-payment\">\r\n                    Aprove Payments\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n            </Menu.SubMenu>\r\n          } */}\r\n          {/* <Menu.SubMenu key=\"/app/audit\" title=\"Audit\" icon={<AccountBookOutlined />}>\r\n            <Menu.Item key=\"/app/audit/approve-payment\">\r\n              <NavLink to=\"/app/audit/approve-payment\">\r\n                Approve Payments\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/app/audit/payments\">\r\n              <NavLink to=\"/app/audit/payments\">\r\n                Payments\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu.SubMenu> */}\r\n          {authService.userHasAnyRole(currentUser.role, FUNCTIONAL_ROLES.listDepartmentsRoles) && \r\n            <Menu.Item key=\"department\">\r\n              <NavLink to=\"/app/departments\">\r\n                <AppstoreOutlined />\r\n                <span>Departments</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          {authService.userHasAnyRole(currentUser.role, [EMPLOYEE_ROLE.ROLE_PROCUREMENT_OFFICER, EMPLOYEE_ROLE.ROLE_PROCUREMENT_MANAGER]) && \r\n            <Menu.Item key=\"/app/suppliers\">\r\n              <NavLink to=\"/app/suppliers\">\r\n                <UsergroupAddOutlined />\r\n                <span>Supplier Management</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          {authService.userHasAnyRole(currentUser.role, FUNCTIONAL_ROLES.listUserRoles) && \r\n            <Menu.Item key=\"employee\">\r\n              <NavLink to=\"/app/employees\">\r\n                <UsergroupAddOutlined />\r\n                <span>User Management</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          <Menu.Item key=\"setting\" icon={<SettingOutlined />}>\r\n            <NavLink to=\"/app/settings\">\r\n              <span>Settings</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          {authService.userHasAnyRole(currentUser.role, FUNCTIONAL_ROLES.report) && \r\n            <Menu.Item key=\"/app/reports\" icon={<PieChartOutlined />}>\r\n              <NavLink to=\"/app/reports\">\r\n                <span>Reports</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          }\r\n          <Menu.Item key=\"11\" icon={<LogoutOutlined />}\r\n            danger \r\n            onClick={()=> {\r\n              authService.signOut()\r\n            }}\r\n          >\r\n            Logout\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"bs-site-layout\">\r\n        <Header \r\n          className=\"bs-site-layout-background\" \r\n          style={{ padding: 0 }}\r\n        >\r\n          <Row>\r\n            <Col span={2}>\r\n              {collapsed ? <MenuUnfoldOutlined className=\"bs-trigger\" onClick={toggle} /> : <MenuFoldOutlined onClick={toggle} className=\"bs-trigger\" />}\r\n            </Col>\r\n            <Col span={14}>\r\n              {props.title && (\r\n                <span style={{fontSize: 20, fontWeight: \"lighter\", color: \"#6e7273\"}}>{props.title}</span>\r\n              )}\r\n            </Col>\r\n            <Col span={8}>\r\n              <div \r\n                style={{float: 'right', marginRight: 10, display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', \r\n                alignItems: 'center', cursor: 'pointer', height: '100%'}}\r\n              >\r\n                {/* <UserOutlined /> <span>{currentUser.fullName}</span> */}\r\n                <Dropdown.Button overlay={profileMenu} placement=\"bottomLeft\" icon={<UserOutlined />}>\r\n                  {currentUser.fullName}\r\n                </Dropdown.Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n            className: 'bs-trigger',\r\n            onClick: toggle,\r\n          })} */}\r\n          \r\n        </Header>\r\n        <Content\r\n          className=\"bs-site-layout-content\"\r\n          style={{\r\n            minHeight: 380\r\n          }}\r\n        >\r\n          {props.subNav && (\r\n            <Row className=\"bs-sub-nav-header\">\r\n              <Col span={24}>\r\n                {props.subNav}\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col span={24} style={{padding: 10}}>\r\n              {props.children}\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>\r\n          Blueskies Procurement Application ©2021 Created by Tech-Bridge\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CollapsibleLayout","import { connect } from 'react-redux'\r\nimport CollapsibleLayout from './components/Layout'\r\n\r\nconst AppLayout = (props)=> {\r\n  return (\r\n    <CollapsibleLayout {...props} />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(AppLayout)"],"sourceRoot":""}
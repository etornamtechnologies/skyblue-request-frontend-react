{"version":3,"sources":["util/quotation-types.js","presentation/Spinner/index.js","services/redux/department/actions.js","services/redux/employee/actions.js","services/api/urls.js","util/routes.js","App.js","reportWebVitals.js","services/redux/auth/actionTypes.js","services/redux/auth/reducers.js","services/redux/department/actionTypes.js","services/redux/department/reducers.js","services/redux/supplier/actionTypes.js","services/redux/supplier/reducers.js","services/redux/request/actionTypes.js","services/redux/request/reducers.js","services/redux/employee/actionTypes.js","services/redux/employee/reducers.js","services/redux/quotation/actionTypes.js","services/redux/quotation/reducers.js","services/redux/request-category/actionTypes.js","services/redux/request-category/reducers.js","services/redux/root-reducer.js","services/sagas/auth/index.js","services/api/department/index.js","services/sagas/department/index.js","services/sagas/supplier/index.js","services/sagas/employee/index.js","services/sagas/request/index.js","services/api/quotation/index.js","services/sagas/quotation/index.js","services/api/request-category/index.js","services/sagas/request-category/index.js","services/sagas/index.js","store.js","index.js","services/redux/supplier/actions.js","services/app-storage/index.js","services/app-storage/key-values.js","services/redux/request/actions.js","util/request-types.js","util/browser-history.js","services/redux/request-category/actions.js","presentation/AuthenticatedRoute/index.js","services/redux/quotation/actions.js","services/redux/auth/actions.js","services/api/employee/index.js","services/api/auth/index.js","services/api/supplier/index.js","util/notification.js","services/api/apiRequest.js","services/api/item-request/index.js"],"names":["ALL_QUOTATIONS","QUOTATIONS_WITHOUT_DOCUMENT","Spinner","antIcon","color","indicator","type","style","fontSize","spin","createActions","fetchDepartments","fetchDepartmentsSuccess","fetchDepartmentsFailure","getDepartment","getDepartmentSuccess","getDepartmentFailure","createDepartment","createDepartmentSuccess","createDepartmentFailure","updateDepartment","updateDepartmentSuccess","updateDepartmentFailure","deleteDepartment","deleteDepartmentSuccess","deleteDepartmentFailure","resetDepartment","Types","Creators","fetchEmployees","fetchEmployeesSuccess","fetchEmployeesFailure","getEmployee","getEmployeeSuccess","getEmployeeFailure","createEmployee","createEmployeeSuccess","createEmployeeFailure","updateEmployee","updateEmployeeSuccess","updateEmployeeFailure","deleteEmployee","deleteEmployeeSuccess","deleteEmployeeFailure","resetEmployee","BASE_URL","process","DEPARTMENTS_ENDPOINT","SUPPLIERS_ENDPOINT","EMPLOYEE_ENDPOINT","LOGIN_ROUTE","HOME_ROUTE","DASHBOARD_ROUTE","DEPARTMENTS_ROUTE","SUPPLIERS_ROUTE","UNAUTHORIZED_ROUTE","EMPLOYEE_ROUTE","MY_REQUESTS_ROUTE","REQUEST_ROUTE","PROCUREMENT_ROUTE","Login","React","lazy","Home","Department","Supplier","Employee","MyRequest","Request","NotAuthorized","Procurement","Dashboard","Store","Settings","Account","connect","store","authUser","auth","user","props","history","Suspense","fallback","path","component","AuthenticatedRoute","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTypes","LOCAL_STORE_USER","getLocalStateObject","AUTH_USER_KEY","LOCAL_STORE_TOKEN","getLocalState","AUTH_TOKEN_KEY","console","log","INITIAL_STATE","id","undefined","firstName","lastName","fullName","email","phoneNo","department","name","description","enabled","role","token","loading","HANDLERS","LOGIN","state","error","LOGIN_SUCCESS","action","responseData","employee","LOGIN_FAILURE","LOGOUT","RESET_AUTH","createReducer","errors","departments","submitting","submitSuccess","FETCH_DEPARTMENTS","FETCH_DEPARTMENTS_SUCCESS","FETCH_DEPARTMENTS_FAILURE","CREATE_DEPARTMENT","CREATE_DEPARTMENT_SUCCESS","concat","CREATE_DEPARTMENT_FAILURE","submitSucces","UPDATE_DEPARTMENT","UPDATE_DEPARTMENT_SUCCESS","map","item","UPDATE_DEPARTMENT_FAILURE","DELETE_DEPARTMENT","DELETE_DEPARTMENT_SUCCESS","departmentId","filter","DELETE_DEPARTMENT_FAILURE","RESET_DEPARTMENT","suppliers","supplier","loaidng","FETCH_SUPPLIERS","FETCH_SUPPLIERS_SUCCESS","FETCH_SUPPLIERS_FAILURE","CREATE_SUPPLIER","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAILURE","UPDATE_SUPPLIER","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAILURE","DELETE_SUPPLIER","DELETE_SUPPLIER_SUCCESS","supplierId","DELETE_SUPPLIER_FAILURE","GET_SUPPLIER","GET_SUPPLIER_SUCCESS","GET_SUPPLIER_FAILURE","RESET_SUPPLIERS","requests","FETCH_REQUESTS","FETCH_REQUESTS_SUCCESS","FETCH_REQUESTS_FAILURE","CREATE_REQUEST","CREATE_REQUEST_SUCCESS","CREATE_REQUEST_FAILURE","UPDATE_REQUEST","UPDATE_REQUEST_SUCCESS","depratmentId","UPDATE_REQUEST_FAILURE","DELETE_REQUEST","DELETE_REQUEST_SUCCESS","DELETE_REQUEST_FAILURE","RESET_REQUEST","employees","FETCH_EMPLOYEES","FETCH_EMPLOYEES_SUCCESS","FETCH_EMPLOYEES_FAILURE","CREATE_EMPLOYEE","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAILURE","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAILURE","DELETE_EMPLOYEE","DELETE_EMPLOYEE_SUCCESS","employeeId","DELETE_EMPLOYEE_FAILURE","RESET_EMPLOYEE","quotations","FETCH_QUOTATIONS","FETCH_QUOTATIONS_SUCCESS","FETCH_QUOTATIONS_FAILURE","UPDATE_QUOTATION","UPDATE_QUOTATION_SUCCESS","quotationId","UPDATE_QUOTATION_FAILURE","RESET_QUOTATION","requestCategories","FETCH_REQUEST_CATEGORIES","FETCH_REQUEST_CATEGORIES_SUCCESS","FETCH_REQUEST_CATEGORIES_FAILURE","CREATE_REQUEST_CATEGORY","CREATE_REQUEST_CATEGORY_SUCCESS","CREATE_REQUEST_CATEGORY_FAILURE","RESET_REQUEST_CATEGORY","combineReducers","authReducer","departmentReducer","supplierReducer","request","requestReducer","employeeReducer","quotation","QuotationReducer","requestCategory","requestCategoryReducer","login","logout","watchLogin","watchLogout","payload","password","call","signIn","response","status","data","storeLocalState","put","loginSuccess","push","openNotification","message","loginFailue","loginFailure","clearLocalState","takeLeading","getDepartments","query","apiRequest","method","url","saveDepartment","deptId","watchFetchDepartments","watchCreateDepartment","watchUpdateDepartment","watchDeleteDepartment","updateDepartmentApi","deleteDepartmentApi","takeLatest","fetchSuppliers","createSupplier","updateSupplier","deleteSupplier","watchFetchSuppliers","watchCreateSupplier","watchUpdateSupplier","watchDeleteSupplier","getSuppliers","fetchSuppliersSuccess","fetchSuppliersFailure","saveSupplier","createSupplierSuccess","createSupplierFailure","updateSupplierApi","updateSupplierSuccess","updateSupplierFailure","deleteSupplierApi","deleteSupplierSuccess","deleteSupplierFailure","watchFetchEmployees","watchCreateEmployee","watchUpdateEmployee","watchDeleteEmployee","watchGetEmployee","fetchEmployeesApi","getEmployeeApi","EmployeeId","saveEmployeeApi","updateEmployeeApi","deleteEmployeeApi","GET_EMPLOYEE","fetchRequests","createRequest","updateRequest","watchFetchRequests","watchCreateRequest","watchUpdateRequest","fetchRequestsApi","fetchRequestsSuccess","fetchRequestsFailure","createRequestApi","createRequestSuccess","createRequestFailure","updateRequestApi","updateRequestSuccess","updateRequestFailure","getQuotations","service","getAllQuotations","requestType","updateQuotation","documentId","fetchQuotations","watchFetchQuotations","watchUpdateQuotation","getAllQuotationsApi","fetchQuotationsSuccess","fetchQuotationsFailure","updateQuotationApi","updateQuotationSuccess","updateQuotationFailure","getRequestCategories","saveRequestCategory","fetchRequestCategories","createRequestCategory","resetRequestCategory","watchFetchRequestCategories","watchCreateRequestCategory","watchResetRequestCategory","getRequestCategoriesApi","fetchRequestCategoriesSuccess","fetchRequestCategoriesFailure","createRequestCategoryApi","createRequestCategorySuccess","createRequestCategoryFailure","resetRequest","rootSaga","all","createLogger","sagaMiddleware","createSagaMiddleware","middlewares","Boolean","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById","getSupplier","getSupplierSuccess","getSupplierFailure","resetSuppliers","field","localStorage","setItem","JSON","stringify","err","getItem","parse","removeItem","getRequest","getRequestSuccess","getRequestFailure","deleteRequest","deleteRequestSuccess","deleteRequestFailure","FETCH_REQUEST_TYPES","MY_REQUESTS","HOD_PENDING_REQUEST","ENDORSED_REQUESTS","PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS","REQUESTS_BY_SUPPLIER","DOCUMENTED_REQUESTS_BY_SUPPLIER","UPDATE_REQUEST_TYPES","ENDORSE","CANCEL","ASSIGN_SUPPLIERS","UPDATE_UNIT_PRICE","APPROVE","createBrowserHistory","accessToken","Component","roles","rest","indexOf","resetQuotation","resetAuth","getUsers","getUser","userId","saveUser","updateUser","deleteUser","selfChangePassword","signOut","userHasAnyRole","notification","apiConfig","timeout","baseURL","headers","axios","create","interceptors","use","config","Promise","reject","statusText","resolve","authenticationService","saveRequest","getUserItemRequests","getEndorsedRequestItems","updateType","authUserId","endorseBulkItemRequest","cancelBulkRequest","addSuppliersToRequest"],"mappings":"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","file":"static/js/main.f1a266fa.chunk.js","sourcesContent":["export const ALL_QUOTATIONS = \"ALL\"\r\nexport const QUOTATIONS_WITHOUT_DOCUMENT = \"WITHOUT-DOCUMENT\"","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Spinner = ({ color = \"#30994b\", indicator }) => {\r\n  let antIcon;\r\n  if (indicator) antIcon = indicator;\r\n  else antIcon = <LoadingOutlined type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\n  return <Spin indicator={antIcon} style={{ color }} />;\r\n};\r\n\r\nexport default Spinner;\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: \"5%\",\r\n      }}\r\n    >\r\n      <Spin\r\n        size=\"large\"\r\n        tip=\"Please wait...\"\r\n        style={{ color: \"#30994b\" }}\r\n        data-testid=\"global-loading-spinner\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchDepartments: [\"query\"],\r\n    fetchDepartmentsSuccess: [\"responseData\"],\r\n    fetchDepartmentsFailure: [\"error\"],\r\n\r\n    getDepartment: [\"departmentId\"],\r\n    getDepartmentSuccess: [\"responseData\"],\r\n    getDepartmentFailure: [\"error\"],\r\n\r\n    createDepartment: [\"payload\"],\r\n    createDepartmentSuccess: [\"responseData\"],\r\n    createDepartmentFailure: [\"error\"],\r\n\r\n    updateDepartment: [\"departmentId\", \"payload\"],\r\n    updateDepartmentSuccess: [\"responseData\"],\r\n    updateDepartmentFailure: [\"error\"],\r\n\r\n    deleteDepartment: [\"departmentId\"],\r\n    deleteDepartmentSuccess: [\"departmentId\"],\r\n    deleteDepartmentFailure: [\"error\"],\r\n\r\n    resetDepartment: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchEmployees: [\"query\"],\r\n    fetchEmployeesSuccess: [\"responseData\"],\r\n    fetchEmployeesFailure: [\"error\"],\r\n\r\n    getEmployee: [\"employeeId\"],\r\n    getEmployeeSuccess: [\"responseData\"],\r\n    getEmployeeFailure: [\"error\"],\r\n\r\n    createEmployee: [\"payload\"],\r\n    createEmployeeSuccess: [\"responseData\"],\r\n    createEmployeeFailure: [\"error\"],\r\n\r\n    updateEmployee: [\"employeeId\", \"payload\"],\r\n    updateEmployeeSuccess: [\"employeeId\", \"responseData\"],\r\n    updateEmployeeFailure: [\"error\"],\r\n\r\n    deleteEmployee: [\"employeeId\"],\r\n    deleteEmployeeSuccess: [\"responseData\"],\r\n    deleteEmployeeFailure: [\"error\"],\r\n\r\n    resetEmployee: null\r\n  }\r\n)","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n//auth endpoints\r\nexport const AUTH_ENDPOINT = \"/auth/login\"\r\n\r\n//depatrtmens endpoint\r\nexport const DEPARTMENTS_ENDPOINT = \"/departments/\"\r\n\r\n//suppliers endpoint\r\nexport const SUPPLIERS_ENDPOINT = \"/suppliers/\"\r\n\r\n//my requests endpoint\r\nexport const MY_REQUESTS_ENDPOINT = \"/my-requests/\"\r\n\r\n//quotation endpoint\r\nexport const QUOTATION_ENDPOINT = \"/quotations/\"\r\n\r\n//users endpoint\r\nexport const EMPLOYEE_ENDPOINT = \"/employees/\"","export const LOGIN_ROUTE = \"/auth/login\"\r\nexport const HOME_ROUTE = \"/app\"\r\nexport const DASHBOARD_ROUTE = \"/app/dashboard\"\r\nexport const DEPARTMENTS_ROUTE = \"/app/departments\"\r\nexport const SUPPLIERS_ROUTE = \"/app/suppliers\"\r\nexport const UNAUTHORIZED_ROUTE = \"/app/un-authorized\"\r\nexport const EMPLOYEE_ROUTE = \"/app/employees\"\r\nexport const MY_REQUESTS_ROUTE = \"/app/my-requests\"\r\nexport const REQUEST_ROUTE = \"/app/requests\"\r\nexport const QUOTATION_ROUTE = \"/app/quotations\"\r\nexport const LOCAL_PURCHASE_ORDER_ROUTE=\"/app/local-purchase-orders\"\r\nexport const PAYMENT_ROUTE=\"/app/payments\"\r\nexport const PROCUREMENT_ROUTE=\"/app/procurement\"\r\nexport const LOCAL_PURCHASE_ORDERS=\"/app/local-purchase-orders\"","import \"antd/dist/antd.less\";\nimport { Router, Switch, Route, Redirect } from 'react-router'\nimport {history} from './util/browser-history'\nimport React from \"react\";\nimport Spinner from \"./presentation/Spinner\";\nimport { DEPARTMENTS_ROUTE, HOME_ROUTE, LOGIN_ROUTE, SUPPLIERS_ROUTE, EMPLOYEE_ROUTE, MY_REQUESTS_ROUTE, REQUEST_ROUTE, QUOTATION_ROUTE, PROCUREMENT_ROUTE, DASHBOARD_ROUTE } from \"./util/routes\";\nimport './styles/app.less'\nimport AuthenticatedRoute from './presentation/AuthenticatedRoute'\nimport { connect } from 'react-redux'\nconst Login = React.lazy(()=> import('./containers/Auth'))\nconst Home = React.lazy(()=> import('./containers/Home'))\nconst Department = React.lazy(()=> import('./containers/Department'))\nconst Supplier = React.lazy(() => import('./containers/Suppliers'))\nconst Employee = React.lazy(() => import('./containers/Employee'))\nconst MyRequest = React.lazy(()=> import('./containers/MyRequest'))\nconst Request = React.lazy(()=> import('./containers/Requests'))\nconst NotAuthorized = React.lazy(()=> import('./containers/NotAuthorized'))\nconst Procurement = React.lazy(() => import('./containers/Procurement'))\nconst Dashboard = React.lazy(() => import('./containers/Dashboard'))\nconst Store = React.lazy(() => import('./containers/Store'))\nconst Settings = React.lazy(()=> import('./containers/Settings'))\nconst Account = React.lazy(() => import('./containers/Account'))\n\nfunction App(props) {\n  const { authUser } = props\n  return (\n    <>\n      <Router history={history}>\n        <React.Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route path=\"/app/account\" component={Account} {...props} />\n            <Route path=\"/app/stores\" component={Store} {...props} />\n            <AuthenticatedRoute path={`${DASHBOARD_ROUTE}`} component={Dashboard} />\n            <Route path={PROCUREMENT_ROUTE} component={Procurement} {...props} />\n            <Route path={REQUEST_ROUTE} component={Request} {...props} />\n            <AuthenticatedRoute path={MY_REQUESTS_ROUTE} component={MyRequest} />\n            <AuthenticatedRoute path={DEPARTMENTS_ROUTE} component={Department} /> \\\n            <AuthenticatedRoute path={SUPPLIERS_ROUTE} component={Supplier} />\n            <AuthenticatedRoute path={EMPLOYEE_ROUTE}  component={Employee} />\n            <AuthenticatedRoute exact path={HOME_ROUTE}  component={Home} />\n            <AuthenticatedRoute path=\"/app/settings\" component={Settings} {...props} />\n            <Route path={LOGIN_ROUTE} component={Login} />\n            <Route path=\"/not-authorized\" component={NotAuthorized} />\n            <AuthenticatedRoute path=\"/\"><Redirect to={HOME_ROUTE}/></AuthenticatedRoute>\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  authUser: store.auth.user\n})\n\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  LOGIN\r\n  LOGIN_SUCCESS\r\n  LOGIN_FAILURE\r\n  LOGOUT\r\n  \r\n\r\n  RESET_AUTH\r\n\r\n`,\r\n  {}\r\n);","import { getLocalState, getLocalStateObject } from '../../app-storage'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\nimport Types from './actionTypes'\r\n\r\nimport { createReducer } from 'reduxsauce'\r\n\r\nconst LOCAL_STORE_USER = getLocalStateObject(AUTH_USER_KEY)\r\nconst LOCAL_STORE_TOKEN = getLocalState(AUTH_TOKEN_KEY)\r\n\r\nconsole.log('YES TOKEN', LOCAL_STORE_TOKEN, 'TOKEN KEY', AUTH_TOKEN_KEY)\r\n\r\nconsole.log('INIT USER', LOCAL_STORE_USER)\r\n\r\nconst INITIAL_USER = {\r\n  id: undefined,\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  fullName: \"\",\r\n  email: \"\",\r\n  phoneNo: \"\",\r\n  department: {id: undefined, name: \"\", description: \"\"},\r\n  enabled: false,\r\n  role: \"\",\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  user: LOCAL_STORE_USER ? LOCAL_STORE_USER : INITIAL_USER,\r\n  token: LOCAL_STORE_TOKEN ? LOCAL_STORE_TOKEN : null,\r\n  loading: false\r\n}\r\n\r\n\r\n\r\nexport const login = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    error: null,\r\n    loading: true,\r\n    token: null\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (state = INITIAL_STATE, action) => {\r\n  const { employee, token } = action.responseData\r\n  console.log('user', employee)\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    user: { ...employee, role: employee.role[0] },\r\n    token: token\r\n  };\r\n};\r\n\r\nexport const loginFailure = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    error: action.error,\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const logout = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const resetAuth = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    token: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\n\r\nexport const HANDLERS = {\r\n  [Types.LOGIN]: login,\r\n  [Types.LOGIN_SUCCESS]: loginSuccess,\r\n  [Types.LOGIN_FAILURE]: loginFailure,\r\n\r\n  [Types.LOGOUT]: logout,\r\n  \r\n\r\n  [Types.RESET_AUTH]: resetAuth,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_DEPARTMENTS\r\n  FETCH_DEPARTMENTS_SUCCESS\r\n  FETCH_DEPARTMENTS_FAILURE\r\n\r\n  GET_DEPARTMENT\r\n  GET_DEPARTMENT_SUCCESS\r\n  GET_DEPARTMENT_FAILURE\r\n\r\n  CREATE_DEPARTMENT\r\n  CREATE_DEPARTMENT_SUCCESS\r\n  CREATE_DEPARTMENT_FAILURE\r\n\r\n  UPDATE_DEPARTMENT\r\n  UPDATE_DEPARTMENT_SUCCESS\r\n  UPDATE_DEPARTMENT_FAILURE\r\n\r\n  DELETE_DEPARTMENT\r\n  DELETE_DEPARTMENT_SUCCESS\r\n  DELETE_DEPARTMENT_FAILURE\r\n\r\n  RESET_DEPARTMENT\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  departments: [],\r\n  loading: false,\r\n  submitting: false,\r\n  department: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchDepartments = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false, submitSuccess: false };\r\n};\r\n\r\nexport const fetchDepartmentsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, departments: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchDepartmentsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('REDUCER', action)\r\n  return { ...state, departments: state.departments.concat([action.responseData]), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSucces: false};\r\n};\r\n\r\n//edit\r\nexport const updateDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('lets update dept reducer', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteDepartment = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const deleteDepartmentSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    departments: state.departments.filter(item=> item.id !== departmentId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteDepartmentFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\nexport const resetDepartment = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    departments: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSucces: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_DEPARTMENTS]: fetchDepartments,\r\n  [Types.FETCH_DEPARTMENTS_SUCCESS]: fetchDepartmentsSuccess,\r\n  [Types.FETCH_DEPARTMENTS_FAILURE]: fetchDepartmentsFailure,\r\n\r\n  [Types.CREATE_DEPARTMENT]: createDepartment,\r\n  [Types.CREATE_DEPARTMENT_SUCCESS]: createDepartmentSuccess,\r\n  [Types.CREATE_DEPARTMENT_FAILURE]: createDepartmentFailure,\r\n\r\n  [Types.UPDATE_DEPARTMENT]: updateDepartment,\r\n  [Types.UPDATE_DEPARTMENT_SUCCESS]: updateDepartmentSuccess,\r\n  [Types.UPDATE_DEPARTMENT_FAILURE]: updateDepartmentFailure,\r\n\r\n  [Types.DELETE_DEPARTMENT]: deleteDepartment,\r\n  [Types.DELETE_DEPARTMENT_SUCCESS]: deleteDepartmentSuccess,\r\n  [Types.DELETE_DEPARTMENT_FAILURE]: deleteDepartmentFailure,\r\n  \r\n  [Types.RESET_DEPARTMENT]: resetDepartment\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_SUPPLIERS\r\n  FETCH_SUPPLIERS_SUCCESS\r\n  FETCH_SUPPLIERS_FAILURE\r\n\r\n  CREATE_SUPPLIER\r\n  CREATE_SUPPLIER_SUCCESS\r\n  CREATE_SUPPLIER_FAILURE\r\n\r\n  UPDATE_SUPPLIER\r\n  UPDATE_SUPPLIER_SUCCESS\r\n  UPDATE_SUPPLIER_FAILURE\r\n\r\n  GET_SUPPLIER\r\n  GET_SUPPLIER_SUCCESS\r\n  GET_SUPPLIER_FAILURE\r\n\r\n  DELETE_SUPPLIER\r\n  DELETE_SUPPLIER_SUCCESS\r\n  DELETE_SUPPLIER_FAILURE\r\n\r\n  RESET_SUPPLIERS\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  suppliers: [],\r\n  supplier: {},\r\n  loaidng: false,\r\n  submitting: false,\r\n  submitSuccess: false\r\n};\r\n\r\n\r\n//fetch\r\nexport const fetchSuppliers = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const fetchSuppliersSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, suppliers: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchSuppliersFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null };\r\n};\r\n\r\nexport const getSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, supplier: action.responseData, loading: false};\r\n};\r\n\r\nexport const getSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const createSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('ADD SUPPLIER REDUCER', action)\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: true};\r\n};\r\n\r\nexport const createSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//edit\r\nexport const updateSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const updateSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('action update success', action)\r\n  const { responseData } = action\r\n  return { \r\n    ...state, \r\n    submitSuccess: true,\r\n    suppliers: state.suppliers.map(supplier=> {\r\n      if(supplier.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return supplier;\r\n      }\r\n    }), \r\n    submitting: false, error: action.error\r\n  };\r\n};\r\n\r\nexport const updateSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//delete\r\nexport const deleteSupplier = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, error: null, submitSuccess: false};\r\n};\r\n\r\nexport const deleteSupplierSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('------>id', state.suppliers.filter(item => item.id !== action.supplierId))\r\n  return { \r\n    ...state, \r\n    suppliers: state.suppliers.filter(item => item.id !== action.supplierId),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const deleteSupplierFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\nexport const resetSuppliers = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    suppliers: [],\r\n    error: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_SUPPLIERS]: fetchSuppliers,\r\n  [Types.FETCH_SUPPLIERS_SUCCESS]: fetchSuppliersSuccess,\r\n  [Types.FETCH_SUPPLIERS_FAILURE]: fetchSuppliersFailure,\r\n\r\n  [Types.CREATE_SUPPLIER]: createSupplier,\r\n  [Types.CREATE_SUPPLIER_SUCCESS]: createSupplierSuccess,\r\n  [Types.CREATE_SUPPLIER_FAILURE]: createSupplierFailure,\r\n\r\n  [Types.UPDATE_SUPPLIER]: updateSupplier,\r\n  [Types.UPDATE_SUPPLIER_SUCCESS]: updateSupplierSuccess,\r\n  [Types.UPDATE_SUPPLIER_FAILURE]: updateSupplierFailure,\r\n\r\n  [Types.DELETE_SUPPLIER]: deleteSupplier,\r\n  [Types.DELETE_SUPPLIER_SUCCESS]: deleteSupplierSuccess,\r\n  [Types.DELETE_SUPPLIER_FAILURE]: deleteSupplierFailure,\r\n\r\n  [Types.GET_SUPPLIER]: getSupplier,\r\n  [Types.GET_SUPPLIER_SUCCESS]: getSupplierSuccess,\r\n  [Types.GET_SUPPLIER_FAILURE]: getSupplierFailure,\r\n\r\n  [Types.RESET_SUPPLIERS]: resetSuppliers,\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUESTS\r\n  FETCH_REQUESTS_SUCCESS\r\n  FETCH_REQUESTS_FAILURE\r\n\r\n  GET_REQUEST\r\n  GET_REQUEST_SUCCESS\r\n  GET_REQUEST_FAILURE\r\n\r\n  CREATE_REQUEST\r\n  CREATE_REQUEST_SUCCESS\r\n  CREATE_REQUEST_FAILURE\r\n\r\n  UPDATE_REQUEST\r\n  UPDATE_REQUEST_SUCCESS\r\n  UPDATE_REQUEST_FAILURE\r\n\r\n  DELETE_REQUEST\r\n  DELETE_REQUEST_SUCCESS\r\n  DELETE_REQUEST_FAILURE\r\n\r\n  RESET_REQUEST\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requests: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n  department: {}\r\n};\r\n\r\n//fetch\r\nexport const fetchRequests = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requests: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, department: action.responseData, loading: false};\r\n};\r\n\r\nexport const getRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { depratmentId, responseData } = action\r\n  return { \r\n    ...state,\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteRequest = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false };\r\n};\r\n\r\nexport const deleteRequestSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId } = action\r\n  return { \r\n    ...state, \r\n    requests: state.requests.filter(item=> item.id !== departmentId),\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const deleteRequestFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequest = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requests: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUESTS]: fetchRequests,\r\n  [Types.FETCH_REQUESTS_SUCCESS]: fetchRequestsSuccess,\r\n  [Types.FETCH_REQUESTS_FAILURE]: fetchRequestsFailure,\r\n\r\n  [Types.CREATE_REQUEST]: createRequest,\r\n  [Types.CREATE_REQUEST_SUCCESS]: createRequestSuccess,\r\n  [Types.CREATE_REQUEST_FAILURE]: createRequestFailure,\r\n\r\n  [Types.UPDATE_REQUEST]: updateRequest,\r\n  [Types.UPDATE_REQUEST_SUCCESS]: updateRequestSuccess,\r\n  [Types.UPDATE_REQUEST_FAILURE]: updateRequestFailure,\r\n\r\n  [Types.DELETE_REQUEST]: deleteRequest,\r\n  [Types.DELETE_REQUEST_SUCCESS]: deleteRequestSuccess,\r\n  [Types.DELETE_REQUEST_FAILURE]: deleteRequestFailure,\r\n  \r\n  [Types.RESET_REQUEST]: resetRequest\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_EMPLOYEES\r\n  FETCH_EMPLOYEES_SUCCESS\r\n  FETCH_EMPLOYEES_FAILURE\r\n\r\n  GET_EMPLOYEE\r\n  GET_EMPLOYEE_SUCCESS\r\n  GET_EMPLOYEE_FAILURE\r\n\r\n  CREATE_EMPLOYEE\r\n  CREATE_EMPLOYEE_SUCCESS\r\n  CREATE_EMPLOYEE_FAILURE\r\n\r\n  UPDATE_EMPLOYEE\r\n  UPDATE_EMPLOYEE_SUCCESS\r\n  UPDATE_EMPLOYEE_FAILURE\r\n\r\n  DELETE_EMPLOYEE\r\n  DELETE_EMPLOYEE_SUCCESS\r\n  DELETE_EMPLOYEE_FAILURE\r\n\r\n  RESET_EMPLOYEE\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  employees: [],\r\n  loading: false,\r\n  submitting: false,\r\n  employee: {},\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchEmployees = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchEmployeesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employees: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchEmployeesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//get\r\nexport const getEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const getEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, employee: action.responseData, loading: false};\r\n};\r\n\r\nexport const getEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//create\r\nexport const createEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('resposeData', action.responseData)\r\n  return { ...state, employees: state.employees.concat(action.responseData), submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n//edit\r\nexport const updateEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  const { departmentId, responseData } = action\r\n  return { \r\n    ...state, \r\n    employees: state.employees.map(item=> {\r\n      if(item.id === responseData.id) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\n//delete\r\nexport const deleteEmployee = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: true };\r\n};\r\n\r\nexport const deleteEmployeeSuccess = (state = INITIAL_STATE, action) => {\r\n  console.log('delete action', action)\r\n  const { employeeId } = action.responseData\r\n  return { \r\n    ...state, \r\n    employees: state.employees.filter(item=> item.id !== employeeId),\r\n    submitting: false,\r\n    loading: false\r\n  };\r\n};\r\n\r\nexport const deleteEmployeeFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, loading: false};\r\n};\r\n\r\n\r\nexport const resetEmployee = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    employees: [],\r\n    employee: {},\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_EMPLOYEES]: fetchEmployees,\r\n  [Types.FETCH_EMPLOYEES_SUCCESS]: fetchEmployeesSuccess,\r\n  [Types.FETCH_EMPLOYEES_FAILURE]: fetchEmployeesFailure,\r\n\r\n  [Types.CREATE_EMPLOYEE]: createEmployee,\r\n  [Types.CREATE_EMPLOYEE_SUCCESS]: createEmployeeSuccess,\r\n  [Types.CREATE_EMPLOYEE_FAILURE]: createEmployeeFailure,\r\n\r\n  [Types.UPDATE_EMPLOYEE]: updateEmployee,\r\n  [Types.UPDATE_EMPLOYEE_SUCCESS]: updateEmployeeSuccess,\r\n  [Types.UPDATE_EMPLOYEE_FAILURE]: updateEmployeeFailure,\r\n\r\n  [Types.DELETE_EMPLOYEE]: deleteEmployee,\r\n  [Types.DELETE_EMPLOYEE_SUCCESS]: deleteEmployeeSuccess,\r\n  [Types.DELETE_EMPLOYEE_FAILURE]: deleteEmployeeFailure,\r\n  \r\n  [Types.RESET_EMPLOYEE]: resetEmployee\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_QUOTATIONS\r\n  FETCH_QUOTATIONS_SUCCESS\r\n  FETCH_QUOTATIONS_FAILURE\r\n\r\n  UPDATE_QUOTATION\r\n  UPDATE_QUOTATION_SUCCESS\r\n  UPDATE_QUOTATION_FAILURE\r\n\r\n  RESET_QUOTATION\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  quotations: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false\r\n};\r\n\r\n//fetch\r\nexport const fetchQuotations = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchQuotationsSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, quotations: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchQuotationsFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n//edit\r\nexport const updateQuotation = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const updateQuotationSuccess = (state = INITIAL_STATE, action) => {\r\n  const { quotationId, responseData } = action\r\n  return { \r\n    ...state, \r\n    quotations: state.quotations.map(item=> {\r\n      if(item.id === quotationId) {\r\n        return responseData\r\n      } else {\r\n        return item\r\n      }\r\n    }),\r\n    submitting: false,\r\n    submitSuccess: true\r\n  };\r\n};\r\n\r\nexport const updateQuotationFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error, submitSuccess: false};\r\n};\r\n\r\n\r\nexport const resetQuotation = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    quotations: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_QUOTATIONS]: fetchQuotations,\r\n  [Types.FETCH_QUOTATIONS_SUCCESS]: fetchQuotationsSuccess,\r\n  [Types.FETCH_QUOTATIONS_FAILURE]: fetchQuotationsFailure,\r\n\r\n  [Types.UPDATE_QUOTATION]: updateQuotation,\r\n  [Types.UPDATE_QUOTATION_SUCCESS]: updateQuotationSuccess,\r\n  [Types.UPDATE_QUOTATION_FAILURE]: updateQuotationFailure,\r\n  \r\n  [Types.RESET_QUOTATION]: resetQuotation\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { createTypes } from \"reduxsauce\";\r\n\r\nexport default createTypes(\r\n  `\r\n  FETCH_REQUEST_CATEGORIES\r\n  FETCH_REQUEST_CATEGORIES_SUCCESS\r\n  FETCH_REQUEST_CATEGORIES_FAILURE\r\n\r\n  CREATE_REQUEST_CATEGORY\r\n  CREATE_REQUEST_CATEGORY_SUCCESS\r\n  CREATE_REQUEST_CATEGORY_FAILURE\r\n\r\n  RESET_REQUEST_CATEGORY\r\n\r\n`,\r\n  {}\r\n);","import { createReducer } from \"reduxsauce\";\r\nimport Types from \"./actionTypes\";\r\n\r\nexport const INITIAL_STATE = {\r\n  errors: null,\r\n  requestCategories: [],\r\n  loading: false,\r\n  submitting: false,\r\n  submitSuccess: false,\r\n};\r\n\r\n//fetch\r\nexport const fetchRequestCategories = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true, errors: null, submitting: false };\r\n};\r\n\r\nexport const fetchRequestCategoriesSuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, requestCategories: action.responseData, loading: false};\r\n};\r\n\r\nexport const fetchRequestCategoriesFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: false, error: action.error};\r\n};\r\n\r\n\r\n//create\r\nexport const createRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: true, errors: null, loading: false, submitSuccess: false };\r\n};\r\n\r\nexport const createRequestCategorySuccess = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, submitSuccess: true};\r\n};\r\n\r\nexport const createRequestCategoryFailure = (state = INITIAL_STATE, action) => {\r\n  return { ...state, submitting: false, error: action.error};\r\n};\r\n\r\n\r\nexport const resetRequestCategory = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    requestCategories: [],\r\n    error: null,\r\n    loading: false,\r\n    submitting: false,\r\n    submitSuccess: false\r\n  };\r\n};\r\n\r\nexport const HANDLERS = {\r\n  [Types.FETCH_REQUEST_CATEGORIES]: fetchRequestCategories,\r\n  [Types.FETCH_REQUEST_CATEGORIES_SUCCESS]: fetchRequestCategoriesSuccess,\r\n  [Types.FETCH_REQUEST_CATEGORIES_FAILURE]: fetchRequestCategoriesFailure,\r\n\r\n  [Types.CREATE_REQUEST_CATEGORY]: createRequestCategory,\r\n  [Types.CREATE_REQUEST_CATEGORY_SUCCESS]: createRequestCategorySuccess,\r\n  [Types.CREATE_REQUEST_CATEGORY_FAILURE]: createRequestCategoryFailure,\r\n  \r\n  [Types.RESET_REQUEST_CATEGORY]: resetRequestCategory\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS);\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth/reducers'\r\nimport departmentReducer from './department/reducers'\r\nimport supplierReducer from './supplier/reducers'\r\nimport requestReducer from './request/reducers'\r\nimport employeeReducer from './employee/reducers'\r\nimport QuotationReducer from './quotation/reducers'\r\nimport requestCategoryReducer from './request-category/reducers'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  department: departmentReducer,\r\n  supplier: supplierReducer,\r\n  request: requestReducer,\r\n  employee: employeeReducer,\r\n  quotation: QuotationReducer,\r\n  requestCategory: requestCategoryReducer\r\n})","import { call, put, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/auth/actions'\r\n\r\nimport {\r\n  signIn\r\n} from '../../api/auth'\r\nimport { clearLocalState, storeLocalState } from '../../app-storage'\r\nimport { history } from '../../../util/browser-history'\r\nimport openNotification from '../../../util/notification'\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from '../../app-storage/key-values'\r\nimport { HOME_ROUTE, LOGIN_ROUTE } from '../../../util/routes'\r\n\r\n\r\nexport function* login(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const { email, password } = action.payload\r\n\r\n    const response = yield call(signIn, { email, password })\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      storeLocalState(AUTH_TOKEN_KEY, responseData.token)\r\n      storeLocalState(AUTH_USER_KEY, { ...responseData.employee, role: responseData.employee.role[0] })\r\n      yield put(Creators.loginSuccess(responseData))\r\n      history.push(HOME_ROUTE)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.loginFailue(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Invalid credentials'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.loginFailure(message))\r\n  }\r\n}\r\n\r\nexport function* logout(action) {\r\n  yield put(Creators.logout(null))\r\n  clearLocalState(AUTH_USER_KEY)\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  history.push(LOGIN_ROUTE)\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLeading(Types.LOGIN, login)\r\n}\r\n\r\nexport function* watchLogout() {\r\n  yield takeLeading(Types.LOGOUT, logout)\r\n}","import apiRequest from \"../apiRequest\";\r\nimport { DEPARTMENTS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getDepartments(query) {\r\n  return apiRequest({\r\n    method: 'GET',\r\n    url: `${DEPARTMENTS_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}\r\n\r\nexport function saveDepartment(data) {\r\n  console.log('data api', data)\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${DEPARTMENTS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateDepartment(deptId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteDepartment(deptId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${DEPARTMENTS_ENDPOINT}${deptId}`\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/department/actions'\r\n\r\nimport {\r\n  getDepartments,\r\n  deleteDepartment as deleteDepartmentApi,\r\n  updateDepartment as updateDepartmentApi,\r\n  saveDepartment,\r\n  getDepartment as getDepartmentApi\r\n} from '../../api/department'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchDepartments(action) {\r\n  try {\r\n    const response = yield call(getDepartments, {})\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchDepartmentsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchDepartmentsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchDepartmentsFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getDepartment(action) {\r\n  try {\r\n    const response = yield call(getDepartmentApi, action.departmentId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createDepartment(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(saveDepartment, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      yield put(Creators.createDepartmentSuccess(responseData))\r\n      openNotification('success', 'CREATE DEPARTMENT', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId, payload } = action\r\n  try {\r\n    const response = yield call(updateDepartmentApi, departmentId, payload)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      openNotification('success', 'Update Department', response.message)\r\n      yield put(Creators.updateDepartmentSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteDepartment(action) {\r\n  console.log('action', action)\r\n  const { departmentId } = action\r\n  try {\r\n    const response = yield call(deleteDepartmentApi, departmentId)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      openNotification('success', 'Delete Department', response.message)\r\n      yield put(Creators.deleteDepartmentSuccess(departmentId))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteDepartmentFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateDepartmentFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchDepartments(action) {\r\n  yield takeLatest(Types.FETCH_DEPARTMENTS, fetchDepartments)\r\n}\r\n\r\nexport function* watchCreateDepartment(action) {\r\n  yield takeLatest(Types.CREATE_DEPARTMENT, createDepartment)\r\n}\r\n\r\nexport function* watchUpdateDepartment(action) {\r\n  yield takeLatest(Types.UPDATE_DEPARTMENT, updateDepartment)\r\n}\r\n\r\nexport function* watchDeleteDepartment(action) {\r\n  yield takeLatest(Types.DELETE_DEPARTMENT, deleteDepartment)\r\n}\r\n\r\nexport function* watchGetDepartment(action) {\r\n  yield takeLatest(Types.GET_DEPARTMENT, getDepartment)\r\n}","import { call, put, takeLatest, takeLeading } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/supplier/actions'\r\n\r\nimport {\r\n  getSuppliers,\r\n  deleteSupplier as deleteSupplierApi,\r\n  updateSupplier as updateSupplierApi,\r\n  saveSupplier\r\n} from '../../api/supplier'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchSuppliers(action) {\r\n  try {\r\n    const response = yield call(getSuppliers, {})\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchSuppliersSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchSuppliersFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchSuppliersFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createSupplier(action) {\r\n  console.log('payload', action)\r\n  try {\r\n    const response = yield call(saveSupplier, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      openNotification('success', 'CREATE SUPPLIER', response.message)\r\n      yield put(Creators.fetchSuppliers({}))\r\n      yield put(Creators.createSupplierSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateSupplier(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateSupplierApi, action.supplierId, action.payload)\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      openNotification('success', 'update supplier', response.message)\r\n      yield put(Creators.updateSupplierSuccess({id: action.supplierId, ...action.payload}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteSupplier(action) {\r\n  const  {supplierId} = action\r\n  console.log('---------->saga supplier id', supplierId)\r\n  try {\r\n    const response = yield call(deleteSupplierApi, supplierId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      console.log('about to call supplier delete success')\r\n      yield put(Creators.deleteSupplierSuccess(supplierId))\r\n      openNotification('success', 'Delete Supplier', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteSupplierFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Suppliers'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateSupplierFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchSuppliers(action) {\r\n  yield takeLatest(Types.FETCH_SUPPLIERS, fetchSuppliers)\r\n}\r\n\r\nexport function* watchCreateSupplier(action) {\r\n  yield takeLeading(Types.CREATE_SUPPLIER, createSupplier)\r\n}\r\n\r\nexport function* watchUpdateSupplier(action) {\r\n  yield takeLatest(Types.UPDATE_SUPPLIER, updateSupplier)\r\n}\r\n\r\nexport function* watchDeleteSupplier(action) {\r\n  yield takeLatest(Types.DELETE_SUPPLIER, deleteSupplier)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/employee/actions'\r\n\r\nimport {\r\n  getUsers as fetchEmployeesApi,\r\n  deleteUser as deleteEmployeeApi,\r\n  updateUser as updateEmployeeApi,\r\n  saveUser as saveEmployeeApi,\r\n  getUser as getEmployeeApi\r\n} from '../../api/employee'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchEmployees(action) {\r\n  try {\r\n    const response = yield call(fetchEmployeesApi, {})\r\n    if(response.status === 'SUCCESS') {\r\n      const responseData = response.data\r\n      yield put(Creators.fetchEmployeesSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchEmployeesFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchEmployeesFailure(message))\r\n  }\r\n}\r\n\r\nexport function* getEmployee(action) {\r\n  try {\r\n    const response = yield call(getEmployeeApi, action.EmployeeId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.getEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.getEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.getEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* createEmployee(action) {\r\n  try {\r\n    const response = yield call(saveEmployeeApi, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      console.log('data', responseData)\r\n      openNotification('success', 'CREATE Employee', response.message)\r\n      yield put(Creators.createEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Create Employee', response.message)\r\n      yield put(Creators.createEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to create Employees'\r\n    openNotification('error', 'Create Employee', message)\r\n    yield put(Creators.createEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateEmployeeApi, action.employeeId, action.payload)\r\n    if(response.status === 'CREATED') {\r\n      const responseData = response.data\r\n      yield put(Creators.updateEmployeeSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\nexport function* deleteEmployee(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(deleteEmployeeApi, action.employeeId)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      openNotification('success', 'delete employee', response.message)\r\n      yield put(Creators.deleteEmployeeSuccess({employeeId: action.employeeId}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.deleteEmployeeFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateEmployeeFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* watchFetchEmployees(action) {\r\n  yield takeLatest(Types.FETCH_EMPLOYEES, fetchEmployees)\r\n}\r\n\r\nexport function* watchCreateEmployee(action) {\r\n  yield takeLatest(Types.CREATE_EMPLOYEE, createEmployee)\r\n}\r\n\r\nexport function* watchUpdateEmployee(action) {\r\n  yield takeLatest(Types.UPDATE_EMPLOYEE, updateEmployee)\r\n}\r\n\r\nexport function* watchDeleteEmployee(action) {\r\n  yield takeLatest(Types.DELETE_EMPLOYEE, deleteEmployee)\r\n}\r\n\r\nexport function* watchGetEmployee(action) {\r\n  yield takeLatest(Types.GET_EMPLOYEE, getEmployee)\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request/actions'\r\n\r\nimport {\r\n  fetchRequests as fetchRequestsApi,\r\n  updateRequest as updateRequestApi,\r\n  saveRequest as createRequestApi,\r\n} from '../../api/item-request'\r\nimport openNotification from '../../../util/notification'\r\nimport { clearLocalState } from '../../app-storage'\r\n\r\n\r\nexport function* fetchRequests(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(fetchRequestsApi, action.query)\r\n    const responseData = response.data\r\n    yield put(Creators.fetchRequestsSuccess(responseData))\r\n    // if(response.status === 'FOUND') {\r\n    //   const responseData = response.data\r\n    //   yield put(Creators.fetchRequestsSuccess(responseData))\r\n    // } else {\r\n    //   openNotification('error', 'Login', response.message)\r\n    //   yield put(Creators.fetchRequestsFailure(response.message))\r\n    // }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchRequestsFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequest(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestSuccess(responseData))\r\n      clearLocalState(\"NEW-REQUEST\")\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createRequestFailure(message))\r\n  }\r\n}\r\n\r\nexport function* updateRequest(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const response = yield call(updateRequestApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response?.data\r\n      console.log('API RESPONSE DAYA', responseData)\r\n      openNotification('success', 'Update Request', response.message)\r\n      yield put(Creators.updateRequestSuccess(responseData || {}))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.updateRequestFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch departments'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateRequestFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequest(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\nexport function* watchFetchRequests(action) {\r\n  yield takeLatest(Types.FETCH_REQUESTS, fetchRequests)\r\n}\r\n\r\nexport function* watchCreateRequest(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST, createRequest)\r\n}\r\n\r\nexport function* watchUpdateRequest(action) {\r\n  yield takeLatest(Types.UPDATE_REQUEST, updateRequest)\r\n}\r\n","import service from '../apiRequest'\r\nimport { FETCH_REQUEST_TYPES, UPDATE_REQUEST_TYPES } from '../../../util/request-types'\r\nimport { ALL_QUOTATIONS, QUOTATIONS_WITHOUT_DOCUMENT } from '../../../util/quotation-types'\r\n\r\n\r\nconst path = \"/quotations\"\r\nexport function assignRequestDocument(payload){\r\n  return service({\r\n    url: `${path}/${payload.quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\nexport function getAllQuotationsWithoutDocuments(query) {\r\n  return service({\r\n    url: `${path}/withoutDocument`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getQuotations(query) {\r\n  return service({\r\n    url:  `${path}/all`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\nexport function getAllQuotations(query) {\r\n  console.log('query api', query)\r\n  const { requestType } = query\r\n  switch(requestType) {\r\n    case ALL_QUOTATIONS:\r\n      return getQuotations()\r\n    case QUOTATIONS_WITHOUT_DOCUMENT:\r\n      return getAllQuotationsWithoutDocuments()\r\n    default:\r\n      return getQuotations()\r\n  }\r\n}\r\n\r\nexport function updateQuotation(quotationId, payload) {\r\n  console.log('payload', payload)\r\n  return service({\r\n    url: `${path}/${quotationId}/assignRequestDocument/${payload.documentId}`,\r\n    method: 'PUT',\r\n    data: payload\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/quotation/actions'\r\n\r\nimport {\r\n  getAllQuotations as getAllQuotationsApi,\r\n  updateQuotation as updateQuotationApi\r\n} from '../../api/quotation'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchQuotations(action) {\r\n  console.log('fetch quotations saga', action)\r\n  try {\r\n    const response = yield call(getAllQuotationsApi, action.query)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      console.log('response data', responseData)\r\n      yield put(Creators.fetchQuotationsSuccess(responseData))\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.fetchQuotationsFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchQuotationsFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* updateQuotation(action) {\r\n  console.log('action', action)\r\n  const {quotationId, payload} = action\r\n  try {\r\n    const response = yield call(updateQuotationApi, quotationId, payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.updateQuotationSuccess(responseData))\r\n      openNotification('success', 'Update Quotation', response.message)\r\n      //yield put(Creators.fetchQuotations({}))\r\n    } else {\r\n      openNotification('error', 'Update Quotation', response.message)\r\n      yield put(Creators.updateQuotationFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch Employees'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.updateQuotationFailure(message))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function* watchFetchQuotations(action) {\r\n  yield takeLatest(Types.FETCH_QUOTATIONS, fetchQuotations)\r\n}\r\n\r\nexport function* watchUpdateQuotation(action) {\r\n  yield takeLatest(Types.UPDATE_QUOTATION, updateQuotation)\r\n}","import service from '../apiRequest'\r\nconst path = 'requestCategory'\r\n\r\nexport function getRequestCategories() {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function saveRequestCategory(data) {\r\n  return service({\r\n    url: `${path}`,\r\n    method: 'POST',\r\n    data\r\n  })\r\n}","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { Creators, Types } from '../../redux/request-category/actions'\r\n\r\nimport {\r\n  getRequestCategories as getRequestCategoriesApi,\r\n  saveRequestCategory as createRequestCategoryApi\r\n} from '../../api/request-category'\r\nimport openNotification from '../../../util/notification'\r\n\r\n\r\nexport function* fetchRequestCategories(action) {\r\n  console.log('=================>FETCH REQUEST', action)\r\n  try {\r\n    const response = yield call(getRequestCategoriesApi, action.query)\r\n    const responseData = response.data\r\n    yield put(Creators.fetchRequestCategoriesSuccess(responseData))\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to fetch categories'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.fetchRequestCategoriesFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* createRequestCategory(action) {\r\n  console.log('action data', action)\r\n  try {\r\n    const response = yield call(createRequestCategoryApi, action.payload)\r\n    if(response.status === 'OK') {\r\n      const responseData = response.data\r\n      yield put(Creators.createRequestCategorySuccess(responseData))\r\n      openNotification('success', 'CREATE REQUEST', response.message)\r\n    } else {\r\n      openNotification('error', 'Login', response.message)\r\n      yield put(Creators.createRequestCategoryFailure(response.message))\r\n    }\r\n  } catch (error) {\r\n    const message = (error && error.response.data && error.response.data.error) || 'Failed to save category'\r\n    openNotification('error', 'Login', message)\r\n    yield put(Creators.createRequestCategoryFailure(message))\r\n  }\r\n}\r\n\r\n\r\nexport function* resetRequestCategory(action) {\r\n  yield put(Creators.resetRequest())\r\n}\r\n\r\n\r\n\r\nexport function* watchFetchRequestCategories(action) {\r\n  yield takeLatest(Types.FETCH_REQUEST_CATEGORIES, fetchRequestCategories)\r\n}\r\n\r\nexport function* watchCreateRequestCategory(action) {\r\n  yield takeLatest(Types.CREATE_REQUEST_CATEGORY, createRequestCategory)\r\n}\r\n\r\nexport function* watchResetRequestCategory(action) {\r\n  yield takeLatest(Types.RESET_REQUEST_CATEGORY, resetRequestCategory)\r\n}\r\n","import { all } from \"@redux-saga/core/effects\";\r\n\r\nimport {\r\n  watchLogin,\r\n  watchLogout\r\n} from './auth'\r\n\r\nimport {\r\n\twatchFetchDepartments,\r\n\twatchDeleteDepartment,\r\n\twatchUpdateDepartment,\r\n\twatchCreateDepartment\r\n} from './department'\r\n\r\nimport {\r\n\twatchFetchSuppliers,\r\n\twatchCreateSupplier,\r\n\twatchDeleteSupplier,\r\n\twatchUpdateSupplier\r\n} from './supplier'\r\n\r\nimport {\r\n\twatchFetchEmployees,\r\n\twatchCreateEmployee,\r\n\twatchGetEmployee,\r\n\twatchUpdateEmployee,\r\n\twatchDeleteEmployee,\r\n} from './employee'\r\n\r\nimport {\r\n\twatchCreateRequest,\r\n\twatchFetchRequests,\r\n\twatchUpdateRequest\r\n} from './request'\r\n\r\nimport {\r\n\twatchFetchQuotations,\r\n\twatchUpdateQuotation\r\n} from './quotation'\r\n\r\nimport {\r\n\twatchFetchRequestCategories,\r\n\twatchCreateRequestCategory,\r\n\twatchResetRequestCategory\r\n} from './request-category'\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\twatchLogin(),\r\n\t\twatchLogout(),\r\n\r\n\t\twatchCreateDepartment(),\r\n\t\twatchFetchDepartments(),\r\n\t\twatchDeleteDepartment(),\r\n\t\twatchUpdateDepartment(),\r\n\r\n\t\twatchFetchSuppliers(),\r\n\t\twatchCreateSupplier(),\r\n\t\twatchUpdateSupplier(),\r\n\t\twatchDeleteSupplier(),\r\n\t\t\r\n\t\twatchFetchEmployees(),\r\n\t\twatchGetEmployee(),\r\n\t\twatchCreateEmployee(),\r\n\t\twatchUpdateEmployee(),\r\n\t\twatchDeleteEmployee(),\r\n\t\t\r\n\t\twatchFetchRequests(),\r\n\t\twatchCreateRequest(),\r\n\t\twatchUpdateRequest(),\r\n\r\n\t\twatchFetchQuotations(),\r\n\t\twatchUpdateQuotation(),\r\n\r\n\t\twatchFetchRequestCategories(),\r\n\t\twatchCreateRequestCategory(),\r\n\t\twatchResetRequestCategory()\r\n\r\n\t]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from './services/redux/root-reducer';\r\nimport rootSaga from './services/sagas';\r\n\r\n// logger middleware \r\nconst logger = createLogger();\r\n\r\nfunction isDev() {\r\n  return process.env.NODE_ENV === 'development';\r\n}\r\n// saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n//only apply logger middleware on development mode \r\nconst middlewares = [sagaMiddleware, isDev() && logger].filter(Boolean);\r\n\r\n// mount it on the Store\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(...middlewares)\r\n)\r\n// console.log(process.env);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nconsole.log(\"STATE: \", store)\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createActions} from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchSuppliers: [\"query\"],\r\n    fetchSuppliersSuccess: [\"responseData\"],\r\n    fetchSuppliersFailure: [\"error\"],\r\n\r\n    createSupplier: [\"payload\"],\r\n    createSupplierSuccess: [\"responsedata\"],\r\n    createSupplierFailure: [\"error\"],\r\n\r\n    updateSupplier: [\"supplierId\", \"payload\"],\r\n    updateSupplierSuccess: [\"responseData\"],\r\n    updateSupplierFailure: [\"error\"],\r\n\r\n    deleteSupplier: [\"supplierId\"],\r\n    deleteSupplierSuccess: [\"supplierId\"],\r\n    deleteSupplierFailure: [\"error\"],\r\n\r\n    getSupplier: [\"supplierId\"],\r\n    getSupplierSuccess: [\"supplierId\"],\r\n    getSupplierFailure: [\"error\"],\r\n\r\n    resetSuppliers: null\r\n  }\r\n)","export const storeLocalState = (field, data) => {\r\n  try {\r\n    if (typeof data === \"object\") {\r\n      localStorage.setItem(field, JSON.stringify(data));\r\n    } else {\r\n      localStorage.setItem(field, data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error storing in local storage \", err);\r\n  }\r\n};\r\n\r\nexport const getLocalStateAsStringOrObject = (field, field_is_object = false) => {\r\n  try {\r\n    const data = localStorage.getItem(field);\r\n    if (field_is_object) {\r\n      return data;\r\n    } else {\r\n      return JSON.parse(data);\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error fetching from local storage \", err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalState = (field) => {\r\n  try {\r\n    return localStorage.getItem(field);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLocalStateObject = (field) => {\r\n  try {\r\n    return localStorage.getItem(field) && JSON.parse(localStorage.getItem(field));\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const clearLocalState = (field) => {\r\n  try {\r\n    localStorage.removeItem(field);\r\n  } catch (err) {\r\n    console.log(\"Error clearing in local storage \", err);\r\n  }\r\n};\r\n","export const AUTH_TOKEN_KEY = 'AUTH-TOKEN'\r\nexport const AUTH_USER_KEY = 'AUTH-USER'","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequests: [\"query\"],\r\n    fetchRequestsSuccess: [\"responseData\"],\r\n    fetchRequestsFailure: [\"error\"],\r\n\r\n    getRequest: [\"requestId\"],\r\n    getRequestSuccess: [\"responseData\"],\r\n    getRequestFailure: [\"error\"],\r\n\r\n    createRequest: [\"payload\"],\r\n    createRequestSuccess: [\"responsedata\"],\r\n    createRequestFailure: [\"error\"],\r\n\r\n    updateRequest: [\"payload\"],\r\n    updateRequestSuccess: [\"requestId\", \"responseData\"],\r\n    updateRequestFailure: [\"error\"],\r\n\r\n    deleteRequest: [\"requestId\", \"payload\"],\r\n    deleteRequestSuccess: [\"responseData\"],\r\n    deleteRequestFailure: [\"error\"],\r\n\r\n    resetRequest: null\r\n  }\r\n)","export const FETCH_REQUEST_TYPES = {\r\n  MY_REQUESTS: \"MY-REQUESTS\",\r\n  HOD_PENDING_REQUEST: \"HOD-PENDING-REQUESTS\",\r\n  ENDORSED_REQUESTS: \"ENDORSED_REQUESTS\",\r\n  PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS: \"PROCUREMENT-REQUEST\",\r\n  REQUESTS_BY_SUPPLIER: \"REQUEST-BY-SUPPLIER\",\r\n  DOCUMENTED_REQUESTS_BY_SUPPLIER: \"DOCUMENTED-REQUEST-BY-SUPPLIER\"\r\n}\r\n\r\nexport const UPDATE_REQUEST_TYPES = {\r\n  ENDORSE: \"ENDORSE\",\r\n  CANCEL: \"CANCEL\",\r\n  ASSIGN_SUPPLIERS: \"ASSIGN-SUPPLIERS\",\r\n  UPDATE_UNIT_PRICE: \"UPDATE-UNIT-PRICE\",\r\n  APPROVE: \"APPROVE\"\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory()","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchRequestCategories: [\"query\"],\r\n    fetchRequestCategoriesSuccess: [\"responseData\"],\r\n    fetchRequestCategoriesFailure: [\"error\"],\r\n\r\n    createRequestCategory: [\"payload\"],\r\n    createRequestCategorySuccess: [\"responsedata\"],\r\n    createRequestCategoryFailure: [\"error\"],\r\n\r\n    resetRequestCategory: null\r\n  }\r\n)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { getLocalState } from '../../services/app-storage'\r\nimport { AUTH_TOKEN_KEY } from '../../services/app-storage/key-values'\r\nimport { LOGIN_ROUTE, UNAUTHORIZED_ROUTE } from '../../util/routes'\r\n\r\n\r\n\r\nconst AuthenticatedRoute = ({ component: Component, roles, authUser, accessToken, ...rest  })=> {\r\n  return(\r\n    <Route \r\n      {...rest}\r\n      render = {props => {\r\n        const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n        if(!(authUser && accessToken)) {\r\n          return <Redirect to={LOGIN_ROUTE} />\r\n        }\r\n\r\n        if(roles && roles.indexOf(authUser.role) === -1) {\r\n          return <Redirect to={UNAUTHORIZED_ROUTE} />\r\n        }\r\n        return <Component {...props} {...rest} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  authUser: store.auth.user,\r\n  accessToken: store.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(AuthenticatedRoute)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    fetchQuotations: [\"query\"],\r\n    fetchQuotationsSuccess: [\"responseData\"],\r\n    fetchQuotationsFailure: [\"error\"],\r\n\r\n    updateQuotation: [\"quotationId\",\"payload\"],\r\n    updateQuotationSuccess: [\"quotationId\", \"responseData\"],\r\n    updateQuotationFailure: [\"error\"],\r\n\r\n    resetQuotation: null\r\n  }\r\n)","import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions(\r\n  {\r\n    login: [\"payload\"],\r\n    loginSuccess: [\"responseData\"],\r\n    loginFailure: [\"error\"],\r\n\r\n    logout: null,\r\n\r\n    resetAuth: null\r\n  }\r\n)","import apiRequest from \"../apiRequest\";\r\nimport { EMPLOYEE_ENDPOINT } from \"../urls\";\r\n\r\nexport function getUsers() {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getUser(userId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\nexport function saveUser(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `/auth/admin/signup`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateUser(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteUser(userId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}`\r\n  })\r\n}\r\n\r\n\r\nexport function selfChangePassword(userId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${EMPLOYEE_ENDPOINT}${userId}/changePassword`,\r\n    data\r\n  })\r\n}","import { clearLocalState } from \"../../app-storage\";\r\nimport { AUTH_TOKEN_KEY, AUTH_USER_KEY } from \"../../app-storage/key-values\";\r\nimport apiRequest from \"../apiRequest\";\r\nimport { history } from '../../../util/browser-history'\r\nimport { LOGIN_ROUTE } from \"../../../util/routes\";\r\n\r\n\r\nexport function signIn(payload){\r\n  return apiRequest({\r\n    url: `/auth/login/`,\r\n    method: 'POST',\r\n    data: payload,\r\n  })\r\n}\r\n\r\nexport function signOut() {\r\n  clearLocalState(AUTH_TOKEN_KEY)\r\n  clearLocalState(AUTH_USER_KEY)\r\n  history.push(LOGIN_ROUTE)\r\n  //window.location.reload(true)\r\n}\r\n\r\nexport function userHasAnyRole(role, roles) {\r\n  if(!roles) return true\r\n  return roles.indexOf(role) !== -1\r\n}\r\n","import apiRequest from \"../apiRequest\";\r\nimport { SUPPLIERS_ENDPOINT } from \"../urls\";\r\n\r\nexport function getSuppliers() {\r\n  console.log('fetch supplie API')\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}`\r\n  })\r\n}\r\n\r\nexport function getSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"GET\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}\r\n\r\nexport function saveSupplier(data) {\r\n  return apiRequest({\r\n    method: \"POST\",\r\n    url: `${SUPPLIERS_ENDPOINT}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function updateSupplier(supplierId, data) {\r\n  return apiRequest({\r\n    method: \"PUT\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`,\r\n    data\r\n  })\r\n}\r\n\r\nexport function deleteSupplier(supplierId) {\r\n  return apiRequest({\r\n    method: \"DELETE\",\r\n    url: `${SUPPLIERS_ENDPOINT}${supplierId}`\r\n  })\r\n}","import { notification} from 'antd'\r\nconst openNotification = (type, message, description) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  })\r\n}\r\n\r\nexport default openNotification","import axios from \"axios\";\r\nimport { BASE_URL } from \"./urls\";\r\nimport { getLocalState } from \"../app-storage\";\r\nimport { AUTH_TOKEN_KEY } from \"../app-storage/key-values\";\r\nimport openNotification from '../../util/notification'\r\nimport * as authenticationService from './auth'\r\nimport { history } from \"../../util/browser-history\";\r\n\r\nconst apiConfig = {\r\n  timeout: 30000,\r\n  baseURL: BASE_URL,\r\n   \r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  // paramsSerializer: (params) => qs.stringify(params, { indices: false }),\r\n}\r\n\r\nconst request = axios.create(apiConfig)\r\n\r\nrequest.interceptors.request.use((config) => {\r\n  console.log('API CONFIG: ', config)\r\n  const accessToken = getLocalState(AUTH_TOKEN_KEY)\r\n  if(accessToken) {\r\n    config.headers['Authorization'] = `Bearer ${accessToken}`\r\n  }\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\nrequest.interceptors.response.use((response) => {\r\n  \r\n  const { status, statusText } = response\r\n  console.log('status', status)\r\n  if(status === 200) {\r\n    return Promise.resolve(response.data)\r\n  } else if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  }else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(statusText)\r\n}, (error) => {\r\n  console.log('ERROR RESPONSE: ', error.response)\r\n  const { status } = error?.response?.data\r\n  if(status === 401) {\r\n    history.push(\"/not-authorized\")\r\n  } else if(status === 403) {\r\n    authenticationService.signOut()\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default request","import service from '../apiRequest'\r\nimport { FETCH_REQUEST_TYPES, UPDATE_REQUEST_TYPES } from '../../../util/request-types'\r\n\r\n\r\nexport function saveRequest(payload){\r\n  return service({\r\n    url: `/multipleRequestItems`,\r\n    method: 'POST',\r\n    data: payload\r\n  })\r\n}\r\n\r\n\r\nexport function getUserItemRequests(userId) {\r\n  return service({\r\n      url: `/requestItems/employees/${userId}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllItemRequests() {\r\n  return service({\r\n      url: `/requestItems`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function getAllDepartmentItemRequests(departmentId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/departments/${departmentId}/employees/${employeeId}`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function endorseItemRequest(requestId, employeeId){\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/endorse`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function endorseBulkItemRequest(authUserId, data) {\r\n  return service({\r\n      url: `/requestItems/bulkEndorse/employees/${authUserId}`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function approveBulkRequests(data) {\r\n  return service({\r\n      url: `/requestItems/bulkApproval`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function cancelBulkRequest(payload) {\r\n  return service({\r\n      url: `/requestItems/bulkCancel`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestItems(employeeId) {\r\n  return service({\r\n      url: `/requestItems/endorsedItems`,\r\n      method: 'get',\r\n    })\r\n}\r\n\r\nexport function procurementActOnRequest(requestId, employeeId, payload) {\r\n  return service({\r\n      url: `/procurement/${employeeId}/requestItem/${requestId}`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n}\r\n\r\nexport function getGeneralManagerRequests(employeeId) {\r\n  return service({\r\n      url: `/requestItems/employees/${employeeId}/generalManager`,\r\n      method: 'get'\r\n    })\r\n}\r\n\r\nexport function approveRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/approve`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function cancelRequest(requestId, employeeId) {\r\n  return service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/cancel`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n}\r\n\r\nexport function addSuppliersToRequest(data) {\r\n  return service({\r\n      url: `/procurement/assignSuppliers/requestItems`,\r\n      method: 'put',\r\n      data\r\n    })\r\n}\r\n\r\nexport function getEndorsedRequestsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getEndorsedItemsWithMultipleSuppliers() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function procurementUpdateMultiReuqestSupplier(data) {\r\n  return service({\r\n      url: `/procurement/requestItems/multipleInfo`,\r\n      method: 'PUT',\r\n      data\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function getEndorsedItemsWithSupplier(supplierId) {\r\n  return service({\r\n    url: `/procurement/endorsedItemsWithSupplierId/${supplierId}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\nexport function getAllEndorsedRequestsByDepartment() {\r\n  return service({\r\n      url: `/procurement/endorsedItemsWithMultipleSuppliers`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getApprovedRequests() {\r\n  return service({\r\n      url: `/requestItems/approvedItems`,\r\n      method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getRequestsBySupplier() {\r\n  return service({\r\n    url: `/requestItems/`\r\n  })\r\n}\r\n\r\nexport function updateRequest(data) {\r\n  const { updateType, userId, payload } = data\r\n  switch (updateType) {\r\n    case UPDATE_REQUEST_TYPES.ENDORSE:\r\n      return endorseBulkItemRequest(userId, payload)\r\n    case UPDATE_REQUEST_TYPES.CANCEL:\r\n      return cancelBulkRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return addSuppliersToRequest(payload)\r\n    case UPDATE_REQUEST_TYPES.UPDATE_UNIT_PRICE:\r\n      return service({url: `/requestItems/updateRequestItems`, method: 'PUT', data: data.payload})\r\n    case UPDATE_REQUEST_TYPES.APPROVE:\r\n      return service({url: `/requestItems/bulkApproval`, method: 'PUT', data: payload})\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function fetchRequests(query) {\r\n  const { requestType, userId } = query\r\n  switch (requestType) {\r\n    case FETCH_REQUEST_TYPES.MY_REQUESTS:\r\n      return getUserItemRequests(query.userId)\r\n    case FETCH_REQUEST_TYPES.HOD_PENDING_REQUEST:\r\n      return getAllDepartmentItemRequests(query.departmentId, query.userId)\r\n    case FETCH_REQUEST_TYPES.PROCUREMENT_PENDING_ASSIGN_SUPPLIER_REQUESTS:\r\n      return getEndorsedRequestItems(userId)\r\n    case FETCH_REQUEST_TYPES.DOCUMENTED_REQUESTS_BY_SUPPLIER:\r\n      return getEndorsedItemsWithSupplier(query.supplierId)\r\n    case FETCH_REQUEST_TYPES.ENDORSED_REQUESTS:\r\n      return getEndorsedRequestItems(query.userId)\r\n    default:\r\n      return getAllItemRequests();\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}